id: KountRisSdk
language: CSharp
name:
  Default: KountRisSdk
qualifiedName:
  Default: KountRisSdk
type: Assembly
modifiers: {}
items:
- id: Kount.Enums
  commentId: N:Kount.Enums
  language: CSharp
  name:
    CSharp: Kount.Enums
    VB: Kount.Enums
  nameWithType:
    CSharp: Kount.Enums
    VB: Kount.Enums
  qualifiedName:
    CSharp: Kount.Enums
    VB: Kount.Enums
  type: Namespace
  assemblies:
  - KountRisSdk
  modifiers: {}
  items:
  - id: Kount.Enums.EnumHelper
    commentId: T:Kount.Enums.EnumHelper
    language: CSharp
    name:
      CSharp: EnumHelper
      VB: EnumHelper
    nameWithType:
      CSharp: EnumHelper
      VB: EnumHelper
    qualifiedName:
      CSharp: Kount.Enums.EnumHelper
      VB: Kount.Enums.EnumHelper
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Enums
    source:
      remote:
        path: SDK/Kount/Enums/EnumHelper.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: EnumHelper
      path: Kount/Enums/EnumHelper.cs
      startLine: 15
    summary: "\nExtention Helper\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>,<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2017 Kount Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public static class EnumHelper : object'
        VB: >-
          Public Module EnumHelper

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes)
      commentId: M:Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes)
      language: CSharp
      name:
        CSharp: GetValueAsString(PaymentTypes)
        VB: GetValueAsString(PaymentTypes)
      nameWithType:
        CSharp: EnumHelper.GetValueAsString(PaymentTypes)
        VB: EnumHelper.GetValueAsString(PaymentTypes)
      qualifiedName:
        CSharp: Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes)
        VB: Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/EnumHelper.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetValueAsString
        path: Kount/Enums/EnumHelper.cs
        startLine: 22
      summary: "\nExtend functionality of PaymentTypes enum\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetValueAsString(this PaymentTypes paymentType)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetValueAsString(paymentType As PaymentTypes) As String
        parameters:
        - id: paymentType
          type: Kount.Enums.PaymentTypes
          description: PaymentTypes enum
        return:
          type: System.String
          description: Value definition in Description attribute
      overload: Kount.Enums.EnumHelper.GetValueAsString*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Kount.Enums.InquiryTypes
    commentId: T:Kount.Enums.InquiryTypes
    language: CSharp
    name:
      CSharp: InquiryTypes
      VB: InquiryTypes
    nameWithType:
      CSharp: InquiryTypes
      VB: InquiryTypes
    qualifiedName:
      CSharp: Kount.Enums.InquiryTypes
      VB: Kount.Enums.InquiryTypes
    type: Enum
    assemblies:
    - KountRisSdk
    namespace: Kount.Enums
    source:
      remote:
        path: SDK/Kount/Enums/InquiryTypes.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: InquiryTypes
      path: Kount/Enums/InquiryTypes.cs
      startLine: 13
    summary: "\nInquiry type should be used for initial registration of the purchase in the Kount system.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>,<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2017 Kount Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum InquiryTypes : int'
        VB: Public Enum InquiryTypes As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Kount.Enums.InquiryTypes.ModeQ
      commentId: F:Kount.Enums.InquiryTypes.ModeQ
      language: CSharp
      name:
        CSharp: ModeQ
        VB: ModeQ
      nameWithType:
        CSharp: InquiryTypes.ModeQ
        VB: InquiryTypes.ModeQ
      qualifiedName:
        CSharp: Kount.Enums.InquiryTypes.ModeQ
        VB: Kount.Enums.InquiryTypes.ModeQ
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/InquiryTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ModeQ
        path: Kount/Enums/InquiryTypes.cs
        startLine: 18
      summary: "\nDefault inquiry mode, internet order type\n"
      example: []
      syntax:
        content:
          CSharp: ModeQ = null
          VB: ModeQ = Nothing
        return:
          type: Kount.Enums.InquiryTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.InquiryTypes.ModeP
      commentId: F:Kount.Enums.InquiryTypes.ModeP
      language: CSharp
      name:
        CSharp: ModeP
        VB: ModeP
      nameWithType:
        CSharp: InquiryTypes.ModeP
        VB: InquiryTypes.ModeP
      qualifiedName:
        CSharp: Kount.Enums.InquiryTypes.ModeP
        VB: Kount.Enums.InquiryTypes.ModeP
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/InquiryTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ModeP
        path: Kount/Enums/InquiryTypes.cs
        startLine: 23
      summary: "\nUsed to analyze a phone-received order\n"
      example: []
      syntax:
        content:
          CSharp: ModeP = null
          VB: ModeP = Nothing
        return:
          type: Kount.Enums.InquiryTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.InquiryTypes.ModeW
      commentId: F:Kount.Enums.InquiryTypes.ModeW
      language: CSharp
      name:
        CSharp: ModeW
        VB: ModeW
      nameWithType:
        CSharp: InquiryTypes.ModeW
        VB: InquiryTypes.ModeW
      qualifiedName:
        CSharp: Kount.Enums.InquiryTypes.ModeW
        VB: Kount.Enums.InquiryTypes.ModeW
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/InquiryTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ModeW
        path: Kount/Enums/InquiryTypes.cs
        startLine: 28
      summary: "\nKount Central full inquiry with returned thresholds\n"
      example: []
      syntax:
        content:
          CSharp: ModeW = null
          VB: ModeW = Nothing
        return:
          type: Kount.Enums.InquiryTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.InquiryTypes.ModeJ
      commentId: F:Kount.Enums.InquiryTypes.ModeJ
      language: CSharp
      name:
        CSharp: ModeJ
        VB: ModeJ
      nameWithType:
        CSharp: InquiryTypes.ModeJ
        VB: InquiryTypes.ModeJ
      qualifiedName:
        CSharp: Kount.Enums.InquiryTypes.ModeJ
        VB: Kount.Enums.InquiryTypes.ModeJ
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/InquiryTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ModeJ
        path: Kount/Enums/InquiryTypes.cs
        startLine: 33
      summary: "\nKount Central fast inquiry with just thresholds\n"
      example: []
      syntax:
        content:
          CSharp: ModeJ = null
          VB: ModeJ = Nothing
        return:
          type: Kount.Enums.InquiryTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Kount.Enums.PaymentTypes
    commentId: T:Kount.Enums.PaymentTypes
    language: CSharp
    name:
      CSharp: PaymentTypes
      VB: PaymentTypes
    nameWithType:
      CSharp: PaymentTypes
      VB: PaymentTypes
    qualifiedName:
      CSharp: Kount.Enums.PaymentTypes
      VB: Kount.Enums.PaymentTypes
    type: Enum
    assemblies:
    - KountRisSdk
    namespace: Kount.Enums
    source:
      remote:
        path: SDK/Kount/Enums/PaymentTypes.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: PaymentTypes
      path: Kount/Enums/PaymentTypes.cs
      startLine: 15
    summary: "\nList of accepted payment types<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2017 Kount Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum PaymentTypes : int'
        VB: Public Enum PaymentTypes As Integer
    extensionMethods:
    - Kount.Enums.PaymentTypes.Kount.Enums.EnumHelper.GetValueAsString
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Kount.Enums.PaymentTypes.Apple
      commentId: F:Kount.Enums.PaymentTypes.Apple
      language: CSharp
      name:
        CSharp: Apple
        VB: Apple
      nameWithType:
        CSharp: PaymentTypes.Apple
        VB: PaymentTypes.Apple
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Apple
        VB: Kount.Enums.PaymentTypes.Apple
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Apple
        path: Kount/Enums/PaymentTypes.cs
        startLine: 20
      summary: "\nApple payment type\n"
      example: []
      syntax:
        content:
          CSharp: Apple = 0
          VB: Apple = 0
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Blml
      commentId: F:Kount.Enums.PaymentTypes.Blml
      language: CSharp
      name:
        CSharp: Blml
        VB: Blml
      nameWithType:
        CSharp: PaymentTypes.Blml
        VB: PaymentTypes.Blml
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Blml
        VB: Kount.Enums.PaymentTypes.Blml
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Blml
        path: Kount/Enums/PaymentTypes.cs
        startLine: 26
      summary: "\nBill me later type\n"
      example: []
      syntax:
        content:
          CSharp: Blml = 1
          VB: Blml = 1
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Bpay
      commentId: F:Kount.Enums.PaymentTypes.Bpay
      language: CSharp
      name:
        CSharp: Bpay
        VB: Bpay
      nameWithType:
        CSharp: PaymentTypes.Bpay
        VB: PaymentTypes.Bpay
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Bpay
        VB: Kount.Enums.PaymentTypes.Bpay
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Bpay
        path: Kount/Enums/PaymentTypes.cs
        startLine: 32
      summary: "\nBPay payment type\n"
      example: []
      syntax:
        content:
          CSharp: Bpay = 2
          VB: Bpay = 2
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Card
      commentId: F:Kount.Enums.PaymentTypes.Card
      language: CSharp
      name:
        CSharp: Card
        VB: Card
      nameWithType:
        CSharp: PaymentTypes.Card
        VB: PaymentTypes.Card
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Card
        VB: Kount.Enums.PaymentTypes.Card
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Card
        path: Kount/Enums/PaymentTypes.cs
        startLine: 38
      summary: "\nCredit card type\n"
      example: []
      syntax:
        content:
          CSharp: Card = 3
          VB: Card = 3
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.CarteBleue
      commentId: F:Kount.Enums.PaymentTypes.CarteBleue
      language: CSharp
      name:
        CSharp: CarteBleue
        VB: CarteBleue
      nameWithType:
        CSharp: PaymentTypes.CarteBleue
        VB: PaymentTypes.CarteBleue
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.CarteBleue
        VB: Kount.Enums.PaymentTypes.CarteBleue
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: CarteBleue
        path: Kount/Enums/PaymentTypes.cs
        startLine: 44
      summary: "\nCarte Bleue payment type\n"
      example: []
      syntax:
        content:
          CSharp: CarteBleue = 4
          VB: CarteBleue = 4
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Check
      commentId: F:Kount.Enums.PaymentTypes.Check
      language: CSharp
      name:
        CSharp: Check
        VB: Check
      nameWithType:
        CSharp: PaymentTypes.Check
        VB: PaymentTypes.Check
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Check
        VB: Kount.Enums.PaymentTypes.Check
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Check
        path: Kount/Enums/PaymentTypes.cs
        startLine: 50
      summary: "\nThe check type\n"
      example: []
      syntax:
        content:
          CSharp: Check = 5
          VB: Check = 5
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Elv
      commentId: F:Kount.Enums.PaymentTypes.Elv
      language: CSharp
      name:
        CSharp: Elv
        VB: Elv
      nameWithType:
        CSharp: PaymentTypes.Elv
        VB: PaymentTypes.Elv
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Elv
        VB: Kount.Enums.PaymentTypes.Elv
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Elv
        path: Kount/Enums/PaymentTypes.cs
        startLine: 56
      summary: "\nELV payment type\n"
      example: []
      syntax:
        content:
          CSharp: Elv = 6
          VB: Elv = 6
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.GreenDotMoneyPak
      commentId: F:Kount.Enums.PaymentTypes.GreenDotMoneyPak
      language: CSharp
      name:
        CSharp: GreenDotMoneyPak
        VB: GreenDotMoneyPak
      nameWithType:
        CSharp: PaymentTypes.GreenDotMoneyPak
        VB: PaymentTypes.GreenDotMoneyPak
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.GreenDotMoneyPak
        VB: Kount.Enums.PaymentTypes.GreenDotMoneyPak
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GreenDotMoneyPak
        path: Kount/Enums/PaymentTypes.cs
        startLine: 62
      summary: "\nGreen Dot MoneyPak payment type\n"
      example: []
      syntax:
        content:
          CSharp: GreenDotMoneyPak = 7
          VB: GreenDotMoneyPak = 7
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.GiftCard
      commentId: F:Kount.Enums.PaymentTypes.GiftCard
      language: CSharp
      name:
        CSharp: GiftCard
        VB: GiftCard
      nameWithType:
        CSharp: PaymentTypes.GiftCard
        VB: PaymentTypes.GiftCard
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.GiftCard
        VB: Kount.Enums.PaymentTypes.GiftCard
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GiftCard
        path: Kount/Enums/PaymentTypes.cs
        startLine: 68
      summary: "\nGift card payment type\n"
      example: []
      syntax:
        content:
          CSharp: GiftCard = 8
          VB: GiftCard = 8
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.GiroPay
      commentId: F:Kount.Enums.PaymentTypes.GiroPay
      language: CSharp
      name:
        CSharp: GiroPay
        VB: GiroPay
      nameWithType:
        CSharp: PaymentTypes.GiroPay
        VB: PaymentTypes.GiroPay
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.GiroPay
        VB: Kount.Enums.PaymentTypes.GiroPay
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GiroPay
        path: Kount/Enums/PaymentTypes.cs
        startLine: 74
      summary: "\nGiroPay payment type\n"
      example: []
      syntax:
        content:
          CSharp: GiroPay = 9
          VB: GiroPay = 9
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Google
      commentId: F:Kount.Enums.PaymentTypes.Google
      language: CSharp
      name:
        CSharp: Google
        VB: Google
      nameWithType:
        CSharp: PaymentTypes.Google
        VB: PaymentTypes.Google
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Google
        VB: Kount.Enums.PaymentTypes.Google
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Google
        path: Kount/Enums/PaymentTypes.cs
        startLine: 80
      summary: "\nGoogle payment type\n"
      example: []
      syntax:
        content:
          CSharp: Google = 10
          VB: Google = 10
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Interac
      commentId: F:Kount.Enums.PaymentTypes.Interac
      language: CSharp
      name:
        CSharp: Interac
        VB: Interac
      nameWithType:
        CSharp: PaymentTypes.Interac
        VB: PaymentTypes.Interac
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Interac
        VB: Kount.Enums.PaymentTypes.Interac
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Interac
        path: Kount/Enums/PaymentTypes.cs
        startLine: 86
      summary: "\nInterac payment type\n"
      example: []
      syntax:
        content:
          CSharp: Interac = 11
          VB: Interac = 11
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.MercadePago
      commentId: F:Kount.Enums.PaymentTypes.MercadePago
      language: CSharp
      name:
        CSharp: MercadePago
        VB: MercadePago
      nameWithType:
        CSharp: PaymentTypes.MercadePago
        VB: PaymentTypes.MercadePago
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.MercadePago
        VB: Kount.Enums.PaymentTypes.MercadePago
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: MercadePago
        path: Kount/Enums/PaymentTypes.cs
        startLine: 92
      summary: "\nMercade Pago payment type\n"
      example: []
      syntax:
        content:
          CSharp: MercadePago = 12
          VB: MercadePago = 12
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Neteller
      commentId: F:Kount.Enums.PaymentTypes.Neteller
      language: CSharp
      name:
        CSharp: Neteller
        VB: Neteller
      nameWithType:
        CSharp: PaymentTypes.Neteller
        VB: PaymentTypes.Neteller
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Neteller
        VB: Kount.Enums.PaymentTypes.Neteller
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Neteller
        path: Kount/Enums/PaymentTypes.cs
        startLine: 98
      summary: "\nNeteller payment type\n"
      example: []
      syntax:
        content:
          CSharp: Neteller = 13
          VB: Neteller = 13
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.None
      commentId: F:Kount.Enums.PaymentTypes.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: PaymentTypes.None
        VB: PaymentTypes.None
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.None
        VB: Kount.Enums.PaymentTypes.None
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: None
        path: Kount/Enums/PaymentTypes.cs
        startLine: 104
      summary: "\nNo payment type\n"
      example: []
      syntax:
        content:
          CSharp: None = 14
          VB: None = 14
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Poli
      commentId: F:Kount.Enums.PaymentTypes.Poli
      language: CSharp
      name:
        CSharp: Poli
        VB: Poli
      nameWithType:
        CSharp: PaymentTypes.Poli
        VB: PaymentTypes.Poli
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Poli
        VB: Kount.Enums.PaymentTypes.Poli
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Poli
        path: Kount/Enums/PaymentTypes.cs
        startLine: 110
      summary: "\nPoli payment type\n"
      example: []
      syntax:
        content:
          CSharp: Poli = 15
          VB: Poli = 15
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Paypal
      commentId: F:Kount.Enums.PaymentTypes.Paypal
      language: CSharp
      name:
        CSharp: Paypal
        VB: Paypal
      nameWithType:
        CSharp: PaymentTypes.Paypal
        VB: PaymentTypes.Paypal
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Paypal
        VB: Kount.Enums.PaymentTypes.Paypal
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Paypal
        path: Kount/Enums/PaymentTypes.cs
        startLine: 116
      summary: "\nPaypal payment type\n"
      example: []
      syntax:
        content:
          CSharp: Paypal = 16
          VB: Paypal = 16
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.SingleEuroPaymentsArea
      commentId: F:Kount.Enums.PaymentTypes.SingleEuroPaymentsArea
      language: CSharp
      name:
        CSharp: SingleEuroPaymentsArea
        VB: SingleEuroPaymentsArea
      nameWithType:
        CSharp: PaymentTypes.SingleEuroPaymentsArea
        VB: PaymentTypes.SingleEuroPaymentsArea
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.SingleEuroPaymentsArea
        VB: Kount.Enums.PaymentTypes.SingleEuroPaymentsArea
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SingleEuroPaymentsArea
        path: Kount/Enums/PaymentTypes.cs
        startLine: 122
      summary: "\nSingle Euro Payments Area type\n"
      example: []
      syntax:
        content:
          CSharp: SingleEuroPaymentsArea = 17
          VB: SingleEuroPaymentsArea = 17
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Skrill
      commentId: F:Kount.Enums.PaymentTypes.Skrill
      language: CSharp
      name:
        CSharp: Skrill
        VB: Skrill
      nameWithType:
        CSharp: PaymentTypes.Skrill
        VB: PaymentTypes.Skrill
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Skrill
        VB: Kount.Enums.PaymentTypes.Skrill
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Skrill
        path: Kount/Enums/PaymentTypes.cs
        startLine: 128
      summary: "\nSkrill/Moneybookers payment type\n"
      example: []
      syntax:
        content:
          CSharp: Skrill = 18
          VB: Skrill = 18
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Sofort
      commentId: F:Kount.Enums.PaymentTypes.Sofort
      language: CSharp
      name:
        CSharp: Sofort
        VB: Sofort
      nameWithType:
        CSharp: PaymentTypes.Sofort
        VB: PaymentTypes.Sofort
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Sofort
        VB: Kount.Enums.PaymentTypes.Sofort
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Sofort
        path: Kount/Enums/PaymentTypes.cs
        startLine: 134
      summary: "\nSofort payment type\n"
      example: []
      syntax:
        content:
          CSharp: Sofort = 19
          VB: Sofort = 19
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.PaymentTypes.Token
      commentId: F:Kount.Enums.PaymentTypes.Token
      language: CSharp
      name:
        CSharp: Token
        VB: Token
      nameWithType:
        CSharp: PaymentTypes.Token
        VB: PaymentTypes.Token
      qualifiedName:
        CSharp: Kount.Enums.PaymentTypes.Token
        VB: Kount.Enums.PaymentTypes.Token
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/PaymentTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Token
        path: Kount/Enums/PaymentTypes.cs
        startLine: 140
      summary: "\nToken payment type\n"
      example: []
      syntax:
        content:
          CSharp: Token = 20
          VB: Token = 20
        return:
          type: Kount.Enums.PaymentTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Kount.Enums.UpdateTypes
    commentId: T:Kount.Enums.UpdateTypes
    language: CSharp
    name:
      CSharp: UpdateTypes
      VB: UpdateTypes
    nameWithType:
      CSharp: UpdateTypes
      VB: UpdateTypes
    qualifiedName:
      CSharp: Kount.Enums.UpdateTypes
      VB: Kount.Enums.UpdateTypes
    type: Enum
    assemblies:
    - KountRisSdk
    namespace: Kount.Enums
    source:
      remote:
        path: SDK/Kount/Enums/UpdateTypes.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: UpdateTypes
      path: Kount/Enums/UpdateTypes.cs
      startLine: 14
    summary: "\nUpdate type should be used whenever there are changes to a given order and the merchant \nwants them reflected into the Kount system.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2017 Kount Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum UpdateTypes : int'
        VB: Public Enum UpdateTypes As Integer
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Kount.Enums.UpdateTypes.ModeU
      commentId: F:Kount.Enums.UpdateTypes.ModeU
      language: CSharp
      name:
        CSharp: ModeU
        VB: ModeU
      nameWithType:
        CSharp: UpdateTypes.ModeU
        VB: UpdateTypes.ModeU
      qualifiedName:
        CSharp: Kount.Enums.UpdateTypes.ModeU
        VB: Kount.Enums.UpdateTypes.ModeU
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/UpdateTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ModeU
        path: Kount/Enums/UpdateTypes.cs
        startLine: 19
      summary: "\nDefault update mode, only sends the update event\n"
      example: []
      syntax:
        content:
          CSharp: ModeU = null
          VB: ModeU = Nothing
        return:
          type: Kount.Enums.UpdateTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Kount.Enums.UpdateTypes.ModeX
      commentId: F:Kount.Enums.UpdateTypes.ModeX
      language: CSharp
      name:
        CSharp: ModeX
        VB: ModeX
      nameWithType:
        CSharp: UpdateTypes.ModeX
        VB: UpdateTypes.ModeX
      qualifiedName:
        CSharp: Kount.Enums.UpdateTypes.ModeX
        VB: Kount.Enums.UpdateTypes.ModeX
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Enums
      source:
        remote:
          path: SDK/Kount/Enums/UpdateTypes.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ModeX
        path: Kount/Enums/UpdateTypes.cs
        startLine: 24
      summary: "\nSends the update event and RIS service returns a status response\n"
      example: []
      syntax:
        content:
          CSharp: ModeX = null
          VB: ModeX = Nothing
        return:
          type: Kount.Enums.UpdateTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: Kount.Log
  commentId: N:Kount.Log
  language: CSharp
  name:
    CSharp: Kount.Log
    VB: Kount.Log
  nameWithType:
    CSharp: Kount.Log
    VB: Kount.Log
  qualifiedName:
    CSharp: Kount.Log
    VB: Kount.Log
  type: Namespace
  assemblies:
  - KountRisSdk
  modifiers: {}
  items:
  - id: Kount.Log.ExampleClient
    commentId: T:Kount.Log.ExampleClient
    language: CSharp
    name:
      CSharp: ExampleClient
      VB: ExampleClient
    nameWithType:
      CSharp: ExampleClient
      VB: ExampleClient
    qualifiedName:
      CSharp: Kount.Log.ExampleClient
      VB: Kount.Log.ExampleClient
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Log
    source:
      remote:
        path: SDK/Kount/Log/ExampleClient.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: ExampleClient
      path: Kount/Log/ExampleClient.cs
      startLine: 14
    summary: "\nA class demonstrating how to use logging\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ExampleClient : object'
        VB: >-
          Public Class ExampleClient

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Log.ExampleClient.Main
      commentId: M:Kount.Log.ExampleClient.Main
      language: CSharp
      name:
        CSharp: Main()
        VB: Main()
      nameWithType:
        CSharp: ExampleClient.Main()
        VB: ExampleClient.Main()
      qualifiedName:
        CSharp: Kount.Log.ExampleClient.Main()
        VB: Kount.Log.ExampleClient.Main()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log
      source:
        remote:
          path: SDK/Kount/Log/ExampleClient.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Main
        path: Kount/Log/ExampleClient.cs
        startLine: 22
      summary: "\nThe main entry point for the application.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
      example: []
      syntax:
        content:
          CSharp: public static void Main()
          VB: Public Shared Sub Main
      overload: Kount.Log.ExampleClient.Main*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Kount.Log.Binding
  commentId: N:Kount.Log.Binding
  language: CSharp
  name:
    CSharp: Kount.Log.Binding
    VB: Kount.Log.Binding
  nameWithType:
    CSharp: Kount.Log.Binding
    VB: Kount.Log.Binding
  qualifiedName:
    CSharp: Kount.Log.Binding
    VB: Kount.Log.Binding
  type: Namespace
  assemblies:
  - KountRisSdk
  modifiers: {}
  items:
  - id: Kount.Log.Binding.ILogger
    commentId: T:Kount.Log.Binding.ILogger
    language: CSharp
    name:
      CSharp: ILogger
      VB: ILogger
    nameWithType:
      CSharp: ILogger
      VB: ILogger
    qualifiedName:
      CSharp: Kount.Log.Binding.ILogger
      VB: Kount.Log.Binding.ILogger
    type: Interface
    assemblies:
    - KountRisSdk
    namespace: Kount.Log.Binding
    source:
      remote:
        path: SDK/Kount/Log/Binding/Logger.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: ILogger
      path: Kount/Log/Binding/Logger.cs
      startLine: 15
    summary: "\nLogger interface.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: public interface ILogger
        VB: Public Interface ILogger
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Kount.Log.Binding.ILogger.Debug(System.String)
      commentId: M:Kount.Log.Binding.ILogger.Debug(System.String)
      language: CSharp
      name:
        CSharp: Debug(String)
        VB: Debug(String)
      nameWithType:
        CSharp: ILogger.Debug(String)
        VB: ILogger.Debug(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Debug(System.String)
        VB: Kount.Log.Binding.ILogger.Debug(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Debug
        path: Kount/Log/Binding/Logger.cs
        startLine: 21
      summary: "\nLog a debug level message.\n"
      example: []
      syntax:
        content:
          CSharp: void Debug(string message)
          VB: Sub Debug(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.ILogger.Debug*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.Debug(System.String,Exception)
      commentId: M:Kount.Log.Binding.ILogger.Debug(System.String,Exception)
      language: CSharp
      name:
        CSharp: Debug(String, Exception)
        VB: Debug(String, Exception)
      nameWithType:
        CSharp: ILogger.Debug(String, Exception)
        VB: ILogger.Debug(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Debug(System.String, Exception)
        VB: Kount.Log.Binding.ILogger.Debug(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Debug
        path: Kount/Log/Binding/Logger.cs
        startLine: 28
      summary: "\nLog a debug level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: void Debug(string message, Exception e)
          VB: Sub Debug(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.ILogger.Debug*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.Info(System.String)
      commentId: M:Kount.Log.Binding.ILogger.Info(System.String)
      language: CSharp
      name:
        CSharp: Info(String)
        VB: Info(String)
      nameWithType:
        CSharp: ILogger.Info(String)
        VB: ILogger.Info(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Info(System.String)
        VB: Kount.Log.Binding.ILogger.Info(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Info
        path: Kount/Log/Binding/Logger.cs
        startLine: 34
      summary: "\nLog an info level message\n"
      example: []
      syntax:
        content:
          CSharp: void Info(string message)
          VB: Sub Info(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.ILogger.Info*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.Info(System.String,Exception)
      commentId: M:Kount.Log.Binding.ILogger.Info(System.String,Exception)
      language: CSharp
      name:
        CSharp: Info(String, Exception)
        VB: Info(String, Exception)
      nameWithType:
        CSharp: ILogger.Info(String, Exception)
        VB: ILogger.Info(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Info(System.String, Exception)
        VB: Kount.Log.Binding.ILogger.Info(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Info
        path: Kount/Log/Binding/Logger.cs
        startLine: 41
      summary: "\nLog an info level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: void Info(string message, Exception e)
          VB: Sub Info(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.ILogger.Info*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.Warn(System.String)
      commentId: M:Kount.Log.Binding.ILogger.Warn(System.String)
      language: CSharp
      name:
        CSharp: Warn(String)
        VB: Warn(String)
      nameWithType:
        CSharp: ILogger.Warn(String)
        VB: ILogger.Warn(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Warn(System.String)
        VB: Kount.Log.Binding.ILogger.Warn(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Warn
        path: Kount/Log/Binding/Logger.cs
        startLine: 47
      summary: "\nLog a warn level message\n"
      example: []
      syntax:
        content:
          CSharp: void Warn(string message)
          VB: Sub Warn(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.ILogger.Warn*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.Warn(System.String,Exception)
      commentId: M:Kount.Log.Binding.ILogger.Warn(System.String,Exception)
      language: CSharp
      name:
        CSharp: Warn(String, Exception)
        VB: Warn(String, Exception)
      nameWithType:
        CSharp: ILogger.Warn(String, Exception)
        VB: ILogger.Warn(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Warn(System.String, Exception)
        VB: Kount.Log.Binding.ILogger.Warn(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Warn
        path: Kount/Log/Binding/Logger.cs
        startLine: 54
      summary: "\nLog a warn level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: void Warn(string message, Exception e)
          VB: Sub Warn(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.ILogger.Warn*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.Error(System.String)
      commentId: M:Kount.Log.Binding.ILogger.Error(System.String)
      language: CSharp
      name:
        CSharp: Error(String)
        VB: Error(String)
      nameWithType:
        CSharp: ILogger.Error(String)
        VB: ILogger.Error(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Error(System.String)
        VB: Kount.Log.Binding.ILogger.Error(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Error
        path: Kount/Log/Binding/Logger.cs
        startLine: 60
      summary: "\nLog an error level message\n"
      example: []
      syntax:
        content:
          CSharp: void Error(string message)
          VB: Sub Error(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.ILogger.Error*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.Error(System.String,Exception)
      commentId: M:Kount.Log.Binding.ILogger.Error(System.String,Exception)
      language: CSharp
      name:
        CSharp: Error(String, Exception)
        VB: Error(String, Exception)
      nameWithType:
        CSharp: ILogger.Error(String, Exception)
        VB: ILogger.Error(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Error(System.String, Exception)
        VB: Kount.Log.Binding.ILogger.Error(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Error
        path: Kount/Log/Binding/Logger.cs
        startLine: 67
      summary: "\nLog an error level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: void Error(string message, Exception e)
          VB: Sub Error(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.ILogger.Error*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.Fatal(System.String)
      commentId: M:Kount.Log.Binding.ILogger.Fatal(System.String)
      language: CSharp
      name:
        CSharp: Fatal(String)
        VB: Fatal(String)
      nameWithType:
        CSharp: ILogger.Fatal(String)
        VB: ILogger.Fatal(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Fatal(System.String)
        VB: Kount.Log.Binding.ILogger.Fatal(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Fatal
        path: Kount/Log/Binding/Logger.cs
        startLine: 73
      summary: "\nLog a fatal level message\n"
      example: []
      syntax:
        content:
          CSharp: void Fatal(string message)
          VB: Sub Fatal(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.ILogger.Fatal*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.Fatal(System.String,Exception)
      commentId: M:Kount.Log.Binding.ILogger.Fatal(System.String,Exception)
      language: CSharp
      name:
        CSharp: Fatal(String, Exception)
        VB: Fatal(String, Exception)
      nameWithType:
        CSharp: ILogger.Fatal(String, Exception)
        VB: ILogger.Fatal(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.Fatal(System.String, Exception)
        VB: Kount.Log.Binding.ILogger.Fatal(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Fatal
        path: Kount/Log/Binding/Logger.cs
        startLine: 80
      summary: "\nLog a fatal level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: void Fatal(string message, Exception e)
          VB: Sub Fatal(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.ILogger.Fatal*
      modifiers:
        CSharp: []
        VB: []
    - id: Kount.Log.Binding.ILogger.MeasureElapsed
      commentId: P:Kount.Log.Binding.ILogger.MeasureElapsed
      language: CSharp
      name:
        CSharp: MeasureElapsed
        VB: MeasureElapsed
      nameWithType:
        CSharp: ILogger.MeasureElapsed
        VB: ILogger.MeasureElapsed
      qualifiedName:
        CSharp: Kount.Log.Binding.ILogger.MeasureElapsed
        VB: Kount.Log.Binding.ILogger.MeasureElapsed
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/Logger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: MeasureElapsed
        path: Kount/Log/Binding/Logger.cs
        startLine: 89
      summary: "\nConfigurable flag. In `app.config` set setting `LOG.SIMPLE.ELAPSED` to <strong>ON/OFF</strong><br />\nexample: \n<example>`<add key=\"LOG.SIMPLE.ELAPSED\" value=\"ON\"></add>`</example><br />\nWhen is `true` - measure overall client request time in milliseconds and logging result.<br />\nBy default is `false`(OFF)\n"
      example: []
      syntax:
        content:
          CSharp: bool MeasureElapsed { get; }
          VB: ReadOnly Property MeasureElapsed As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Kount.Log.Binding.ILogger.MeasureElapsed*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: Kount.Log.Binding.NopLogger
    commentId: T:Kount.Log.Binding.NopLogger
    language: CSharp
    name:
      CSharp: NopLogger
      VB: NopLogger
    nameWithType:
      CSharp: NopLogger
      VB: NopLogger
    qualifiedName:
      CSharp: Kount.Log.Binding.NopLogger
      VB: Kount.Log.Binding.NopLogger
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Log.Binding
    source:
      remote:
        path: SDK/Kount/Log/Binding/NopLogger.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: NopLogger
      path: Kount/Log/Binding/NopLogger.cs
      startLine: 15
    summary: "\nA logger that silently discards all logging.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NopLogger : object, ILogger'
        VB: >-
          Public Class NopLogger

              Inherits Object

              Implements ILogger
    inheritance:
    - System.Object
    implements:
    - Kount.Log.Binding.ILogger
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Log.Binding.NopLogger.MeasureElapsed
      commentId: P:Kount.Log.Binding.NopLogger.MeasureElapsed
      language: CSharp
      name:
        CSharp: MeasureElapsed
        VB: MeasureElapsed
      nameWithType:
        CSharp: NopLogger.MeasureElapsed
        VB: NopLogger.MeasureElapsed
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.MeasureElapsed
        VB: Kount.Log.Binding.NopLogger.MeasureElapsed
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: MeasureElapsed
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 17
      syntax:
        content:
          CSharp: public bool MeasureElapsed { get; }
          VB: Public ReadOnly Property MeasureElapsed As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Kount.Log.Binding.NopLogger.MeasureElapsed*
      implements:
      - Kount.Log.Binding.ILogger.MeasureElapsed
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Kount.Log.Binding.NopLogger.#ctor(System.String)
      commentId: M:Kount.Log.Binding.NopLogger.#ctor(System.String)
      language: CSharp
      name:
        CSharp: NopLogger(String)
        VB: NopLogger(String)
      nameWithType:
        CSharp: NopLogger.NopLogger(String)
        VB: NopLogger.NopLogger(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.NopLogger(System.String)
        VB: Kount.Log.Binding.NopLogger.NopLogger(System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 29
      summary: "\nConstructor for NOP logger.\n"
      example: []
      syntax:
        content:
          CSharp: public NopLogger(string name)
          VB: Public Sub New(name As String)
        parameters:
        - id: name
          type: System.String
          description: Name of the logger
      overload: Kount.Log.Binding.NopLogger.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Debug(System.String)
      commentId: M:Kount.Log.Binding.NopLogger.Debug(System.String)
      language: CSharp
      name:
        CSharp: Debug(String)
        VB: Debug(String)
      nameWithType:
        CSharp: NopLogger.Debug(String)
        VB: NopLogger.Debug(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Debug(System.String)
        VB: Kount.Log.Binding.NopLogger.Debug(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Debug
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 37
      summary: "\nDiscard a debug level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Debug(string message)
          VB: Public Sub Debug(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.NopLogger.Debug*
      implements:
      - Kount.Log.Binding.ILogger.Debug(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Debug(System.String,Exception)
      commentId: M:Kount.Log.Binding.NopLogger.Debug(System.String,Exception)
      language: CSharp
      name:
        CSharp: Debug(String, Exception)
        VB: Debug(String, Exception)
      nameWithType:
        CSharp: NopLogger.Debug(String, Exception)
        VB: NopLogger.Debug(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Debug(System.String, Exception)
        VB: Kount.Log.Binding.NopLogger.Debug(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Debug
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 46
      summary: "\nDiscard a debug level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Debug(string message, Exception e)
          VB: Public Sub Debug(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.NopLogger.Debug*
      implements:
      - Kount.Log.Binding.ILogger.Debug(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Info(System.String)
      commentId: M:Kount.Log.Binding.NopLogger.Info(System.String)
      language: CSharp
      name:
        CSharp: Info(String)
        VB: Info(String)
      nameWithType:
        CSharp: NopLogger.Info(String)
        VB: NopLogger.Info(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Info(System.String)
        VB: Kount.Log.Binding.NopLogger.Info(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Info
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 54
      summary: "\nDiscard an info level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Info(string message)
          VB: Public Sub Info(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.NopLogger.Info*
      implements:
      - Kount.Log.Binding.ILogger.Info(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Info(System.String,Exception)
      commentId: M:Kount.Log.Binding.NopLogger.Info(System.String,Exception)
      language: CSharp
      name:
        CSharp: Info(String, Exception)
        VB: Info(String, Exception)
      nameWithType:
        CSharp: NopLogger.Info(String, Exception)
        VB: NopLogger.Info(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Info(System.String, Exception)
        VB: Kount.Log.Binding.NopLogger.Info(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Info
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 63
      summary: "\nDiscard an info level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Info(string message, Exception e)
          VB: Public Sub Info(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.NopLogger.Info*
      implements:
      - Kount.Log.Binding.ILogger.Info(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Warn(System.String)
      commentId: M:Kount.Log.Binding.NopLogger.Warn(System.String)
      language: CSharp
      name:
        CSharp: Warn(String)
        VB: Warn(String)
      nameWithType:
        CSharp: NopLogger.Warn(String)
        VB: NopLogger.Warn(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Warn(System.String)
        VB: Kount.Log.Binding.NopLogger.Warn(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Warn
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 71
      summary: "\nDiscard a warn level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Warn(string message)
          VB: Public Sub Warn(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.NopLogger.Warn*
      implements:
      - Kount.Log.Binding.ILogger.Warn(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Warn(System.String,Exception)
      commentId: M:Kount.Log.Binding.NopLogger.Warn(System.String,Exception)
      language: CSharp
      name:
        CSharp: Warn(String, Exception)
        VB: Warn(String, Exception)
      nameWithType:
        CSharp: NopLogger.Warn(String, Exception)
        VB: NopLogger.Warn(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Warn(System.String, Exception)
        VB: Kount.Log.Binding.NopLogger.Warn(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Warn
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 80
      summary: "\nDiscard a warn level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Warn(string message, Exception e)
          VB: Public Sub Warn(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.NopLogger.Warn*
      implements:
      - Kount.Log.Binding.ILogger.Warn(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Error(System.String)
      commentId: M:Kount.Log.Binding.NopLogger.Error(System.String)
      language: CSharp
      name:
        CSharp: Error(String)
        VB: Error(String)
      nameWithType:
        CSharp: NopLogger.Error(String)
        VB: NopLogger.Error(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Error(System.String)
        VB: Kount.Log.Binding.NopLogger.Error(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Error
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 88
      summary: "\nDiscard an error level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Error(string message)
          VB: Public Sub Error(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.NopLogger.Error*
      implements:
      - Kount.Log.Binding.ILogger.Error(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Error(System.String,Exception)
      commentId: M:Kount.Log.Binding.NopLogger.Error(System.String,Exception)
      language: CSharp
      name:
        CSharp: Error(String, Exception)
        VB: Error(String, Exception)
      nameWithType:
        CSharp: NopLogger.Error(String, Exception)
        VB: NopLogger.Error(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Error(System.String, Exception)
        VB: Kount.Log.Binding.NopLogger.Error(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Error
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 97
      summary: "\nDiscard an error level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Error(string message, Exception e)
          VB: Public Sub Error(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.NopLogger.Error*
      implements:
      - Kount.Log.Binding.ILogger.Error(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Fatal(System.String)
      commentId: M:Kount.Log.Binding.NopLogger.Fatal(System.String)
      language: CSharp
      name:
        CSharp: Fatal(String)
        VB: Fatal(String)
      nameWithType:
        CSharp: NopLogger.Fatal(String)
        VB: NopLogger.Fatal(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Fatal(System.String)
        VB: Kount.Log.Binding.NopLogger.Fatal(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Fatal
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 105
      summary: "\nDiscard a fatal level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Fatal(string message)
          VB: Public Sub Fatal(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.NopLogger.Fatal*
      implements:
      - Kount.Log.Binding.ILogger.Fatal(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.NopLogger.Fatal(System.String,Exception)
      commentId: M:Kount.Log.Binding.NopLogger.Fatal(System.String,Exception)
      language: CSharp
      name:
        CSharp: Fatal(String, Exception)
        VB: Fatal(String, Exception)
      nameWithType:
        CSharp: NopLogger.Fatal(String, Exception)
        VB: NopLogger.Fatal(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.NopLogger.Fatal(System.String, Exception)
        VB: Kount.Log.Binding.NopLogger.Fatal(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/NopLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Fatal
        path: Kount/Log/Binding/NopLogger.cs
        startLine: 114
      summary: "\nDiscard a fatal level message and an exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Fatal(string message, Exception e)
          VB: Public Sub Fatal(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.NopLogger.Fatal*
      implements:
      - Kount.Log.Binding.ILogger.Fatal(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Kount.Log.Binding.SimpleLogger
    commentId: T:Kount.Log.Binding.SimpleLogger
    language: CSharp
    name:
      CSharp: SimpleLogger
      VB: SimpleLogger
    nameWithType:
      CSharp: SimpleLogger
      VB: SimpleLogger
    qualifiedName:
      CSharp: Kount.Log.Binding.SimpleLogger
      VB: Kount.Log.Binding.SimpleLogger
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Log.Binding
    source:
      remote:
        path: SDK/Kount/Log/Binding/SimpleLogger.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: SimpleLogger
      path: Kount/Log/Binding/SimpleLogger.cs
      startLine: 16
    summary: "\nFacade class to a simple file logger.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SimpleLogger : object, ILogger'
        VB: >-
          Public Class SimpleLogger

              Inherits Object

              Implements ILogger
    inheritance:
    - System.Object
    implements:
    - Kount.Log.Binding.ILogger
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Log.Binding.SimpleLogger.MeasureElapsed
      commentId: P:Kount.Log.Binding.SimpleLogger.MeasureElapsed
      language: CSharp
      name:
        CSharp: MeasureElapsed
        VB: MeasureElapsed
      nameWithType:
        CSharp: SimpleLogger.MeasureElapsed
        VB: SimpleLogger.MeasureElapsed
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.MeasureElapsed
        VB: Kount.Log.Binding.SimpleLogger.MeasureElapsed
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: MeasureElapsed
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 30
      summary: "\nConfigurable property. In `app.config` set setting `LOG.SIMPLE.ELAPSED` to <strong>ON/OFF</strong><br />\nexample: \n<example>`<add key=\"LOG.SIMPLE.ELAPSED\" value=\"ON\"></add>`</example><br />\nWhen is `true` - measure overall client request time in milliseconds and logging result.<br />\nBy default is `false`(OFF)\n"
      example: []
      syntax:
        content:
          CSharp: public bool MeasureElapsed { get; }
          VB: Public ReadOnly Property MeasureElapsed As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Kount.Log.Binding.SimpleLogger.MeasureElapsed*
      implements:
      - Kount.Log.Binding.ILogger.MeasureElapsed
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Kount.Log.Binding.SimpleLogger.#ctor(System.String)
      commentId: M:Kount.Log.Binding.SimpleLogger.#ctor(System.String)
      language: CSharp
      name:
        CSharp: SimpleLogger(String)
        VB: SimpleLogger(String)
      nameWithType:
        CSharp: SimpleLogger.SimpleLogger(String)
        VB: SimpleLogger.SimpleLogger(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.SimpleLogger(System.String)
        VB: Kount.Log.Binding.SimpleLogger.SimpleLogger(System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 36
      summary: "\nThe Constructor.\n"
      example: []
      syntax:
        content:
          CSharp: public SimpleLogger(string name)
          VB: Public Sub New(name As String)
        parameters:
        - id: name
          type: System.String
          description: Name of the logger
      overload: Kount.Log.Binding.SimpleLogger.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Debug(System.String)
      commentId: M:Kount.Log.Binding.SimpleLogger.Debug(System.String)
      language: CSharp
      name:
        CSharp: Debug(String)
        VB: Debug(String)
      nameWithType:
        CSharp: SimpleLogger.Debug(String)
        VB: SimpleLogger.Debug(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Debug(System.String)
        VB: Kount.Log.Binding.SimpleLogger.Debug(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Debug
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 48
      summary: "\nLog a debug level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Debug(string message)
          VB: Public Sub Debug(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.SimpleLogger.Debug*
      implements:
      - Kount.Log.Binding.ILogger.Debug(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Debug(System.String,Exception)
      commentId: M:Kount.Log.Binding.SimpleLogger.Debug(System.String,Exception)
      language: CSharp
      name:
        CSharp: Debug(String, Exception)
        VB: Debug(String, Exception)
      nameWithType:
        CSharp: SimpleLogger.Debug(String, Exception)
        VB: SimpleLogger.Debug(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Debug(System.String, Exception)
        VB: Kount.Log.Binding.SimpleLogger.Debug(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Debug
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 58
      summary: "\nLog a debug level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Debug(string message, Exception e)
          VB: Public Sub Debug(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.SimpleLogger.Debug*
      implements:
      - Kount.Log.Binding.ILogger.Debug(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Info(System.String)
      commentId: M:Kount.Log.Binding.SimpleLogger.Info(System.String)
      language: CSharp
      name:
        CSharp: Info(String)
        VB: Info(String)
      nameWithType:
        CSharp: SimpleLogger.Info(String)
        VB: SimpleLogger.Info(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Info(System.String)
        VB: Kount.Log.Binding.SimpleLogger.Info(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Info
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 67
      summary: "\nLog an info level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Info(string message)
          VB: Public Sub Info(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.SimpleLogger.Info*
      implements:
      - Kount.Log.Binding.ILogger.Info(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Info(System.String,Exception)
      commentId: M:Kount.Log.Binding.SimpleLogger.Info(System.String,Exception)
      language: CSharp
      name:
        CSharp: Info(String, Exception)
        VB: Info(String, Exception)
      nameWithType:
        CSharp: SimpleLogger.Info(String, Exception)
        VB: SimpleLogger.Info(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Info(System.String, Exception)
        VB: Kount.Log.Binding.SimpleLogger.Info(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Info
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 77
      summary: "\nLog an info level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Info(string message, Exception e)
          VB: Public Sub Info(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.SimpleLogger.Info*
      implements:
      - Kount.Log.Binding.ILogger.Info(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Warn(System.String)
      commentId: M:Kount.Log.Binding.SimpleLogger.Warn(System.String)
      language: CSharp
      name:
        CSharp: Warn(String)
        VB: Warn(String)
      nameWithType:
        CSharp: SimpleLogger.Warn(String)
        VB: SimpleLogger.Warn(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Warn(System.String)
        VB: Kount.Log.Binding.SimpleLogger.Warn(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Warn
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 86
      summary: "\nLog a warn level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Warn(string message)
          VB: Public Sub Warn(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.SimpleLogger.Warn*
      implements:
      - Kount.Log.Binding.ILogger.Warn(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Warn(System.String,Exception)
      commentId: M:Kount.Log.Binding.SimpleLogger.Warn(System.String,Exception)
      language: CSharp
      name:
        CSharp: Warn(String, Exception)
        VB: Warn(String, Exception)
      nameWithType:
        CSharp: SimpleLogger.Warn(String, Exception)
        VB: SimpleLogger.Warn(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Warn(System.String, Exception)
        VB: Kount.Log.Binding.SimpleLogger.Warn(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Warn
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 96
      summary: "\nLog a warn level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Warn(string message, Exception e)
          VB: Public Sub Warn(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.SimpleLogger.Warn*
      implements:
      - Kount.Log.Binding.ILogger.Warn(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Error(System.String)
      commentId: M:Kount.Log.Binding.SimpleLogger.Error(System.String)
      language: CSharp
      name:
        CSharp: Error(String)
        VB: Error(String)
      nameWithType:
        CSharp: SimpleLogger.Error(String)
        VB: SimpleLogger.Error(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Error(System.String)
        VB: Kount.Log.Binding.SimpleLogger.Error(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Error
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 105
      summary: "\nLog an error level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Error(string message)
          VB: Public Sub Error(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.SimpleLogger.Error*
      implements:
      - Kount.Log.Binding.ILogger.Error(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Error(System.String,Exception)
      commentId: M:Kount.Log.Binding.SimpleLogger.Error(System.String,Exception)
      language: CSharp
      name:
        CSharp: Error(String, Exception)
        VB: Error(String, Exception)
      nameWithType:
        CSharp: SimpleLogger.Error(String, Exception)
        VB: SimpleLogger.Error(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Error(System.String, Exception)
        VB: Kount.Log.Binding.SimpleLogger.Error(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Error
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 115
      summary: "\nLog an error level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Error(string message, Exception e)
          VB: Public Sub Error(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.SimpleLogger.Error*
      implements:
      - Kount.Log.Binding.ILogger.Error(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Fatal(System.String)
      commentId: M:Kount.Log.Binding.SimpleLogger.Fatal(System.String)
      language: CSharp
      name:
        CSharp: Fatal(String)
        VB: Fatal(String)
      nameWithType:
        CSharp: SimpleLogger.Fatal(String)
        VB: SimpleLogger.Fatal(String)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Fatal(System.String)
        VB: Kount.Log.Binding.SimpleLogger.Fatal(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Fatal
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 124
      summary: "\nLog a fatal level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Fatal(string message)
          VB: Public Sub Fatal(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.Log.Binding.SimpleLogger.Fatal*
      implements:
      - Kount.Log.Binding.ILogger.Fatal(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Log.Binding.SimpleLogger.Fatal(System.String,Exception)
      commentId: M:Kount.Log.Binding.SimpleLogger.Fatal(System.String,Exception)
      language: CSharp
      name:
        CSharp: Fatal(String, Exception)
        VB: Fatal(String, Exception)
      nameWithType:
        CSharp: SimpleLogger.Fatal(String, Exception)
        VB: SimpleLogger.Fatal(String, Exception)
      qualifiedName:
        CSharp: Kount.Log.Binding.SimpleLogger.Fatal(System.String, Exception)
        VB: Kount.Log.Binding.SimpleLogger.Fatal(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Binding
      source:
        remote:
          path: SDK/Kount/Log/Binding/SimpleLogger.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Fatal
        path: Kount/Log/Binding/SimpleLogger.cs
        startLine: 134
      summary: "\nLog a fatal level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Fatal(string message, Exception e)
          VB: Public Sub Fatal(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.Log.Binding.SimpleLogger.Fatal*
      implements:
      - Kount.Log.Binding.ILogger.Fatal(System.String,Exception)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Kount.Log.Factory
  commentId: N:Kount.Log.Factory
  language: CSharp
  name:
    CSharp: Kount.Log.Factory
    VB: Kount.Log.Factory
  nameWithType:
    CSharp: Kount.Log.Factory
    VB: Kount.Log.Factory
  qualifiedName:
    CSharp: Kount.Log.Factory
    VB: Kount.Log.Factory
  type: Namespace
  assemblies:
  - KountRisSdk
  modifiers: {}
  items:
  - id: Kount.Log.Factory.LogFactory
    commentId: T:Kount.Log.Factory.LogFactory
    language: CSharp
    name:
      CSharp: LogFactory
      VB: LogFactory
    nameWithType:
      CSharp: LogFactory
      VB: LogFactory
    qualifiedName:
      CSharp: Kount.Log.Factory.LogFactory
      VB: Kount.Log.Factory.LogFactory
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Log.Factory
    source:
      remote:
        path: SDK/Kount/Log/Factory/LogFactory.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: LogFactory
      path: Kount/Log/Factory/LogFactory.cs
      startLine: 16
    summary: "\nA factory class for creating LoggerFactory objects.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LogFactory : object'
        VB: >-
          Public Class LogFactory

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Log.Factory.LogFactory.GetLoggerFactory
      commentId: M:Kount.Log.Factory.LogFactory.GetLoggerFactory
      language: CSharp
      name:
        CSharp: GetLoggerFactory()
        VB: GetLoggerFactory()
      nameWithType:
        CSharp: LogFactory.GetLoggerFactory()
        VB: LogFactory.GetLoggerFactory()
      qualifiedName:
        CSharp: Kount.Log.Factory.LogFactory.GetLoggerFactory()
        VB: Kount.Log.Factory.LogFactory.GetLoggerFactory()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Factory
      source:
        remote:
          path: SDK/Kount/Log/Factory/LogFactory.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetLoggerFactory
        path: Kount/Log/Factory/LogFactory.cs
        startLine: 38
      summary: "\nGet the logger factory to be used.\n<strong>NOP</strong> is default logger factory if not defined in application configuration.\n"
      example: []
      syntax:
        content:
          CSharp: public static ILoggerFactory GetLoggerFactory()
          VB: Public Shared Function GetLoggerFactory As ILoggerFactory
        return:
          type: Kount.Log.Factory.ILoggerFactory
          description: A Kount.Log.Factory.LoggerFactory
      overload: Kount.Log.Factory.LogFactory.GetLoggerFactory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Kount.Log.Factory.LogFactory.SetLoggerFactory(Kount.Log.Factory.ILoggerFactory)
      commentId: M:Kount.Log.Factory.LogFactory.SetLoggerFactory(Kount.Log.Factory.ILoggerFactory)
      language: CSharp
      name:
        CSharp: SetLoggerFactory(ILoggerFactory)
        VB: SetLoggerFactory(ILoggerFactory)
      nameWithType:
        CSharp: LogFactory.SetLoggerFactory(ILoggerFactory)
        VB: LogFactory.SetLoggerFactory(ILoggerFactory)
      qualifiedName:
        CSharp: Kount.Log.Factory.LogFactory.SetLoggerFactory(Kount.Log.Factory.ILoggerFactory)
        VB: Kount.Log.Factory.LogFactory.SetLoggerFactory(Kount.Log.Factory.ILoggerFactory)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Factory
      source:
        remote:
          path: SDK/Kount/Log/Factory/LogFactory.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetLoggerFactory
        path: Kount/Log/Factory/LogFactory.cs
        startLine: 70
      summary: "\nSet the logger factory to be used.\n"
      example: []
      syntax:
        content:
          CSharp: public static void SetLoggerFactory(ILoggerFactory f)
          VB: Public Shared Sub SetLoggerFactory(f As ILoggerFactory)
        parameters:
        - id: f
          type: Kount.Log.Factory.ILoggerFactory
          description: A Kount.Log.Factory.LoggerFactory
      overload: Kount.Log.Factory.LogFactory.SetLoggerFactory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Kount.Log.Factory.ILoggerFactory
    commentId: T:Kount.Log.Factory.ILoggerFactory
    language: CSharp
    name:
      CSharp: ILoggerFactory
      VB: ILoggerFactory
    nameWithType:
      CSharp: ILoggerFactory
      VB: ILoggerFactory
    qualifiedName:
      CSharp: Kount.Log.Factory.ILoggerFactory
      VB: Kount.Log.Factory.ILoggerFactory
    type: Interface
    assemblies:
    - KountRisSdk
    namespace: Kount.Log.Factory
    source:
      remote:
        path: SDK/Kount/Log/Factory/LoggerFactory.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: ILoggerFactory
      path: Kount/Log/Factory/LoggerFactory.cs
      startLine: 15
    summary: "\nInterface for a logger factory.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: public interface ILoggerFactory
        VB: Public Interface ILoggerFactory
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Kount.Log.Factory.ILoggerFactory.GetLogger(System.String)
      commentId: M:Kount.Log.Factory.ILoggerFactory.GetLogger(System.String)
      language: CSharp
      name:
        CSharp: GetLogger(String)
        VB: GetLogger(String)
      nameWithType:
        CSharp: ILoggerFactory.GetLogger(String)
        VB: ILoggerFactory.GetLogger(String)
      qualifiedName:
        CSharp: Kount.Log.Factory.ILoggerFactory.GetLogger(System.String)
        VB: Kount.Log.Factory.ILoggerFactory.GetLogger(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Factory
      source:
        remote:
          path: SDK/Kount/Log/Factory/LoggerFactory.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetLogger
        path: Kount/Log/Factory/LoggerFactory.cs
        startLine: 22
      summary: "\nGet a logger binding.\n"
      example: []
      syntax:
        content:
          CSharp: ILogger GetLogger(string name)
          VB: Function GetLogger(name As String) As ILogger
        parameters:
        - id: name
          type: System.String
          description: Name of the logger
        return:
          type: Kount.Log.Binding.ILogger
          description: A Kount.Log.Binding.Logger
      overload: Kount.Log.Factory.ILoggerFactory.GetLogger*
      modifiers:
        CSharp: []
        VB: []
  - id: Kount.Log.Factory.NopLoggerFactory
    commentId: T:Kount.Log.Factory.NopLoggerFactory
    language: CSharp
    name:
      CSharp: NopLoggerFactory
      VB: NopLoggerFactory
    nameWithType:
      CSharp: NopLoggerFactory
      VB: NopLoggerFactory
    qualifiedName:
      CSharp: Kount.Log.Factory.NopLoggerFactory
      VB: Kount.Log.Factory.NopLoggerFactory
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Log.Factory
    source:
      remote:
        path: SDK/Kount/Log/Factory/NopLoggerFactory.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: NopLoggerFactory
      path: Kount/Log/Factory/NopLoggerFactory.cs
      startLine: 15
    summary: "\nA NOP logger binding class.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NopLoggerFactory : object, ILoggerFactory'
        VB: >-
          Public Class NopLoggerFactory

              Inherits Object

              Implements ILoggerFactory
    inheritance:
    - System.Object
    implements:
    - Kount.Log.Factory.ILoggerFactory
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Log.Factory.NopLoggerFactory.GetLogger(System.String)
      commentId: M:Kount.Log.Factory.NopLoggerFactory.GetLogger(System.String)
      language: CSharp
      name:
        CSharp: GetLogger(String)
        VB: GetLogger(String)
      nameWithType:
        CSharp: NopLoggerFactory.GetLogger(String)
        VB: NopLoggerFactory.GetLogger(String)
      qualifiedName:
        CSharp: Kount.Log.Factory.NopLoggerFactory.GetLogger(System.String)
        VB: Kount.Log.Factory.NopLoggerFactory.GetLogger(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Factory
      source:
        remote:
          path: SDK/Kount/Log/Factory/NopLoggerFactory.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetLogger
        path: Kount/Log/Factory/NopLoggerFactory.cs
        startLine: 22
      summary: "\nGet a NOP logger binding.\n"
      example: []
      syntax:
        content:
          CSharp: public ILogger GetLogger(string name)
          VB: Public Function GetLogger(name As String) As ILogger
        parameters:
        - id: name
          type: System.String
          description: Name of the logger
        return:
          type: Kount.Log.Binding.ILogger
          description: A Kount.Log.Binding.NopLogger
      overload: Kount.Log.Factory.NopLoggerFactory.GetLogger*
      implements:
      - Kount.Log.Factory.ILoggerFactory.GetLogger(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Kount.Log.Factory.SimpleLoggerFactory
    commentId: T:Kount.Log.Factory.SimpleLoggerFactory
    language: CSharp
    name:
      CSharp: SimpleLoggerFactory
      VB: SimpleLoggerFactory
    nameWithType:
      CSharp: SimpleLoggerFactory
      VB: SimpleLoggerFactory
    qualifiedName:
      CSharp: Kount.Log.Factory.SimpleLoggerFactory
      VB: Kount.Log.Factory.SimpleLoggerFactory
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Log.Factory
    source:
      remote:
        path: SDK/Kount/Log/Factory/SimpleLoggerFactory.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: SimpleLoggerFactory
      path: Kount/Log/Factory/SimpleLoggerFactory.cs
      startLine: 15
    summary: "\nA simple logger binding class.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SimpleLoggerFactory : object, ILoggerFactory'
        VB: >-
          Public Class SimpleLoggerFactory

              Inherits Object

              Implements ILoggerFactory
    inheritance:
    - System.Object
    implements:
    - Kount.Log.Factory.ILoggerFactory
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Log.Factory.SimpleLoggerFactory.GetLogger(System.String)
      commentId: M:Kount.Log.Factory.SimpleLoggerFactory.GetLogger(System.String)
      language: CSharp
      name:
        CSharp: GetLogger(String)
        VB: GetLogger(String)
      nameWithType:
        CSharp: SimpleLoggerFactory.GetLogger(String)
        VB: SimpleLoggerFactory.GetLogger(String)
      qualifiedName:
        CSharp: Kount.Log.Factory.SimpleLoggerFactory.GetLogger(System.String)
        VB: Kount.Log.Factory.SimpleLoggerFactory.GetLogger(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Log.Factory
      source:
        remote:
          path: SDK/Kount/Log/Factory/SimpleLoggerFactory.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetLogger
        path: Kount/Log/Factory/SimpleLoggerFactory.cs
        startLine: 22
      summary: "\nGet a simple logger binding.\n"
      example: []
      syntax:
        content:
          CSharp: public ILogger GetLogger(string name)
          VB: Public Function GetLogger(name As String) As ILogger
        parameters:
        - id: name
          type: System.String
          description: Name of the logger
        return:
          type: Kount.Log.Binding.ILogger
          description: A Kount.Log.Binding.SimpleLogger
      overload: Kount.Log.Factory.SimpleLoggerFactory.GetLogger*
      implements:
      - Kount.Log.Factory.ILoggerFactory.GetLogger(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Kount.Ris
  commentId: N:Kount.Ris
  language: CSharp
  name:
    CSharp: Kount.Ris
    VB: Kount.Ris
  nameWithType:
    CSharp: Kount.Ris
    VB: Kount.Ris
  qualifiedName:
    CSharp: Kount.Ris
    VB: Kount.Ris
  type: Namespace
  assemblies:
  - KountRisSdk
  modifiers: {}
  items:
  - id: Kount.Ris.CartItem
    commentId: T:Kount.Ris.CartItem
    language: CSharp
    name:
      CSharp: CartItem
      VB: CartItem
    nameWithType:
      CSharp: CartItem
      VB: CartItem
    qualifiedName:
      CSharp: Kount.Ris.CartItem
      VB: Kount.Ris.CartItem
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/CartItem.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: CartItem
      path: Kount/Ris/CartItem.cs
      startLine: 13
    summary: "\nShopping cart item data object.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CartItem : object'
        VB: >-
          Public Class CartItem

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.CartItem.#ctor(System.String,System.String,System.String,System.Int64,System.Int64)
      commentId: M:Kount.Ris.CartItem.#ctor(System.String,System.String,System.String,System.Int64,System.Int64)
      language: CSharp
      name:
        CSharp: CartItem(String, String, String, Int64, Int64)
        VB: CartItem(String, String, String, Int64, Int64)
      nameWithType:
        CSharp: CartItem.CartItem(String, String, String, Int64, Int64)
        VB: CartItem.CartItem(String, String, String, Int64, Int64)
      qualifiedName:
        CSharp: Kount.Ris.CartItem.CartItem(System.String, System.String, System.String, System.Int64, System.Int64)
        VB: Kount.Ris.CartItem.CartItem(System.String, System.String, System.String, System.Int64, System.Int64)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/CartItem.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/CartItem.cs
        startLine: 48
      summary: "\nCart item constructor\n"
      example: []
      syntax:
        content:
          CSharp: public CartItem(string productType, string productItem, string productDescription, long productQuantity, long productPrice)
          VB: Public Sub New(productType As String, productItem As String, productDescription As String, productQuantity As Long, productPrice As Long)
        parameters:
        - id: productType
          type: System.String
          description: Product type as a 1 -255 char string
        - id: productItem
          type: System.String
          description: Product item as a 1 - 255 char string
        - id: productDescription
          type: System.String
          description: Product description as a 0 - 255 char string
        - id: productQuantity
          type: System.Int64
          description: Product quantity
        - id: productPrice
          type: System.Int64
          description: Product price
      overload: Kount.Ris.CartItem.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.CartItem.ProductType
      commentId: P:Kount.Ris.CartItem.ProductType
      language: CSharp
      name:
        CSharp: ProductType
        VB: ProductType
      nameWithType:
        CSharp: CartItem.ProductType
        VB: CartItem.ProductType
      qualifiedName:
        CSharp: Kount.Ris.CartItem.ProductType
        VB: Kount.Ris.CartItem.ProductType
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/CartItem.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ProductType
        path: Kount/Ris/CartItem.cs
        startLine: 65
      summary: "\nGets or sets product type\n"
      example: []
      syntax:
        content:
          CSharp: public string ProductType { get; set; }
          VB: Public Property ProductType As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.CartItem.ProductType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.CartItem.ProductItem
      commentId: P:Kount.Ris.CartItem.ProductItem
      language: CSharp
      name:
        CSharp: ProductItem
        VB: ProductItem
      nameWithType:
        CSharp: CartItem.ProductItem
        VB: CartItem.ProductItem
      qualifiedName:
        CSharp: Kount.Ris.CartItem.ProductItem
        VB: Kount.Ris.CartItem.ProductItem
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/CartItem.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ProductItem
        path: Kount/Ris/CartItem.cs
        startLine: 74
      summary: "\nGets or sets the product item\n"
      example: []
      syntax:
        content:
          CSharp: public string ProductItem { get; set; }
          VB: Public Property ProductItem As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.CartItem.ProductItem*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.CartItem.ProductDescription
      commentId: P:Kount.Ris.CartItem.ProductDescription
      language: CSharp
      name:
        CSharp: ProductDescription
        VB: ProductDescription
      nameWithType:
        CSharp: CartItem.ProductDescription
        VB: CartItem.ProductDescription
      qualifiedName:
        CSharp: Kount.Ris.CartItem.ProductDescription
        VB: Kount.Ris.CartItem.ProductDescription
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/CartItem.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ProductDescription
        path: Kount/Ris/CartItem.cs
        startLine: 83
      summary: "\nGets or sets the product description\n"
      example: []
      syntax:
        content:
          CSharp: public string ProductDescription { get; set; }
          VB: Public Property ProductDescription As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.CartItem.ProductDescription*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.CartItem.ProductQuantity
      commentId: P:Kount.Ris.CartItem.ProductQuantity
      language: CSharp
      name:
        CSharp: ProductQuantity
        VB: ProductQuantity
      nameWithType:
        CSharp: CartItem.ProductQuantity
        VB: CartItem.ProductQuantity
      qualifiedName:
        CSharp: Kount.Ris.CartItem.ProductQuantity
        VB: Kount.Ris.CartItem.ProductQuantity
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/CartItem.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ProductQuantity
        path: Kount/Ris/CartItem.cs
        startLine: 92
      summary: "\nGets or sets the product quantity\n"
      example: []
      syntax:
        content:
          CSharp: public long ProductQuantity { get; set; }
          VB: Public Property ProductQuantity As Long
        parameters: []
        return:
          type: System.Int64
      overload: Kount.Ris.CartItem.ProductQuantity*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.CartItem.ProductPrice
      commentId: P:Kount.Ris.CartItem.ProductPrice
      language: CSharp
      name:
        CSharp: ProductPrice
        VB: ProductPrice
      nameWithType:
        CSharp: CartItem.ProductPrice
        VB: CartItem.ProductPrice
      qualifiedName:
        CSharp: Kount.Ris.CartItem.ProductPrice
        VB: Kount.Ris.CartItem.ProductPrice
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/CartItem.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ProductPrice
        path: Kount/Ris/CartItem.cs
        startLine: 101
      summary: "\nGets or sets the product price\n"
      example: []
      syntax:
        content:
          CSharp: public long ProductPrice { get; set; }
          VB: Public Property ProductPrice As Long
        parameters: []
        return:
          type: System.Int64
      overload: Kount.Ris.CartItem.ProductPrice*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Kount.Ris.Configuration
    commentId: T:Kount.Ris.Configuration
    language: CSharp
    name:
      CSharp: Configuration
      VB: Configuration
    nameWithType:
      CSharp: Configuration
      VB: Configuration
    qualifiedName:
      CSharp: Kount.Ris.Configuration
      VB: Kount.Ris.Configuration
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/Configuration.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: Configuration
      path: Kount/Ris/Configuration.cs
      startLine: 7
    summary: "\nContaining configuration values\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Configuration : object'
        VB: >-
          Public Class Configuration

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.Configuration.FromAppSettings
      commentId: M:Kount.Ris.Configuration.FromAppSettings
      language: CSharp
      name:
        CSharp: FromAppSettings()
        VB: FromAppSettings()
      nameWithType:
        CSharp: Configuration.FromAppSettings()
        VB: Configuration.FromAppSettings()
      qualifiedName:
        CSharp: Kount.Ris.Configuration.FromAppSettings()
        VB: Kount.Ris.Configuration.FromAppSettings()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Configuration.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: FromAppSettings
        path: Kount/Ris/Configuration.cs
        startLine: 13
      summary: "\nGets configuration values from app settings.\n"
      example: []
      syntax:
        content:
          CSharp: public static Configuration FromAppSettings()
          VB: Public Shared Function FromAppSettings As Configuration
        return:
          type: Kount.Ris.Configuration
          description: Configuration class with raw values.
      overload: Kount.Ris.Configuration.FromAppSettings*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Kount.Ris.Configuration.MerchantId
      commentId: P:Kount.Ris.Configuration.MerchantId
      language: CSharp
      name:
        CSharp: MerchantId
        VB: MerchantId
      nameWithType:
        CSharp: Configuration.MerchantId
        VB: Configuration.MerchantId
      qualifiedName:
        CSharp: Kount.Ris.Configuration.MerchantId
        VB: Kount.Ris.Configuration.MerchantId
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Configuration.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: MerchantId
        path: Kount/Ris/Configuration.cs
        startLine: 31
      summary: "\nSix digit identifier issued by Kount.\n"
      example: []
      syntax:
        content:
          CSharp: public string MerchantId { get; set; }
          VB: Public Property MerchantId As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.Configuration.MerchantId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.Configuration.URL
      commentId: P:Kount.Ris.Configuration.URL
      language: CSharp
      name:
        CSharp: URL
        VB: URL
      nameWithType:
        CSharp: Configuration.URL
        VB: Configuration.URL
      qualifiedName:
        CSharp: Kount.Ris.Configuration.URL
        VB: Kount.Ris.Configuration.URL
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Configuration.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: URL
        path: Kount/Ris/Configuration.cs
        startLine: 36
      summary: "\nHTTPS URL path to the company's servers provided in boarding documentation from Kount.\n"
      example: []
      syntax:
        content:
          CSharp: public string URL { get; set; }
          VB: Public Property URL As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.Configuration.URL*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.Configuration.ConfigKey
      commentId: P:Kount.Ris.Configuration.ConfigKey
      language: CSharp
      name:
        CSharp: ConfigKey
        VB: ConfigKey
      nameWithType:
        CSharp: Configuration.ConfigKey
        VB: Configuration.ConfigKey
      qualifiedName:
        CSharp: Kount.Ris.Configuration.ConfigKey
        VB: Kount.Ris.Configuration.ConfigKey
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Configuration.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ConfigKey
        path: Kount/Ris/Configuration.cs
        startLine: 41
      summary: "\nConfig Key used in hashing method.\n"
      example: []
      syntax:
        content:
          CSharp: public string ConfigKey { get; set; }
          VB: Public Property ConfigKey As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.Configuration.ConfigKey*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.Configuration.ConnectTimeout
      commentId: P:Kount.Ris.Configuration.ConnectTimeout
      language: CSharp
      name:
        CSharp: ConnectTimeout
        VB: ConnectTimeout
      nameWithType:
        CSharp: Configuration.ConnectTimeout
        VB: Configuration.ConnectTimeout
      qualifiedName:
        CSharp: Kount.Ris.Configuration.ConnectTimeout
        VB: Kount.Ris.Configuration.ConnectTimeout
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Configuration.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ConnectTimeout
        path: Kount/Ris/Configuration.cs
        startLine: 46
      summary: "\nRIS connect timeout value measured in milliseconds.\n"
      example: []
      syntax:
        content:
          CSharp: public string ConnectTimeout { get; set; }
          VB: Public Property ConnectTimeout As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.Configuration.ConnectTimeout*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.Configuration.Version
      commentId: P:Kount.Ris.Configuration.Version
      language: CSharp
      name:
        CSharp: Version
        VB: Version
      nameWithType:
        CSharp: Configuration.Version
        VB: Configuration.Version
      qualifiedName:
        CSharp: Kount.Ris.Configuration.Version
        VB: Kount.Ris.Configuration.Version
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Configuration.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Version
        path: Kount/Ris/Configuration.cs
        startLine: 51
      summary: "\nRIS version\n"
      example: []
      syntax:
        content:
          CSharp: public string Version { get; set; }
          VB: Public Property Version As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.Configuration.Version*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.Configuration.ApiKey
      commentId: P:Kount.Ris.Configuration.ApiKey
      language: CSharp
      name:
        CSharp: ApiKey
        VB: ApiKey
      nameWithType:
        CSharp: Configuration.ApiKey
        VB: Configuration.ApiKey
      qualifiedName:
        CSharp: Kount.Ris.Configuration.ApiKey
        VB: Kount.Ris.Configuration.ApiKey
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Configuration.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ApiKey
        path: Kount/Ris/Configuration.cs
        startLine: 56
      summary: "\nAPI Key value from API Key page within Agent Web Console.\n"
      example: []
      syntax:
        content:
          CSharp: public string ApiKey { get; set; }
          VB: Public Property ApiKey As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.Configuration.ApiKey*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.Configuration.CertificateFile
      commentId: P:Kount.Ris.Configuration.CertificateFile
      language: CSharp
      name:
        CSharp: CertificateFile
        VB: CertificateFile
      nameWithType:
        CSharp: Configuration.CertificateFile
        VB: Configuration.CertificateFile
      qualifiedName:
        CSharp: Kount.Ris.Configuration.CertificateFile
        VB: Kount.Ris.Configuration.CertificateFile
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Configuration.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: CertificateFile
        path: Kount/Ris/Configuration.cs
        startLine: 61
      summary: "\nFull path of the certificate pk12 or pfx file.\n"
      example: []
      syntax:
        content:
          CSharp: public string CertificateFile { get; set; }
          VB: Public Property CertificateFile As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.Configuration.CertificateFile*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Kount.Ris.Configuration.PrivateKeyPassword
      commentId: P:Kount.Ris.Configuration.PrivateKeyPassword
      language: CSharp
      name:
        CSharp: PrivateKeyPassword
        VB: PrivateKeyPassword
      nameWithType:
        CSharp: Configuration.PrivateKeyPassword
        VB: Configuration.PrivateKeyPassword
      qualifiedName:
        CSharp: Kount.Ris.Configuration.PrivateKeyPassword
        VB: Kount.Ris.Configuration.PrivateKeyPassword
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Configuration.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: PrivateKeyPassword
        path: Kount/Ris/Configuration.cs
        startLine: 66
      summary: "\nPassword used to export the certificate\n"
      example: []
      syntax:
        content:
          CSharp: public string PrivateKeyPassword { get; set; }
          VB: Public Property PrivateKeyPassword As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.Configuration.PrivateKeyPassword*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Kount.Ris.IllegalArgumentException
    commentId: T:Kount.Ris.IllegalArgumentException
    language: CSharp
    name:
      CSharp: IllegalArgumentException
      VB: IllegalArgumentException
    nameWithType:
      CSharp: IllegalArgumentException
      VB: IllegalArgumentException
    qualifiedName:
      CSharp: Kount.Ris.IllegalArgumentException
      VB: Kount.Ris.IllegalArgumentException
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/IllegalArgumentException.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: IllegalArgumentException
      path: Kount/Ris/IllegalArgumentException.cs
      startLine: 15
    summary: "\nKount Ris Illegal argument exception.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class IllegalArgumentException : Exception'
        VB: >-
          Public Class IllegalArgumentException

              Inherits Exception
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.IllegalArgumentException.#ctor(System.String)
      commentId: M:Kount.Ris.IllegalArgumentException.#ctor(System.String)
      language: CSharp
      name:
        CSharp: IllegalArgumentException(String)
        VB: IllegalArgumentException(String)
      nameWithType:
        CSharp: IllegalArgumentException.IllegalArgumentException(String)
        VB: IllegalArgumentException.IllegalArgumentException(String)
      qualifiedName:
        CSharp: Kount.Ris.IllegalArgumentException.IllegalArgumentException(System.String)
        VB: Kount.Ris.IllegalArgumentException.IllegalArgumentException(System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/IllegalArgumentException.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/IllegalArgumentException.cs
        startLine: 21
      summary: "\nCreate the exception with an error message\n"
      example: []
      syntax:
        content:
          CSharp: public IllegalArgumentException(string errorMessage)
          VB: Public Sub New(errorMessage As String)
        parameters:
        - id: errorMessage
          type: System.String
          description: Error message.
      overload: Kount.Ris.IllegalArgumentException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.IllegalArgumentException.#ctor(System.String,Exception)
      commentId: M:Kount.Ris.IllegalArgumentException.#ctor(System.String,Exception)
      language: CSharp
      name:
        CSharp: IllegalArgumentException(String, Exception)
        VB: IllegalArgumentException(String, Exception)
      nameWithType:
        CSharp: IllegalArgumentException.IllegalArgumentException(String, Exception)
        VB: IllegalArgumentException.IllegalArgumentException(String, Exception)
      qualifiedName:
        CSharp: Kount.Ris.IllegalArgumentException.IllegalArgumentException(System.String, Exception)
        VB: Kount.Ris.IllegalArgumentException.IllegalArgumentException(System.String, Exception)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/IllegalArgumentException.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/IllegalArgumentException.cs
        startLine: 31
      summary: "\nCreate the exception with an error message and another exception.\n"
      example: []
      syntax:
        content:
          CSharp: public IllegalArgumentException(string errorMessage, Exception innerEx)
          VB: Public Sub New(errorMessage As String, innerEx As Exception)
        parameters:
        - id: errorMessage
          type: System.String
          description: Error message.
        - id: innerEx
          type: Exception
          description: Inner exception.
      overload: Kount.Ris.IllegalArgumentException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.IllegalArgumentException.ErrorMessage
      commentId: P:Kount.Ris.IllegalArgumentException.ErrorMessage
      language: CSharp
      name:
        CSharp: ErrorMessage
        VB: ErrorMessage
      nameWithType:
        CSharp: IllegalArgumentException.ErrorMessage
        VB: IllegalArgumentException.ErrorMessage
      qualifiedName:
        CSharp: Kount.Ris.IllegalArgumentException.ErrorMessage
        VB: Kount.Ris.IllegalArgumentException.ErrorMessage
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/IllegalArgumentException.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ErrorMessage
        path: Kount/Ris/IllegalArgumentException.cs
        startLine: 39
      summary: "\nGets the error message.\n"
      example: []
      syntax:
        content:
          CSharp: public string ErrorMessage { get; }
          VB: Public ReadOnly Property ErrorMessage As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.IllegalArgumentException.ErrorMessage*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Kount.Ris.Inquiry
    commentId: T:Kount.Ris.Inquiry
    language: CSharp
    name:
      CSharp: Inquiry
      VB: Inquiry
    nameWithType:
      CSharp: Inquiry
      VB: Inquiry
    qualifiedName:
      CSharp: Kount.Ris.Inquiry
      VB: Kount.Ris.Inquiry
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/Inquiry.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: Inquiry
      path: Kount/Ris/Inquiry.cs
      startLine: 15
    summary: "\nInquiry class. A bunch of setters for sending initial transaction\ndata to a Kount RIS server.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Inquiry : Request'
        VB: >-
          Public Class Inquiry

              Inherits Request
    inheritance:
    - System.Object
    - Kount.Ris.Request
    inheritedMembers:
    - Kount.Ris.Request.Data
    - Kount.Ris.Request.GetResponse(System.Boolean)
    - Kount.Ris.Request.SetParameter(System.String,System.String)
    - Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes)
    - Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes)
    - Kount.Ris.Request.SetMerchantId(System.Int32)
    - Kount.Ris.Request.SetKountCentralCustomerId(System.String)
    - Kount.Ris.Request.SetSessionId(System.String)
    - Kount.Ris.Request.SetOrderNumber(System.String)
    - Kount.Ris.Request.SetMack(System.Char)
    - Kount.Ris.Request.SetAuth(System.Char)
    - Kount.Ris.Request.SetAvsz(System.Char)
    - Kount.Ris.Request.SetAvst(System.Char)
    - Kount.Ris.Request.SetCvvr(System.Char)
    - Kount.Ris.Request.SetCardPaymentMasked(System.String)
    - Kount.Ris.Request.SetNoPayment
    - Kount.Ris.Request.SetPayment(System.String,System.String)
    - Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes,System.String)
    - Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String)
    - Kount.Ris.Request.GetParam(System.String)
    - Kount.Ris.Request.GetUrl
    - Kount.Ris.Request.SetUrl(System.String)
    - Kount.Ris.Request.SetCertificate(System.String,System.String)
    - Kount.Ris.Request.SetApiKey(System.String)
    - Kount.Ris.Request.GetCertificateFile
    - Kount.Ris.Request.GetPrivateKeyPassword
    - Kount.Ris.Request.SetKhashPaymentEncoding
    - Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean)
    - Kount.Ris.Request.SetPaymentTokenLast4(System.String)
    - Kount.Ris.Request.SetVersion(System.String)
    - Kount.Ris.Request.IsSetKhashPaymentEncoding
    - Kount.Ris.Request.SetPaymentToken(System.String)
    - Kount.Ris.Request.CheckConfigurationParameter(System.String,System.String)
    - Kount.Ris.Request.SafeGet(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.Inquiry.#ctor
      commentId: M:Kount.Ris.Inquiry.#ctor
      language: CSharp
      name:
        CSharp: Inquiry()
        VB: Inquiry()
      nameWithType:
        CSharp: Inquiry.Inquiry()
        VB: Inquiry.Inquiry()
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.Inquiry()
        VB: Kount.Ris.Inquiry.Inquiry()
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/Inquiry.cs
        startLine: 22
      summary: "\nConstructor. Sets the mode to 'Q', the currency to 'USD' and sets\nthe SDK identifier value. Use SetMode(char) and SetCurrency(string)\nto change the RIS mode and currency respectively.\n"
      example: []
      syntax:
        content:
          CSharp: public Inquiry()
          VB: Public Sub New
      overload: Kount.Ris.Inquiry.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.#ctor(System.Boolean)
      commentId: M:Kount.Ris.Inquiry.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: Inquiry(Boolean)
        VB: Inquiry(Boolean)
      nameWithType:
        CSharp: Inquiry.Inquiry(Boolean)
        VB: Inquiry.Inquiry(Boolean)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.Inquiry(System.Boolean)
        VB: Kount.Ris.Inquiry.Inquiry(System.Boolean)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/Inquiry.cs
        startLine: 39
      summary: "\nConstructor. Sets the mode to 'Q', the currency to 'USD' and sets\nthe SDK identifier value. Use SetMode(char) and SetCurrency(string)\nto change the RIS mode and currency respectively.\n"
      example: []
      syntax:
        content:
          CSharp: public Inquiry(bool checkConfiguration)
          VB: Public Sub New(checkConfiguration As Boolean)
        parameters:
        - id: checkConfiguration
          type: System.Boolean
          description: "If is true: will check config file if \n`Ris.Url`, \n`Ris.MerchantId`, \n`Ris.Config.Key` and `Ris.Connect.Timeout` are set."
      overload: Kount.Ris.Inquiry.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.#ctor(System.Boolean,Kount.Ris.Configuration)
      commentId: M:Kount.Ris.Inquiry.#ctor(System.Boolean,Kount.Ris.Configuration)
      language: CSharp
      name:
        CSharp: Inquiry(Boolean, Configuration)
        VB: Inquiry(Boolean, Configuration)
      nameWithType:
        CSharp: Inquiry.Inquiry(Boolean, Configuration)
        VB: Inquiry.Inquiry(Boolean, Configuration)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.Inquiry(System.Boolean, Kount.Ris.Configuration)
        VB: Kount.Ris.Inquiry.Inquiry(System.Boolean, Kount.Ris.Configuration)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/Inquiry.cs
        startLine: 57
      summary: "\nConstructor. Sets the mode to 'Q', the currency to 'USD' and sets\nthe SDK identifier value. Use SetMode(char) and SetCurrency(string)\nto change the RIS mode and currency respectively.\n"
      example: []
      syntax:
        content:
          CSharp: public Inquiry(bool checkConfiguration, Configuration configuration)
          VB: Public Sub New(checkConfiguration As Boolean, configuration As Configuration)
        parameters:
        - id: checkConfiguration
          type: System.Boolean
          description: "If is true: will check config file if \n`Ris.Url`, \n`Ris.MerchantId`, \n`Ris.Config.Key` and `Ris.Connect.Timeout` are set."
        - id: configuration
          type: Kount.Ris.Configuration
          description: Configuration class with raw values
      overload: Kount.Ris.Inquiry.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetMode(System.Char)
      commentId: M:Kount.Ris.Inquiry.SetMode(System.Char)
      language: CSharp
      name:
        CSharp: SetMode(Char)
        VB: SetMode(Char)
      nameWithType:
        CSharp: Inquiry.SetMode(Char)
        VB: Inquiry.SetMode(Char)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetMode(System.Char)
        VB: Kount.Ris.Inquiry.SetMode(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetMode
        path: Kount/Ris/Inquiry.cs
        startLine: 69
      summary: "\nSet the mode of the inquiry.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void SetMode(char mode)
          VB: Protected Overrides Sub SetMode(mode As Char)
        parameters:
        - id: mode
          type: System.Char
          description: Set mode Q or P
      overload: Kount.Ris.Inquiry.SetMode*
      overridden: Kount.Ris.Request.SetMode(System.Char)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Kount.Ris.Inquiry.SetDateOfBirth(System.String)
      commentId: M:Kount.Ris.Inquiry.SetDateOfBirth(System.String)
      language: CSharp
      name:
        CSharp: SetDateOfBirth(String)
        VB: SetDateOfBirth(String)
      nameWithType:
        CSharp: Inquiry.SetDateOfBirth(String)
        VB: Inquiry.SetDateOfBirth(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetDateOfBirth(System.String)
        VB: Kount.Ris.Inquiry.SetDateOfBirth(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetDateOfBirth
        path: Kount/Ris/Inquiry.cs
        startLine: 78
      summary: "\nSet the date of birth in the format YYYY-MM-DD\n"
      example: []
      syntax:
        content:
          CSharp: public void SetDateOfBirth(string dob)
          VB: Public Sub SetDateOfBirth(dob As String)
        parameters:
        - id: dob
          type: System.String
          description: Date of birth
      overload: Kount.Ris.Inquiry.SetDateOfBirth*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetGender(System.Char)
      commentId: M:Kount.Ris.Inquiry.SetGender(System.Char)
      language: CSharp
      name:
        CSharp: SetGender(Char)
        VB: SetGender(Char)
      nameWithType:
        CSharp: Inquiry.SetGender(Char)
        VB: Inquiry.SetGender(Char)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetGender(System.Char)
        VB: Kount.Ris.Inquiry.SetGender(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetGender
        path: Kount/Ris/Inquiry.cs
        startLine: 87
      summary: "\nSet the gender\n"
      example: []
      syntax:
        content:
          CSharp: public void SetGender(char gender)
          VB: Public Sub SetGender(gender As Char)
        parameters:
        - id: gender
          type: System.Char
          description: M(ale) or F(emale)
      overload: Kount.Ris.Inquiry.SetGender*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetUserDefinedField(System.String,System.String)
      commentId: M:Kount.Ris.Inquiry.SetUserDefinedField(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetUserDefinedField(String, String)
        VB: SetUserDefinedField(String, String)
      nameWithType:
        CSharp: Inquiry.SetUserDefinedField(String, String)
        VB: Inquiry.SetUserDefinedField(String, String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetUserDefinedField(System.String, System.String)
        VB: Kount.Ris.Inquiry.SetUserDefinedField(System.String, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetUserDefinedField
        path: Kount/Ris/Inquiry.cs
        startLine: 97
      summary: "\nSet the value of a named user defined field\n"
      example: []
      syntax:
        content:
          CSharp: public void SetUserDefinedField(string label, string value)
          VB: Public Sub SetUserDefinedField(label As String, value As String)
        parameters:
        - id: label
          type: System.String
          description: Label of the user defined field
        - id: value
          type: System.String
          description: Value of the user defined field
      overload: Kount.Ris.Inquiry.SetUserDefinedField*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetCurrency(System.String)
      commentId: M:Kount.Ris.Inquiry.SetCurrency(System.String)
      language: CSharp
      name:
        CSharp: SetCurrency(String)
        VB: SetCurrency(String)
      nameWithType:
        CSharp: Inquiry.SetCurrency(String)
        VB: Inquiry.SetCurrency(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetCurrency(System.String)
        VB: Kount.Ris.Inquiry.SetCurrency(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetCurrency
        path: Kount/Ris/Inquiry.cs
        startLine: 107
      summary: "\nSet the three character ISO-4217 currency code.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCurrency(string currency)
          VB: Public Sub SetCurrency(currency As String)
        parameters:
        - id: currency
          type: System.String
          description: Three character code e.g. USD.
      overload: Kount.Ris.Inquiry.SetCurrency*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetSdkVersion(System.String)
      commentId: M:Kount.Ris.Inquiry.SetSdkVersion(System.String)
      language: CSharp
      name:
        CSharp: SetSdkVersion(String)
        VB: SetSdkVersion(String)
      nameWithType:
        CSharp: Inquiry.SetSdkVersion(String)
        VB: Inquiry.SetSdkVersion(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetSdkVersion(System.String)
        VB: Kount.Ris.Inquiry.SetSdkVersion(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetSdkVersion
        path: Kount/Ris/Inquiry.cs
        startLine: 117
      summary: "\nSet the current SDK version SDK_Type-RIS_VERSION-SDK_BUILD_DATETIMESTAMP.\ne.g. Sdk-Ris-Dnet-0651-20170505T1458\n"
      example: []
      syntax:
        content:
          CSharp: public void SetSdkVersion(string sdkVersion)
          VB: Public Sub SetSdkVersion(sdkVersion As String)
        parameters:
        - id: sdkVersion
          type: System.String
          description: Three character code e.g. USD.
      overload: Kount.Ris.Inquiry.SetSdkVersion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetTotal(System.Int32)
      commentId: M:Kount.Ris.Inquiry.SetTotal(System.Int32)
      language: CSharp
      name:
        CSharp: SetTotal(Int32)
        VB: SetTotal(Int32)
      nameWithType:
        CSharp: Inquiry.SetTotal(Int32)
        VB: Inquiry.SetTotal(Int32)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetTotal(System.Int32)
        VB: Kount.Ris.Inquiry.SetTotal(System.Int32)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetTotal
        path: Kount/Ris/Inquiry.cs
        startLine: 126
      summary: "\nSet the total amount of the transaction.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTotal(int total)
          VB: Public Sub SetTotal(total As Integer)
        parameters:
        - id: total
          type: System.Int32
          description: Total transaction amount in pennies.
      overload: Kount.Ris.Inquiry.SetTotal*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetIpAddress(System.String)
      commentId: M:Kount.Ris.Inquiry.SetIpAddress(System.String)
      language: CSharp
      name:
        CSharp: SetIpAddress(String)
        VB: SetIpAddress(String)
      nameWithType:
        CSharp: Inquiry.SetIpAddress(String)
        VB: Inquiry.SetIpAddress(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetIpAddress(System.String)
        VB: Kount.Ris.Inquiry.SetIpAddress(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetIpAddress
        path: Kount/Ris/Inquiry.cs
        startLine: 135
      summary: "\nSet the IP address of the client.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetIpAddress(string address)
          VB: Public Sub SetIpAddress(address As String)
        parameters:
        - id: address
          type: System.String
          description: IP address of the client.
      overload: Kount.Ris.Inquiry.SetIpAddress*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetUserAgent(System.String)
      commentId: M:Kount.Ris.Inquiry.SetUserAgent(System.String)
      language: CSharp
      name:
        CSharp: SetUserAgent(String)
        VB: SetUserAgent(String)
      nameWithType:
        CSharp: Inquiry.SetUserAgent(String)
        VB: Inquiry.SetUserAgent(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetUserAgent(System.String)
        VB: Kount.Ris.Inquiry.SetUserAgent(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetUserAgent
        path: Kount/Ris/Inquiry.cs
        startLine: 144
      summary: "\nSet the user agent of the client.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetUserAgent(string userAgent)
          VB: Public Sub SetUserAgent(userAgent As String)
        parameters:
        - id: userAgent
          type: System.String
          description: User agent string of the client.
      overload: Kount.Ris.Inquiry.SetUserAgent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetEmail(System.String)
      commentId: M:Kount.Ris.Inquiry.SetEmail(System.String)
      language: CSharp
      name:
        CSharp: SetEmail(String)
        VB: SetEmail(String)
      nameWithType:
        CSharp: Inquiry.SetEmail(String)
        VB: Inquiry.SetEmail(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetEmail(System.String)
        VB: Kount.Ris.Inquiry.SetEmail(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetEmail
        path: Kount/Ris/Inquiry.cs
        startLine: 153
      summary: "\nSet the email address of the client.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetEmail(string email)
          VB: Public Sub SetEmail(email As String)
        parameters:
        - id: email
          type: System.String
          description: Email address.
      overload: Kount.Ris.Inquiry.SetEmail*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetName(System.String)
      commentId: M:Kount.Ris.Inquiry.SetName(System.String)
      language: CSharp
      name:
        CSharp: SetName(String)
        VB: SetName(String)
      nameWithType:
        CSharp: Inquiry.SetName(String)
        VB: Inquiry.SetName(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetName(System.String)
        VB: Kount.Ris.Inquiry.SetName(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetName
        path: Kount/Ris/Inquiry.cs
        startLine: 162
      summary: "\nSet the name of the client.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetName(string name)
          VB: Public Sub SetName(name As String)
        parameters:
        - id: name
          type: System.String
          description: Client name.
      overload: Kount.Ris.Inquiry.SetName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetUnique(System.String)
      commentId: M:Kount.Ris.Inquiry.SetUnique(System.String)
      language: CSharp
      name:
        CSharp: SetUnique(String)
        VB: SetUnique(String)
      nameWithType:
        CSharp: Inquiry.SetUnique(String)
        VB: Inquiry.SetUnique(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetUnique(System.String)
        VB: Kount.Ris.Inquiry.SetUnique(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetUnique
        path: Kount/Ris/Inquiry.cs
        startLine: 171
      summary: "\nSet the uniqe (cookie identifier, etc.) of the client.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetUnique(string unique)
          VB: Public Sub SetUnique(unique As String)
        parameters:
        - id: unique
          type: System.String
          description: Unique client identifier
      overload: Kount.Ris.Inquiry.SetUnique*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetEpoch(System.Int64)
      commentId: M:Kount.Ris.Inquiry.SetEpoch(System.Int64)
      language: CSharp
      name:
        CSharp: SetEpoch(Int64)
        VB: SetEpoch(Int64)
      nameWithType:
        CSharp: Inquiry.SetEpoch(Int64)
        VB: Inquiry.SetEpoch(Int64)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetEpoch(System.Int64)
        VB: Kount.Ris.Inquiry.SetEpoch(System.Int64)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetEpoch
        path: Kount/Ris/Inquiry.cs
        startLine: 181
      summary: "\nSet the timestamp (in seconds) since the UNIX epoch for when the\nUNIQ value was set.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetEpoch(long timeStamp)
          VB: Public Sub SetEpoch(timeStamp As Long)
        parameters:
        - id: timeStamp
          type: System.Int64
          description: Set the timestamp
      overload: Kount.Ris.Inquiry.SetEpoch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetCash(System.Int32)
      commentId: M:Kount.Ris.Inquiry.SetCash(System.Int32)
      language: CSharp
      name:
        CSharp: SetCash(Int32)
        VB: SetCash(Int32)
      nameWithType:
        CSharp: Inquiry.SetCash(Int32)
        VB: Inquiry.SetCash(Int32)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetCash(System.Int32)
        VB: Kount.Ris.Inquiry.SetCash(System.Int32)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetCash
        path: Kount/Ris/Inquiry.cs
        startLine: 190
      summary: "\nSet the cash value of any fencible goods.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCash(int cash)
          VB: Public Sub SetCash(cash As Integer)
        parameters:
        - id: cash
          type: System.Int32
          description: Cash value in pennies.
      overload: Kount.Ris.Inquiry.SetCash*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetShipType(System.String)
      commentId: M:Kount.Ris.Inquiry.SetShipType(System.String)
      language: CSharp
      name:
        CSharp: SetShipType(String)
        VB: SetShipType(String)
      nameWithType:
        CSharp: Inquiry.SetShipType(String)
        VB: Inquiry.SetShipType(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetShipType(System.String)
        VB: Kount.Ris.Inquiry.SetShipType(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetShipType
        path: Kount/Ris/Inquiry.cs
        startLine: 199
      summary: "\nSet the shipping type.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetShipType(string shipType)
          VB: Public Sub SetShipType(shipType As String)
        parameters:
        - id: shipType
          type: System.String
          description: 'Ship type: e.g. ST, ND, etc.'
      overload: Kount.Ris.Inquiry.SetShipType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetBillingAddress(System.String,System.String,System.String,System.String,System.String,System.String)
      commentId: M:Kount.Ris.Inquiry.SetBillingAddress(System.String,System.String,System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SetBillingAddress(String, String, String, String, String, String)
        VB: SetBillingAddress(String, String, String, String, String, String)
      nameWithType:
        CSharp: Inquiry.SetBillingAddress(String, String, String, String, String, String)
        VB: Inquiry.SetBillingAddress(String, String, String, String, String, String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetBillingAddress(System.String, System.String, System.String, System.String, System.String, System.String)
        VB: Kount.Ris.Inquiry.SetBillingAddress(System.String, System.String, System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetBillingAddress
        path: Kount/Ris/Inquiry.cs
        startLine: 213
      summary: "\nSet the billing address.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetBillingAddress(string address1, string address2, string city, string state, string postalCode, string country)
          VB: Public Sub SetBillingAddress(address1 As String, address2 As String, city As String, state As String, postalCode As String, country As String)
        parameters:
        - id: address1
          type: System.String
          description: Address line 1.
        - id: address2
          type: System.String
          description: Address line 2.
        - id: city
          type: System.String
          description: Set the city.
        - id: state
          type: System.String
          description: Set the state.
        - id: postalCode
          type: System.String
          description: Set the postal code.
        - id: country
          type: System.String
          description: The the country.
      overload: Kount.Ris.Inquiry.SetBillingAddress*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetBillingAddress(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
      commentId: M:Kount.Ris.Inquiry.SetBillingAddress(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SetBillingAddress(String, String, String, String, String, String, String, String)
        VB: SetBillingAddress(String, String, String, String, String, String, String, String)
      nameWithType:
        CSharp: Inquiry.SetBillingAddress(String, String, String, String, String, String, String, String)
        VB: Inquiry.SetBillingAddress(String, String, String, String, String, String, String, String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetBillingAddress(System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String)
        VB: Kount.Ris.Inquiry.SetBillingAddress(System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetBillingAddress
        path: Kount/Ris/Inquiry.cs
        startLine: 240
      summary: "\nSet the billing address.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetBillingAddress(string address1, string address2, string city, string state, string postalCode, string country, string premise, string street)
          VB: Public Sub SetBillingAddress(address1 As String, address2 As String, city As String, state As String, postalCode As String, country As String, premise As String, street As String)
        parameters:
        - id: address1
          type: System.String
          description: Address line 1.
        - id: address2
          type: System.String
          description: Address line 2.
        - id: city
          type: System.String
          description: Set the city.
        - id: state
          type: System.String
          description: Set the state.
        - id: postalCode
          type: System.String
          description: Set the postal code.
        - id: country
          type: System.String
          description: Set the country.
        - id: premise
          type: System.String
          description: Set the premise.
        - id: street
          type: System.String
          description: Set the street.
      overload: Kount.Ris.Inquiry.SetBillingAddress*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetBillingPhoneNumber(System.String)
      commentId: M:Kount.Ris.Inquiry.SetBillingPhoneNumber(System.String)
      language: CSharp
      name:
        CSharp: SetBillingPhoneNumber(String)
        VB: SetBillingPhoneNumber(String)
      nameWithType:
        CSharp: Inquiry.SetBillingPhoneNumber(String)
        VB: Inquiry.SetBillingPhoneNumber(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetBillingPhoneNumber(System.String)
        VB: Kount.Ris.Inquiry.SetBillingPhoneNumber(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetBillingPhoneNumber
        path: Kount/Ris/Inquiry.cs
        startLine: 264
      summary: "\nSet the billing phone number.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetBillingPhoneNumber(string phoneNumber)
          VB: Public Sub SetBillingPhoneNumber(phoneNumber As String)
        parameters:
        - id: phoneNumber
          type: System.String
          description: Phone number.
      overload: Kount.Ris.Inquiry.SetBillingPhoneNumber*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetShippingAddress(System.String,System.String,System.String,System.String,System.String,System.String)
      commentId: M:Kount.Ris.Inquiry.SetShippingAddress(System.String,System.String,System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SetShippingAddress(String, String, String, String, String, String)
        VB: SetShippingAddress(String, String, String, String, String, String)
      nameWithType:
        CSharp: Inquiry.SetShippingAddress(String, String, String, String, String, String)
        VB: Inquiry.SetShippingAddress(String, String, String, String, String, String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetShippingAddress(System.String, System.String, System.String, System.String, System.String, System.String)
        VB: Kount.Ris.Inquiry.SetShippingAddress(System.String, System.String, System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetShippingAddress
        path: Kount/Ris/Inquiry.cs
        startLine: 278
      summary: "\nSet the shipping address.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetShippingAddress(string address1, string address2, string city, string state, string postalCode, string country)
          VB: Public Sub SetShippingAddress(address1 As String, address2 As String, city As String, state As String, postalCode As String, country As String)
        parameters:
        - id: address1
          type: System.String
          description: Address line 1.
        - id: address2
          type: System.String
          description: Address line 2.
        - id: city
          type: System.String
          description: Set the city.
        - id: state
          type: System.String
          description: Set the state.
        - id: postalCode
          type: System.String
          description: Set the postal code.
        - id: country
          type: System.String
          description: Set the country.
      overload: Kount.Ris.Inquiry.SetShippingAddress*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetShippingAddress(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
      commentId: M:Kount.Ris.Inquiry.SetShippingAddress(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SetShippingAddress(String, String, String, String, String, String, String, String)
        VB: SetShippingAddress(String, String, String, String, String, String, String, String)
      nameWithType:
        CSharp: Inquiry.SetShippingAddress(String, String, String, String, String, String, String, String)
        VB: Inquiry.SetShippingAddress(String, String, String, String, String, String, String, String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetShippingAddress(System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String)
        VB: Kount.Ris.Inquiry.SetShippingAddress(System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetShippingAddress
        path: Kount/Ris/Inquiry.cs
        startLine: 305
      summary: "\nSet the shipping address.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetShippingAddress(string address1, string address2, string city, string state, string postalCode, string country, string premise, string street)
          VB: Public Sub SetShippingAddress(address1 As String, address2 As String, city As String, state As String, postalCode As String, country As String, premise As String, street As String)
        parameters:
        - id: address1
          type: System.String
          description: Address line 1.
        - id: address2
          type: System.String
          description: Address line 2.
        - id: city
          type: System.String
          description: Set the city.
        - id: state
          type: System.String
          description: Set the state.
        - id: postalCode
          type: System.String
          description: Set the postal code.
        - id: country
          type: System.String
          description: Set the country.
        - id: premise
          type: System.String
          description: Set the premise.
        - id: street
          type: System.String
          description: Set the street.
      overload: Kount.Ris.Inquiry.SetShippingAddress*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetShippingPhoneNumber(System.String)
      commentId: M:Kount.Ris.Inquiry.SetShippingPhoneNumber(System.String)
      language: CSharp
      name:
        CSharp: SetShippingPhoneNumber(String)
        VB: SetShippingPhoneNumber(String)
      nameWithType:
        CSharp: Inquiry.SetShippingPhoneNumber(String)
        VB: Inquiry.SetShippingPhoneNumber(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetShippingPhoneNumber(System.String)
        VB: Kount.Ris.Inquiry.SetShippingPhoneNumber(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetShippingPhoneNumber
        path: Kount/Ris/Inquiry.cs
        startLine: 329
      summary: "\nSet the shipping phone number.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetShippingPhoneNumber(string phoneNumber)
          VB: Public Sub SetShippingPhoneNumber(phoneNumber As String)
        parameters:
        - id: phoneNumber
          type: System.String
          description: Phone number.
      overload: Kount.Ris.Inquiry.SetShippingPhoneNumber*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetShippingName(System.String)
      commentId: M:Kount.Ris.Inquiry.SetShippingName(System.String)
      language: CSharp
      name:
        CSharp: SetShippingName(String)
        VB: SetShippingName(String)
      nameWithType:
        CSharp: Inquiry.SetShippingName(String)
        VB: Inquiry.SetShippingName(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetShippingName(System.String)
        VB: Kount.Ris.Inquiry.SetShippingName(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetShippingName
        path: Kount/Ris/Inquiry.cs
        startLine: 338
      summary: "\nSet the shipping name.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetShippingName(string shipName)
          VB: Public Sub SetShippingName(shipName As String)
        parameters:
        - id: shipName
          type: System.String
          description: Shipping Name.
      overload: Kount.Ris.Inquiry.SetShippingName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetShippingEmail(System.String)
      commentId: M:Kount.Ris.Inquiry.SetShippingEmail(System.String)
      language: CSharp
      name:
        CSharp: SetShippingEmail(String)
        VB: SetShippingEmail(String)
      nameWithType:
        CSharp: Inquiry.SetShippingEmail(String)
        VB: Inquiry.SetShippingEmail(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetShippingEmail(System.String)
        VB: Kount.Ris.Inquiry.SetShippingEmail(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetShippingEmail
        path: Kount/Ris/Inquiry.cs
        startLine: 347
      summary: "\nSet the shipping email.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetShippingEmail(string shipEmail)
          VB: Public Sub SetShippingEmail(shipEmail As String)
        parameters:
        - id: shipEmail
          type: System.String
          description: Shipping Email.
      overload: Kount.Ris.Inquiry.SetShippingEmail*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetAnid(System.String)
      commentId: M:Kount.Ris.Inquiry.SetAnid(System.String)
      language: CSharp
      name:
        CSharp: SetAnid(String)
        VB: SetAnid(String)
      nameWithType:
        CSharp: Inquiry.SetAnid(String)
        VB: Inquiry.SetAnid(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetAnid(System.String)
        VB: Kount.Ris.Inquiry.SetAnid(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetAnid
        path: Kount/Ris/Inquiry.cs
        startLine: 356
      summary: "\nSet the Anid of the client.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAnid(string anid)
          VB: Public Sub SetAnid(anid As String)
        parameters:
        - id: anid
          type: System.String
          description: Anid of the client.
      overload: Kount.Ris.Inquiry.SetAnid*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetWebsite(System.String)
      commentId: M:Kount.Ris.Inquiry.SetWebsite(System.String)
      language: CSharp
      name:
        CSharp: SetWebsite(String)
        VB: SetWebsite(String)
      nameWithType:
        CSharp: Inquiry.SetWebsite(String)
        VB: Inquiry.SetWebsite(String)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetWebsite(System.String)
        VB: Kount.Ris.Inquiry.SetWebsite(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetWebsite
        path: Kount/Ris/Inquiry.cs
        startLine: 365
      summary: "\nWebsite id associated with the transaction\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWebsite(string site)
          VB: Public Sub SetWebsite(site As String)
        parameters:
        - id: site
          type: System.String
          description: String 1 - 8 characters long
      overload: Kount.Ris.Inquiry.SetWebsite*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Inquiry.SetCart(System.Collections.ArrayList)
      commentId: M:Kount.Ris.Inquiry.SetCart(System.Collections.ArrayList)
      language: CSharp
      name:
        CSharp: SetCart(System.Collections.ArrayList)
        VB: SetCart(System.Collections.ArrayList)
      nameWithType:
        CSharp: Inquiry.SetCart(System.Collections.ArrayList)
        VB: Inquiry.SetCart(System.Collections.ArrayList)
      qualifiedName:
        CSharp: Kount.Ris.Inquiry.SetCart(System.Collections.ArrayList)
        VB: Kount.Ris.Inquiry.SetCart(System.Collections.ArrayList)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Inquiry.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetCart
        path: Kount/Ris/Inquiry.cs
        startLine: 374
      summary: "\nSet a shoppinng cart\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCart(System.Collections.ArrayList cart)
          VB: Public Sub SetCart(cart As System.Collections.ArrayList)
        parameters:
        - id: cart
          type: System.Collections.ArrayList
          description: ArrayList of Kount.Ris.CartItem objects
      overload: Kount.Ris.Inquiry.SetCart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Kount.Ris.KcEvent
    commentId: T:Kount.Ris.KcEvent
    language: CSharp
    name:
      CSharp: KcEvent
      VB: KcEvent
    nameWithType:
      CSharp: KcEvent
      VB: KcEvent
    qualifiedName:
      CSharp: Kount.Ris.KcEvent
      VB: Kount.Ris.KcEvent
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/KcEvent.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: KcEvent
      path: Kount/Ris/KcEvent.cs
      startLine: 13
    summary: "\nKount Central Event class description <br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2014 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class KcEvent : object'
        VB: >-
          Public Class KcEvent

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.KcEvent.#ctor(System.String,System.String,System.String)
      commentId: M:Kount.Ris.KcEvent.#ctor(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: KcEvent(String, String, String)
        VB: KcEvent(String, String, String)
      nameWithType:
        CSharp: KcEvent.KcEvent(String, String, String)
        VB: KcEvent.KcEvent(String, String, String)
      qualifiedName:
        CSharp: Kount.Ris.KcEvent.KcEvent(System.String, System.String, System.String)
        VB: Kount.Ris.KcEvent.KcEvent(System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/KcEvent.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/KcEvent.cs
        startLine: 36
      summary: "\nA helper class to oraganize Kount Central threshold event data in the RIS response.\n"
      example: []
      syntax:
        content:
          CSharp: public KcEvent(string code, string expression, string decision)
          VB: Public Sub New(code As String, expression As String, decision As String)
        parameters:
        - id: code
          type: System.String
          description: The threshold event's code
        - id: expression
          type: System.String
          description: The threshold event's expression
        - id: decision
          type: System.String
          description: The threshold event's decision
      overload: Kount.Ris.KcEvent.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.KcEvent.Code
      commentId: P:Kount.Ris.KcEvent.Code
      language: CSharp
      name:
        CSharp: Code
        VB: Code
      nameWithType:
        CSharp: KcEvent.Code
        VB: KcEvent.Code
      qualifiedName:
        CSharp: Kount.Ris.KcEvent.Code
        VB: Kount.Ris.KcEvent.Code
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/KcEvent.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Code
        path: Kount/Ris/KcEvent.cs
        startLine: 49
      summary: "\nGets the threshold event code\n"
      example: []
      syntax:
        content:
          CSharp: public string Code { get; }
          VB: Public ReadOnly Property Code As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.KcEvent.Code*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Kount.Ris.KcEvent.Expression
      commentId: P:Kount.Ris.KcEvent.Expression
      language: CSharp
      name:
        CSharp: Expression
        VB: Expression
      nameWithType:
        CSharp: KcEvent.Expression
        VB: KcEvent.Expression
      qualifiedName:
        CSharp: Kount.Ris.KcEvent.Expression
        VB: Kount.Ris.KcEvent.Expression
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/KcEvent.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Expression
        path: Kount/Ris/KcEvent.cs
        startLine: 57
      summary: "\nGets the threshold event expression\n"
      example: []
      syntax:
        content:
          CSharp: public string Expression { get; }
          VB: Public ReadOnly Property Expression As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.KcEvent.Expression*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Kount.Ris.KcEvent.Decision
      commentId: P:Kount.Ris.KcEvent.Decision
      language: CSharp
      name:
        CSharp: Decision
        VB: Decision
      nameWithType:
        CSharp: KcEvent.Decision
        VB: KcEvent.Decision
      qualifiedName:
        CSharp: Kount.Ris.KcEvent.Decision
        VB: Kount.Ris.KcEvent.Decision
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/KcEvent.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Decision
        path: Kount/Ris/KcEvent.cs
        startLine: 65
      summary: "\nGets the threshold event decision\n"
      example: []
      syntax:
        content:
          CSharp: public string Decision { get; }
          VB: Public ReadOnly Property Decision As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.KcEvent.Decision*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Kount.Ris.KcEvent.ToString
      commentId: M:Kount.Ris.KcEvent.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: KcEvent.ToString()
        VB: KcEvent.ToString()
      qualifiedName:
        CSharp: Kount.Ris.KcEvent.ToString()
        VB: Kount.Ris.KcEvent.ToString()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/KcEvent.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ToString
        path: Kount/Ris/KcEvent.cs
        startLine: 76
      summary: "\nOur ToString method\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: "\nThis object string representation\n"
      overload: Kount.Ris.KcEvent.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Kount.Ris.Request
    commentId: T:Kount.Ris.Request
    language: CSharp
    name:
      CSharp: Request
      VB: Request
    nameWithType:
      CSharp: Request
      VB: Request
    qualifiedName:
      CSharp: Kount.Ris.Request
      VB: Kount.Ris.Request
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/Request.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: Request
      path: Kount/Ris/Request.cs
      startLine: 29
    summary: "\nAbstract parent class for request objects.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class Request : object'
        VB: >-
          Public MustInherit Class Request

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Kount.Ris.Request.#ctor(System.Boolean,Kount.Ris.Configuration)
      commentId: M:Kount.Ris.Request.#ctor(System.Boolean,Kount.Ris.Configuration)
      language: CSharp
      name:
        CSharp: Request(Boolean, Configuration)
        VB: Request(Boolean, Configuration)
      nameWithType:
        CSharp: Request.Request(Boolean, Configuration)
        VB: Request.Request(Boolean, Configuration)
      qualifiedName:
        CSharp: Kount.Ris.Request.Request(System.Boolean, Kount.Ris.Configuration)
        VB: Kount.Ris.Request.Request(System.Boolean, Kount.Ris.Configuration)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/Request.cs
        startLine: 85
      summary: "\nConstruct a request object. Set the static setting from the\nweb.config file.\n"
      example: []
      syntax:
        content:
          CSharp: protected Request(bool checkConfiguration, Configuration configuration)
          VB: Protected Sub New(checkConfiguration As Boolean, configuration As Configuration)
        parameters:
        - id: checkConfiguration
          type: System.Boolean
          description: "By default is true: will check config file if \n`Ris.Url`, \n`Ris.MerchantId`, \n`Ris.Config.Key` are set."
        - id: configuration
          type: Kount.Ris.Configuration
          description: Instance of configuration.
      overload: Kount.Ris.Request.#ctor*
      exceptions:
      - type: Kount.Ris.RequestException
        commentId: T:Kount.Ris.RequestException
        description: >-
          Thrown when there is

          static data missing for a RIS request.
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Kount.Ris.Request.#ctor(System.Boolean)
      commentId: M:Kount.Ris.Request.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: Request(Boolean)
        VB: Request(Boolean)
      nameWithType:
        CSharp: Request.Request(Boolean)
        VB: Request.Request(Boolean)
      qualifiedName:
        CSharp: Kount.Ris.Request.Request(System.Boolean)
        VB: Kount.Ris.Request.Request(System.Boolean)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/Request.cs
        startLine: 139
      summary: "\nConstruct a request object. Set the static setting from the web.config file.\n"
      example: []
      syntax:
        content:
          CSharp: protected Request(bool checkConfiguration = true)
          VB: Protected Sub New(checkConfiguration As Boolean = True)
        parameters:
        - id: checkConfiguration
          type: System.Boolean
          description: "By default is true: will check config file if \n`Ris.Url`, \n`Ris.MerchantId`, \n`Ris.Config.Key` are set."
      overload: Kount.Ris.Request.#ctor*
      exceptions:
      - type: Kount.Ris.RequestException
        commentId: T:Kount.Ris.RequestException
        description: >-
          Thrown when there is

          static data missing for a RIS request.
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Kount.Ris.Request.Data
      commentId: P:Kount.Ris.Request.Data
      language: CSharp
      name:
        CSharp: Data
        VB: Data
      nameWithType:
        CSharp: Request.Data
        VB: Request.Data
      qualifiedName:
        CSharp: Kount.Ris.Request.Data
        VB: Kount.Ris.Request.Data
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Data
        path: Kount/Ris/Request.cs
        startLine: 146
      summary: "\nGets hashtable data\n"
      example: []
      syntax:
        content:
          CSharp: protected Hashtable Data { get; }
          VB: Protected ReadOnly Property Data As Hashtable
        parameters: []
        return:
          type: Hashtable
      overload: Kount.Ris.Request.Data*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: Kount.Ris.Request.GetResponse(System.Boolean)
      commentId: M:Kount.Ris.Request.GetResponse(System.Boolean)
      language: CSharp
      name:
        CSharp: GetResponse(Boolean)
        VB: GetResponse(Boolean)
      nameWithType:
        CSharp: Request.GetResponse(Boolean)
        VB: Request.GetResponse(Boolean)
      qualifiedName:
        CSharp: Kount.Ris.Request.GetResponse(System.Boolean)
        VB: Kount.Ris.Request.GetResponse(System.Boolean)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetResponse
        path: Kount/Ris/Request.cs
        startLine: 156
      summary: "\nGet the response from the RIS server.\n"
      example: []
      syntax:
        content:
          CSharp: public Response GetResponse(bool validate = true)
          VB: Public Function GetResponse(validate As Boolean = True) As Response
        parameters:
        - id: validate
          type: System.Boolean
          description: default value is TRUE. If FALSE validate silently doesn't throw exception.
        return:
          type: Kount.Ris.Response
          description: Kount.Ris.Response populated object.
      overload: Kount.Ris.Request.GetResponse*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetParameter(System.String,System.String)
      commentId: M:Kount.Ris.Request.SetParameter(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetParameter(String, String)
        VB: SetParameter(String, String)
      nameWithType:
        CSharp: Request.SetParameter(String, String)
        VB: Request.SetParameter(String, String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetParameter(System.String, System.String)
        VB: Kount.Ris.Request.SetParameter(System.String, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetParameter
        path: Kount/Ris/Request.cs
        startLine: 310
      summary: "\nSet parameters in the Response\n"
      example: []
      syntax:
        content:
          CSharp: public void SetParameter(string key, string value)
          VB: Public Sub SetParameter(key As String, value As String)
        parameters:
        - id: key
          type: System.String
          description: Parameter key
        - id: value
          type: System.String
          description: Parameter value
      overload: Kount.Ris.Request.SetParameter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetMode(System.Char)
      commentId: M:Kount.Ris.Request.SetMode(System.Char)
      language: CSharp
      name:
        CSharp: SetMode(Char)
        VB: SetMode(Char)
      nameWithType:
        CSharp: Request.SetMode(Char)
        VB: Request.SetMode(Char)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetMode(System.Char)
        VB: Kount.Ris.Request.SetMode(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetMode
        path: Kount/Ris/Request.cs
        startLine: 319
      summary: "\nSet the mode of the transaction.\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void SetMode(char mode)
          VB: Protected MustOverride Sub SetMode(mode As Char)
        parameters:
        - id: mode
          type: System.Char
          description: Depends on the request type.
      overload: Kount.Ris.Request.SetMode*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes)
      commentId: M:Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes)
      language: CSharp
      name:
        CSharp: SetMode(InquiryTypes)
        VB: SetMode(InquiryTypes)
      nameWithType:
        CSharp: Request.SetMode(InquiryTypes)
        VB: Request.SetMode(InquiryTypes)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes)
        VB: Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetMode
        path: Kount/Ris/Request.cs
        startLine: 325
      summary: "\nSet the mode of the transaction.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetMode(InquiryTypes inquiryType)
          VB: Public Sub SetMode(inquiryType As InquiryTypes)
        parameters:
        - id: inquiryType
          type: Kount.Enums.InquiryTypes
          description: Depends on the inquiry type.
      overload: Kount.Ris.Request.SetMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes)
      commentId: M:Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes)
      language: CSharp
      name:
        CSharp: SetMode(UpdateTypes)
        VB: SetMode(UpdateTypes)
      nameWithType:
        CSharp: Request.SetMode(UpdateTypes)
        VB: Request.SetMode(UpdateTypes)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes)
        VB: Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetMode
        path: Kount/Ris/Request.cs
        startLine: 334
      summary: "\nSet the mode of the transaction.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetMode(UpdateTypes updateType)
          VB: Public Sub SetMode(updateType As UpdateTypes)
        parameters:
        - id: updateType
          type: Kount.Enums.UpdateTypes
          description: Depends on the update type.
      overload: Kount.Ris.Request.SetMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetMerchantId(System.Int32)
      commentId: M:Kount.Ris.Request.SetMerchantId(System.Int32)
      language: CSharp
      name:
        CSharp: SetMerchantId(Int32)
        VB: SetMerchantId(Int32)
      nameWithType:
        CSharp: Request.SetMerchantId(Int32)
        VB: Request.SetMerchantId(Int32)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetMerchantId(System.Int32)
        VB: Kount.Ris.Request.SetMerchantId(System.Int32)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetMerchantId
        path: Kount/Ris/Request.cs
        startLine: 343
      summary: "\nSet the merchant Id.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetMerchantId(int merchantId)
          VB: Public Sub SetMerchantId(merchantId As Integer)
        parameters:
        - id: merchantId
          type: System.Int32
          description: Merchant Id.
      overload: Kount.Ris.Request.SetMerchantId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetKountCentralCustomerId(System.String)
      commentId: M:Kount.Ris.Request.SetKountCentralCustomerId(System.String)
      language: CSharp
      name:
        CSharp: SetKountCentralCustomerId(String)
        VB: SetKountCentralCustomerId(String)
      nameWithType:
        CSharp: Request.SetKountCentralCustomerId(String)
        VB: Request.SetKountCentralCustomerId(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetKountCentralCustomerId(System.String)
        VB: Kount.Ris.Request.SetKountCentralCustomerId(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetKountCentralCustomerId
        path: Kount/Ris/Request.cs
        startLine: 352
      summary: "\nSet the Kount Central customer Id.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetKountCentralCustomerId(string customerId)
          VB: Public Sub SetKountCentralCustomerId(customerId As String)
        parameters:
        - id: customerId
          type: System.String
          description: Kount Central customer Id.
      overload: Kount.Ris.Request.SetKountCentralCustomerId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetSessionId(System.String)
      commentId: M:Kount.Ris.Request.SetSessionId(System.String)
      language: CSharp
      name:
        CSharp: SetSessionId(String)
        VB: SetSessionId(String)
      nameWithType:
        CSharp: Request.SetSessionId(String)
        VB: Request.SetSessionId(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetSessionId(System.String)
        VB: Kount.Ris.Request.SetSessionId(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetSessionId
        path: Kount/Ris/Request.cs
        startLine: 361
      summary: "\nSet the session ID of this session.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetSessionId(string sessionId)
          VB: Public Sub SetSessionId(sessionId As String)
        parameters:
        - id: sessionId
          type: System.String
          description: Session Id from the merchant.
      overload: Kount.Ris.Request.SetSessionId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetOrderNumber(System.String)
      commentId: M:Kount.Ris.Request.SetOrderNumber(System.String)
      language: CSharp
      name:
        CSharp: SetOrderNumber(String)
        VB: SetOrderNumber(String)
      nameWithType:
        CSharp: Request.SetOrderNumber(String)
        VB: Request.SetOrderNumber(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetOrderNumber(System.String)
        VB: Kount.Ris.Request.SetOrderNumber(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetOrderNumber
        path: Kount/Ris/Request.cs
        startLine: 370
      summary: "\nSet the merchant order number.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetOrderNumber(string orderNumber)
          VB: Public Sub SetOrderNumber(orderNumber As String)
        parameters:
        - id: orderNumber
          type: System.String
          description: Unique, up to 32 characters.
      overload: Kount.Ris.Request.SetOrderNumber*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetMack(System.Char)
      commentId: M:Kount.Ris.Request.SetMack(System.Char)
      language: CSharp
      name:
        CSharp: SetMack(Char)
        VB: SetMack(Char)
      nameWithType:
        CSharp: Request.SetMack(Char)
        VB: Request.SetMack(Char)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetMack(System.Char)
        VB: Kount.Ris.Request.SetMack(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetMack
        path: Kount/Ris/Request.cs
        startLine: 379
      summary: "\nSet the merchant acknowledgement that this product will ship.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetMack(char mack)
          VB: Public Sub SetMack(mack As Char)
        parameters:
        - id: mack
          type: System.Char
          description: Set Y or N.
      overload: Kount.Ris.Request.SetMack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetAuth(System.Char)
      commentId: M:Kount.Ris.Request.SetAuth(System.Char)
      language: CSharp
      name:
        CSharp: SetAuth(Char)
        VB: SetAuth(Char)
      nameWithType:
        CSharp: Request.SetAuth(Char)
        VB: Request.SetAuth(Char)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetAuth(System.Char)
        VB: Kount.Ris.Request.SetAuth(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetAuth
        path: Kount/Ris/Request.cs
        startLine: 388
      summary: "\nSet the auth status of the payment.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAuth(char auth)
          VB: Public Sub SetAuth(auth As Char)
        parameters:
        - id: auth
          type: System.Char
          description: Set A or D.
      overload: Kount.Ris.Request.SetAuth*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetAvsz(System.Char)
      commentId: M:Kount.Ris.Request.SetAvsz(System.Char)
      language: CSharp
      name:
        CSharp: SetAvsz(Char)
        VB: SetAvsz(Char)
      nameWithType:
        CSharp: Request.SetAvsz(Char)
        VB: Request.SetAvsz(Char)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetAvsz(System.Char)
        VB: Kount.Ris.Request.SetAvsz(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetAvsz
        path: Kount/Ris/Request.cs
        startLine: 397
      summary: "\nBankcard AVS ZIP CODE reply.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAvsz(char avsz)
          VB: Public Sub SetAvsz(avsz As Char)
        parameters:
        - id: avsz
          type: System.Char
          description: M, N, or X.
      overload: Kount.Ris.Request.SetAvsz*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetAvst(System.Char)
      commentId: M:Kount.Ris.Request.SetAvst(System.Char)
      language: CSharp
      name:
        CSharp: SetAvst(Char)
        VB: SetAvst(Char)
      nameWithType:
        CSharp: Request.SetAvst(Char)
        VB: Request.SetAvst(Char)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetAvst(System.Char)
        VB: Kount.Ris.Request.SetAvst(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetAvst
        path: Kount/Ris/Request.cs
        startLine: 406
      summary: "\nBankcard AVS STREET ADDRESS reply.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAvst(char avst)
          VB: Public Sub SetAvst(avst As Char)
        parameters:
        - id: avst
          type: System.Char
          description: M, N, or X.
      overload: Kount.Ris.Request.SetAvst*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetCvvr(System.Char)
      commentId: M:Kount.Ris.Request.SetCvvr(System.Char)
      language: CSharp
      name:
        CSharp: SetCvvr(Char)
        VB: SetCvvr(Char)
      nameWithType:
        CSharp: Request.SetCvvr(Char)
        VB: Request.SetCvvr(Char)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetCvvr(System.Char)
        VB: Kount.Ris.Request.SetCvvr(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetCvvr
        path: Kount/Ris/Request.cs
        startLine: 415
      summary: "\nBankcard CVV/CVC/CVV2 reply.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCvvr(char cvvr)
          VB: Public Sub SetCvvr(cvvr As Char)
        parameters:
        - id: cvvr
          type: System.Char
          description: M, N, or X.
      overload: Kount.Ris.Request.SetCvvr*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetCardPaymentMasked(System.String)
      commentId: M:Kount.Ris.Request.SetCardPaymentMasked(System.String)
      language: CSharp
      name:
        CSharp: SetCardPaymentMasked(String)
        VB: SetCardPaymentMasked(String)
      nameWithType:
        CSharp: Request.SetCardPaymentMasked(String)
        VB: Request.SetCardPaymentMasked(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetCardPaymentMasked(System.String)
        VB: Kount.Ris.Request.SetCardPaymentMasked(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetCardPaymentMasked
        path: Kount/Ris/Request.cs
        startLine: 429
      summary: "\nSets a card payment and masks the card number in the following way: <br />\nFirst 6 characters remain as they are, following characters up to the last 4 are\nreplaced with the 'X' character, last 4 characters remain as they are.\nIf the provided Payment parameter is not a card payment, standard encoding\nwill be applied.\n"
      example:
      - 'card number 0007380568572514 is masked to 000738XXXXXX2514 '
      syntax:
        content:
          CSharp: public void SetCardPaymentMasked(string cardNumber)
          VB: Public Sub SetCardPaymentMasked(cardNumber As String)
        parameters:
        - id: cardNumber
          type: System.String
          description: Raw credit card number
      overload: Kount.Ris.Request.SetCardPaymentMasked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetNoPayment
      commentId: M:Kount.Ris.Request.SetNoPayment
      language: CSharp
      name:
        CSharp: SetNoPayment()
        VB: SetNoPayment()
      nameWithType:
        CSharp: Request.SetNoPayment()
        VB: Request.SetNoPayment()
      qualifiedName:
        CSharp: Kount.Ris.Request.SetNoPayment()
        VB: Kount.Ris.Request.SetNoPayment()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetNoPayment
        path: Kount/Ris/Request.cs
        startLine: 441
      summary: "\nSet No Payment.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetNoPayment()
          VB: Public Sub SetNoPayment
      overload: Kount.Ris.Request.SetNoPayment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetPayment(System.String,System.String)
      commentId: M:Kount.Ris.Request.SetPayment(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetPayment(String, String)
        VB: SetPayment(String, String)
      nameWithType:
        CSharp: Request.SetPayment(String, String)
        VB: Request.SetPayment(String, String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetPayment(System.String, System.String)
        VB: Kount.Ris.Request.SetPayment(System.String, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetPayment
        path: Kount/Ris/Request.cs
        startLine: 452
      summary: "\nSet a payment type and payment token. This method is Obsoleted.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPayment(string ptyp, string ptok)
          VB: Public Sub SetPayment(ptyp As String, ptok As String)
        parameters:
        - id: ptyp
          type: System.String
          description: Payment Type
        - id: ptok
          type: System.String
          description: Payment Token
      overload: Kount.Ris.Request.SetPayment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes,System.String)
      commentId: M:Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes,System.String)
      language: CSharp
      name:
        CSharp: SetPayment(PaymentTypes, String)
        VB: SetPayment(PaymentTypes, String)
      nameWithType:
        CSharp: Request.SetPayment(PaymentTypes, String)
        VB: Request.SetPayment(PaymentTypes, String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes, System.String)
        VB: Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetPayment
        path: Kount/Ris/Request.cs
        startLine: 465
      summary: "\nSet a payment \n"
      example: []
      syntax:
        content:
          CSharp: public void SetPayment(PaymentTypes paymentType, string payerId)
          VB: Public Sub SetPayment(paymentType As PaymentTypes, payerId As String)
        parameters:
        - id: paymentType
          type: Kount.Enums.PaymentTypes
          description: Payment Type
        - id: payerId
          type: System.String
          description: Payment Token
      overload: Kount.Ris.Request.SetPayment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String)
      commentId: M:Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String)
      language: CSharp
      name:
        CSharp: SetGreenDotMoneyPakPayment(String)
        VB: SetGreenDotMoneyPakPayment(String)
      nameWithType:
        CSharp: Request.SetGreenDotMoneyPakPayment(String)
        VB: Request.SetGreenDotMoneyPakPayment(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String)
        VB: Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetGreenDotMoneyPakPayment
        path: Kount/Ris/Request.cs
        startLine: 541
      summary: "\nSet a Green Dot MoneyPak payment.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetGreenDotMoneyPakPayment(string id)
          VB: Public Sub SetGreenDotMoneyPakPayment(id As String)
        parameters:
        - id: id
          type: System.String
          description: Green Dot MoneyPak payment ID number
      overload: Kount.Ris.Request.SetGreenDotMoneyPakPayment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.GetParam(System.String)
      commentId: M:Kount.Ris.Request.GetParam(System.String)
      language: CSharp
      name:
        CSharp: GetParam(String)
        VB: GetParam(String)
      nameWithType:
        CSharp: Request.GetParam(String)
        VB: Request.GetParam(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.GetParam(System.String)
        VB: Kount.Ris.Request.GetParam(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetParam
        path: Kount/Ris/Request.cs
        startLine: 552
      summary: "\nGet value from Data - Hashtable.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetParam(string param)
          VB: Public Function GetParam(param As String) As String
        parameters:
        - id: param
          type: System.String
          description: Key string in hashtable
        return:
          type: System.String
          description: ''
      overload: Kount.Ris.Request.GetParam*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.GetUrl
      commentId: M:Kount.Ris.Request.GetUrl
      language: CSharp
      name:
        CSharp: GetUrl()
        VB: GetUrl()
      nameWithType:
        CSharp: Request.GetUrl()
        VB: Request.GetUrl()
      qualifiedName:
        CSharp: Kount.Ris.Request.GetUrl()
        VB: Kount.Ris.Request.GetUrl()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetUrl
        path: Kount/Ris/Request.cs
        startLine: 575
      summary: "\nGet the URL of the target RIS server.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetUrl()
          VB: Public Function GetUrl As String
        return:
          type: System.String
          description: String of the target url.
      overload: Kount.Ris.Request.GetUrl*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetUrl(System.String)
      commentId: M:Kount.Ris.Request.SetUrl(System.String)
      language: CSharp
      name:
        CSharp: SetUrl(String)
        VB: SetUrl(String)
      nameWithType:
        CSharp: Request.SetUrl(String)
        VB: Request.SetUrl(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetUrl(System.String)
        VB: Kount.Ris.Request.SetUrl(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetUrl
        path: Kount/Ris/Request.cs
        startLine: 584
      summary: "\nSet the URL of the target RIS server.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetUrl(string url)
          VB: Public Sub SetUrl(url As String)
        parameters:
        - id: url
          type: System.String
          description: String of the target RIS server.
      overload: Kount.Ris.Request.SetUrl*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetCertificate(System.String,System.String)
      commentId: M:Kount.Ris.Request.SetCertificate(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetCertificate(String, String)
        VB: SetCertificate(String, String)
      nameWithType:
        CSharp: Request.SetCertificate(String, String)
        VB: Request.SetCertificate(String, String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetCertificate(System.String, System.String)
        VB: Kount.Ris.Request.SetCertificate(System.String, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetCertificate
        path: Kount/Ris/Request.cs
        startLine: 596
      summary: "\nSet the RIS certificate information.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCertificate(string certificate, string password)
          VB: Public Sub SetCertificate(certificate As String, password As String)
        parameters:
        - id: certificate
          type: System.String
          description: >-
            Full path of the certificate pk12 or

            pfx file.
        - id: password
          type: System.String
          description: >
            Password used to export the certificate.
      overload: Kount.Ris.Request.SetCertificate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetApiKey(System.String)
      commentId: M:Kount.Ris.Request.SetApiKey(System.String)
      language: CSharp
      name:
        CSharp: SetApiKey(String)
        VB: SetApiKey(String)
      nameWithType:
        CSharp: Request.SetApiKey(String)
        VB: Request.SetApiKey(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetApiKey(System.String)
        VB: Kount.Ris.Request.SetApiKey(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetApiKey
        path: Kount/Ris/Request.cs
        startLine: 606
      summary: "\nSet the API key.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetApiKey(string key)
          VB: Public Sub SetApiKey(key As String)
        parameters:
        - id: key
          type: System.String
          description: Key used to authenticate.
      overload: Kount.Ris.Request.SetApiKey*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.GetCertificateFile
      commentId: M:Kount.Ris.Request.GetCertificateFile
      language: CSharp
      name:
        CSharp: GetCertificateFile()
        VB: GetCertificateFile()
      nameWithType:
        CSharp: Request.GetCertificateFile()
        VB: Request.GetCertificateFile()
      qualifiedName:
        CSharp: Kount.Ris.Request.GetCertificateFile()
        VB: Kount.Ris.Request.GetCertificateFile()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetCertificateFile
        path: Kount/Ris/Request.cs
        startLine: 615
      summary: "\nGet the certificate file path.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetCertificateFile()
          VB: Public Function GetCertificateFile As String
        return:
          type: System.String
          description: String of the certificate file path.
      overload: Kount.Ris.Request.GetCertificateFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.GetPrivateKeyPassword
      commentId: M:Kount.Ris.Request.GetPrivateKeyPassword
      language: CSharp
      name:
        CSharp: GetPrivateKeyPassword()
        VB: GetPrivateKeyPassword()
      nameWithType:
        CSharp: Request.GetPrivateKeyPassword()
        VB: Request.GetPrivateKeyPassword()
      qualifiedName:
        CSharp: Kount.Ris.Request.GetPrivateKeyPassword()
        VB: Kount.Ris.Request.GetPrivateKeyPassword()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPrivateKeyPassword
        path: Kount/Ris/Request.cs
        startLine: 624
      summary: "\nPrivate key password used to export the certificate file.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPrivateKeyPassword()
          VB: Public Function GetPrivateKeyPassword As String
        return:
          type: System.String
          description: String of the certificate export password.
      overload: Kount.Ris.Request.GetPrivateKeyPassword*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetKhashPaymentEncoding
      commentId: M:Kount.Ris.Request.SetKhashPaymentEncoding
      language: CSharp
      name:
        CSharp: SetKhashPaymentEncoding()
        VB: SetKhashPaymentEncoding()
      nameWithType:
        CSharp: Request.SetKhashPaymentEncoding()
        VB: Request.SetKhashPaymentEncoding()
      qualifiedName:
        CSharp: Kount.Ris.Request.SetKhashPaymentEncoding()
        VB: Kount.Ris.Request.SetKhashPaymentEncoding()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetKhashPaymentEncoding
        path: Kount/Ris/Request.cs
        startLine: 632
      summary: "\nSet the RIS payment encoding to KHASH.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetKhashPaymentEncoding()
          VB: Public Sub SetKhashPaymentEncoding
      overload: Kount.Ris.Request.SetKhashPaymentEncoding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean)
      commentId: M:Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean)
      language: CSharp
      name:
        CSharp: SetKhashPaymentEncoding(Boolean)
        VB: SetKhashPaymentEncoding(Boolean)
      nameWithType:
        CSharp: Request.SetKhashPaymentEncoding(Boolean)
        VB: Request.SetKhashPaymentEncoding(Boolean)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean)
        VB: Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetKhashPaymentEncoding
        path: Kount/Ris/Request.cs
        startLine: 646
      summary: "\nSet the RIS payment encoding to KHASH.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetKhashPaymentEncoding(bool enabled)
          VB: Public Sub SetKhashPaymentEncoding(enabled As Boolean)
        parameters:
        - id: enabled
          type: System.Boolean
          description: TRUE when enabled
      overload: Kount.Ris.Request.SetKhashPaymentEncoding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetPaymentTokenLast4(System.String)
      commentId: M:Kount.Ris.Request.SetPaymentTokenLast4(System.String)
      language: CSharp
      name:
        CSharp: SetPaymentTokenLast4(String)
        VB: SetPaymentTokenLast4(String)
      nameWithType:
        CSharp: Request.SetPaymentTokenLast4(String)
        VB: Request.SetPaymentTokenLast4(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetPaymentTokenLast4(System.String)
        VB: Kount.Ris.Request.SetPaymentTokenLast4(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetPaymentTokenLast4
        path: Kount/Ris/Request.cs
        startLine: 662
      summary: "\nSet the last 4 characters of the payment token.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPaymentTokenLast4(string last4)
          VB: Public Sub SetPaymentTokenLast4(last4 As String)
        parameters:
        - id: last4
          type: System.String
          description: Last 4 characters
      overload: Kount.Ris.Request.SetPaymentTokenLast4*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.SetVersion(System.String)
      commentId: M:Kount.Ris.Request.SetVersion(System.String)
      language: CSharp
      name:
        CSharp: SetVersion(String)
        VB: SetVersion(String)
      nameWithType:
        CSharp: Request.SetVersion(String)
        VB: Request.SetVersion(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetVersion(System.String)
        VB: Kount.Ris.Request.SetVersion(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetVersion
        path: Kount/Ris/Request.cs
        startLine: 671
      summary: "\nSet the version of the RIS response.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetVersion(string version)
          VB: Public Sub SetVersion(version As String)
        parameters:
        - id: version
          type: System.String
          description: Response version.
      overload: Kount.Ris.Request.SetVersion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Request.IsSetKhashPaymentEncoding
      commentId: M:Kount.Ris.Request.IsSetKhashPaymentEncoding
      language: CSharp
      name:
        CSharp: IsSetKhashPaymentEncoding()
        VB: IsSetKhashPaymentEncoding()
      nameWithType:
        CSharp: Request.IsSetKhashPaymentEncoding()
        VB: Request.IsSetKhashPaymentEncoding()
      qualifiedName:
        CSharp: Kount.Ris.Request.IsSetKhashPaymentEncoding()
        VB: Kount.Ris.Request.IsSetKhashPaymentEncoding()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: IsSetKhashPaymentEncoding
        path: Kount/Ris/Request.cs
        startLine: 680
      summary: "\nCheck if KHASH payment encoding has been set.\n"
      example: []
      syntax:
        content:
          CSharp: protected bool IsSetKhashPaymentEncoding()
          VB: Protected Function IsSetKhashPaymentEncoding As Boolean
        return:
          type: System.Boolean
          description: TRUE when set
      overload: Kount.Ris.Request.IsSetKhashPaymentEncoding*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Kount.Ris.Request.SetPaymentToken(System.String)
      commentId: M:Kount.Ris.Request.SetPaymentToken(System.String)
      language: CSharp
      name:
        CSharp: SetPaymentToken(String)
        VB: SetPaymentToken(String)
      nameWithType:
        CSharp: Request.SetPaymentToken(String)
        VB: Request.SetPaymentToken(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SetPaymentToken(System.String)
        VB: Kount.Ris.Request.SetPaymentToken(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetPaymentToken
        path: Kount/Ris/Request.cs
        startLine: 690
      summary: "\nSet the payment token.\n"
      example: []
      syntax:
        content:
          CSharp: protected void SetPaymentToken(string token)
          VB: Protected Sub SetPaymentToken(token As String)
        parameters:
        - id: token
          type: System.String
          description: Payment token
      overload: Kount.Ris.Request.SetPaymentToken*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Kount.Ris.Request.CheckConfigurationParameter(System.String,System.String)
      commentId: M:Kount.Ris.Request.CheckConfigurationParameter(System.String,System.String)
      language: CSharp
      name:
        CSharp: CheckConfigurationParameter(String, String)
        VB: CheckConfigurationParameter(String, String)
      nameWithType:
        CSharp: Request.CheckConfigurationParameter(String, String)
        VB: Request.CheckConfigurationParameter(String, String)
      qualifiedName:
        CSharp: Kount.Ris.Request.CheckConfigurationParameter(System.String, System.String)
        VB: Kount.Ris.Request.CheckConfigurationParameter(System.String, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: CheckConfigurationParameter
        path: Kount/Ris/Request.cs
        startLine: 722
      summary: "\nCheck configuration parameters for existence in application\nconfiguration.\n"
      example: []
      syntax:
        content:
          CSharp: protected void CheckConfigurationParameter(string value, string parameter)
          VB: Protected Sub CheckConfigurationParameter(value As String, parameter As String)
        parameters:
        - id: value
          type: System.String
        - id: parameter
          type: System.String
          description: Parameter name
      overload: Kount.Ris.Request.CheckConfigurationParameter*
      exceptions:
      - type: Kount.Ris.RequestException
        commentId: T:Kount.Ris.RequestException
        description: >-
          Thrown when parameter

          is missing
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Kount.Ris.Request.SafeGet(System.String)
      commentId: M:Kount.Ris.Request.SafeGet(System.String)
      language: CSharp
      name:
        CSharp: SafeGet(String)
        VB: SafeGet(String)
      nameWithType:
        CSharp: Request.SafeGet(String)
        VB: Request.SafeGet(String)
      qualifiedName:
        CSharp: Kount.Ris.Request.SafeGet(System.String)
        VB: Kount.Ris.Request.SafeGet(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Request.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SafeGet
        path: Kount/Ris/Request.cs
        startLine: 737
      summary: "\nSanitize a variable before return it.\n"
      example: []
      syntax:
        content:
          CSharp: protected string SafeGet(string var)
          VB: Protected Function SafeGet(var As String) As String
        parameters:
        - id: var
          type: System.String
          description: Raw variable
        return:
          type: System.String
          description: Sanitized variable
      overload: Kount.Ris.Request.SafeGet*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: Kount.Ris.RequestException
    commentId: T:Kount.Ris.RequestException
    language: CSharp
    name:
      CSharp: RequestException
      VB: RequestException
    nameWithType:
      CSharp: RequestException
      VB: RequestException
    qualifiedName:
      CSharp: Kount.Ris.RequestException
      VB: Kount.Ris.RequestException
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/RequestException.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: RequestException
      path: Kount/Ris/RequestException.cs
      startLine: 15
    summary: "\nRequest Exception.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RequestException : Exception'
        VB: >-
          Public Class RequestException

              Inherits Exception
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.RequestException.#ctor(System.String)
      commentId: M:Kount.Ris.RequestException.#ctor(System.String)
      language: CSharp
      name:
        CSharp: RequestException(String)
        VB: RequestException(String)
      nameWithType:
        CSharp: RequestException.RequestException(String)
        VB: RequestException.RequestException(String)
      qualifiedName:
        CSharp: Kount.Ris.RequestException.RequestException(System.String)
        VB: Kount.Ris.RequestException.RequestException(System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/RequestException.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/RequestException.cs
        startLine: 21
      summary: "\nCreate an exception with an error message\n"
      example: []
      syntax:
        content:
          CSharp: public RequestException(string errorMessage)
          VB: Public Sub New(errorMessage As String)
        parameters:
        - id: errorMessage
          type: System.String
          description: Error message.
      overload: Kount.Ris.RequestException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.RequestException.#ctor(System.String,Exception)
      commentId: M:Kount.Ris.RequestException.#ctor(System.String,Exception)
      language: CSharp
      name:
        CSharp: RequestException(String, Exception)
        VB: RequestException(String, Exception)
      nameWithType:
        CSharp: RequestException.RequestException(String, Exception)
        VB: RequestException.RequestException(String, Exception)
      qualifiedName:
        CSharp: Kount.Ris.RequestException.RequestException(System.String, Exception)
        VB: Kount.Ris.RequestException.RequestException(System.String, Exception)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/RequestException.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/RequestException.cs
        startLine: 30
      summary: "\nCreate an exception with a message and another exception\n"
      example: []
      syntax:
        content:
          CSharp: public RequestException(string errorMessage, Exception innerEx)
          VB: Public Sub New(errorMessage As String, innerEx As Exception)
        parameters:
        - id: errorMessage
          type: System.String
          description: Error message.
        - id: innerEx
          type: Exception
          description: Inner exception.
      overload: Kount.Ris.RequestException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.RequestException.ErrorMessage
      commentId: P:Kount.Ris.RequestException.ErrorMessage
      language: CSharp
      name:
        CSharp: ErrorMessage
        VB: ErrorMessage
      nameWithType:
        CSharp: RequestException.ErrorMessage
        VB: RequestException.ErrorMessage
      qualifiedName:
        CSharp: Kount.Ris.RequestException.ErrorMessage
        VB: Kount.Ris.RequestException.ErrorMessage
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/RequestException.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ErrorMessage
        path: Kount/Ris/RequestException.cs
        startLine: 38
      summary: "\nGets the string of the error message.\n"
      example: []
      syntax:
        content:
          CSharp: public string ErrorMessage { get; }
          VB: Public ReadOnly Property ErrorMessage As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.RequestException.ErrorMessage*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Kount.Ris.Response
    commentId: T:Kount.Ris.Response
    language: CSharp
    name:
      CSharp: Response
      VB: Response
    nameWithType:
      CSharp: Response
      VB: Response
    qualifiedName:
      CSharp: Kount.Ris.Response
      VB: Kount.Ris.Response
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/Response.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: Response
      path: Kount/Ris/Response.cs
      startLine: 20
    summary: "\nResponse immutable data object containing data from the RIS server.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Response : object'
        VB: >-
          Public Class Response

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.Response.#ctor(System.String)
      commentId: M:Kount.Ris.Response.#ctor(System.String)
      language: CSharp
      name:
        CSharp: Response(String)
        VB: Response(String)
      nameWithType:
        CSharp: Response.Response(String)
        VB: Response.Response(String)
      qualifiedName:
        CSharp: Kount.Ris.Response.Response(System.String)
        VB: Kount.Ris.Response.Response(System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/Response.cs
        startLine: 47
      summary: "\nResponse constructor.\n"
      example: []
      syntax:
        content:
          CSharp: public Response(string raw)
          VB: Public Sub New(raw As String)
        parameters:
        - id: raw
          type: System.String
          description: >-
            Splits name=value formatted response string

            populating a hash for getters.
      overload: Kount.Ris.Response.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetErrorCode
      commentId: M:Kount.Ris.Response.GetErrorCode
      language: CSharp
      name:
        CSharp: GetErrorCode()
        VB: GetErrorCode()
      nameWithType:
        CSharp: Response.GetErrorCode()
        VB: Response.GetErrorCode()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetErrorCode()
        VB: Kount.Ris.Response.GetErrorCode()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetErrorCode
        path: Kount/Ris/Response.cs
        startLine: 68
      summary: "\nGet the error code returned from the server\n"
      example: []
      syntax:
        content:
          CSharp: public string GetErrorCode()
          VB: Public Function GetErrorCode As String
        return:
          type: System.String
          description: Error code returned from the RIS server.
      overload: Kount.Ris.Response.GetErrorCode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetVersion
      commentId: M:Kount.Ris.Response.GetVersion
      language: CSharp
      name:
        CSharp: GetVersion()
        VB: GetVersion()
      nameWithType:
        CSharp: Response.GetVersion()
        VB: Response.GetVersion()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetVersion()
        VB: Kount.Ris.Response.GetVersion()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetVersion
        path: Kount/Ris/Response.cs
        startLine: 84
      summary: "\nGet the version of the RIS response.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetVersion()
          VB: Public Function GetVersion As String
        return:
          type: System.String
          description: String of the version.
      overload: Kount.Ris.Response.GetVersion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetMode
      commentId: M:Kount.Ris.Response.GetMode
      language: CSharp
      name:
        CSharp: GetMode()
        VB: GetMode()
      nameWithType:
        CSharp: Response.GetMode()
        VB: Response.GetMode()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetMode()
        VB: Kount.Ris.Response.GetMode()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetMode
        path: Kount/Ris/Response.cs
        startLine: 94
      summary: "\nGet the mode of the RIS request.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetMode()
          VB: Public Function GetMode As String
        return:
          type: System.String
          description: >
            Character of the original RIS request mode: e.g. U.
      overload: Kount.Ris.Response.GetMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetTransactionId
      commentId: M:Kount.Ris.Response.GetTransactionId
      language: CSharp
      name:
        CSharp: GetTransactionId()
        VB: GetTransactionId()
      nameWithType:
        CSharp: Response.GetTransactionId()
        VB: Response.GetTransactionId()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetTransactionId()
        VB: Kount.Ris.Response.GetTransactionId()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetTransactionId
        path: Kount/Ris/Response.cs
        startLine: 103
      summary: "\nGet Kount transaction Id.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetTransactionId()
          VB: Public Function GetTransactionId As String
        return:
          type: System.String
          description: Alphanumeric transaction id generated by Kount.
      overload: Kount.Ris.Response.GetTransactionId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetMerchantId
      commentId: M:Kount.Ris.Response.GetMerchantId
      language: CSharp
      name:
        CSharp: GetMerchantId()
        VB: GetMerchantId()
      nameWithType:
        CSharp: Response.GetMerchantId()
        VB: Response.GetMerchantId()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetMerchantId()
        VB: Kount.Ris.Response.GetMerchantId()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetMerchantId
        path: Kount/Ris/Response.cs
        startLine: 112
      summary: "\nGet the merchant Id of the merchant making the request.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetMerchantId()
          VB: Public Function GetMerchantId As String
        return:
          type: System.String
          description: Merchant Id.
      overload: Kount.Ris.Response.GetMerchantId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetSessionId
      commentId: M:Kount.Ris.Response.GetSessionId
      language: CSharp
      name:
        CSharp: GetSessionId()
        VB: GetSessionId()
      nameWithType:
        CSharp: Response.GetSessionId()
        VB: Response.GetSessionId()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetSessionId()
        VB: Kount.Ris.Response.GetSessionId()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetSessionId
        path: Kount/Ris/Response.cs
        startLine: 122
      summary: "\nGet the session Id.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetSessionId()
          VB: Public Function GetSessionId As String
        return:
          type: System.String
          description: >
            Session Id of this transaction generated by the merchant.
      overload: Kount.Ris.Response.GetSessionId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetOrderNumber
      commentId: M:Kount.Ris.Response.GetOrderNumber
      language: CSharp
      name:
        CSharp: GetOrderNumber()
        VB: GetOrderNumber()
      nameWithType:
        CSharp: Response.GetOrderNumber()
        VB: Response.GetOrderNumber()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetOrderNumber()
        VB: Kount.Ris.Response.GetOrderNumber()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetOrderNumber
        path: Kount/Ris/Response.cs
        startLine: 131
      summary: "\nGet the Order Number.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetOrderNumber()
          VB: Public Function GetOrderNumber As String
        return:
          type: System.String
          description: Order number generated by the merchant.
      overload: Kount.Ris.Response.GetOrderNumber*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetAuto
      commentId: M:Kount.Ris.Response.GetAuto
      language: CSharp
      name:
        CSharp: GetAuto()
        VB: GetAuto()
      nameWithType:
        CSharp: Response.GetAuto()
        VB: Response.GetAuto()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetAuto()
        VB: Kount.Ris.Response.GetAuto()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetAuto
        path: Kount/Ris/Response.cs
        startLine: 140
      summary: "\nGet the automated Kount RIS response.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetAuto()
          VB: Public Function GetAuto As String
        return:
          type: System.String
          description: (A)pprove, (R)eview, or (D)ecline.
      overload: Kount.Ris.Response.GetAuto*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetReason
      commentId: M:Kount.Ris.Response.GetReason
      language: CSharp
      name:
        CSharp: GetReason()
        VB: GetReason()
      nameWithType:
        CSharp: Response.GetReason()
        VB: Response.GetReason()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetReason()
        VB: Kount.Ris.Response.GetReason()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetReason
        path: Kount/Ris/Response.cs
        startLine: 149
      summary: "\nGet the reason for the RIS response.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetReason()
          VB: Public Function GetReason As String
        return:
          type: System.String
          description: Main response reason, e.g. LIST, SCOR, etc.
      overload: Kount.Ris.Response.GetReason*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetReasonCode
      commentId: M:Kount.Ris.Response.GetReasonCode
      language: CSharp
      name:
        CSharp: GetReasonCode()
        VB: GetReasonCode()
      nameWithType:
        CSharp: Response.GetReasonCode()
        VB: Response.GetReasonCode()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetReasonCode()
        VB: Kount.Ris.Response.GetReasonCode()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetReasonCode
        path: Kount/Ris/Response.cs
        startLine: 163
      summary: "\nGet the merchant defined reason code for the RIS response.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetReasonCode()
          VB: Public Function GetReasonCode As String
        return:
          type: System.String
          description: Reason code
      overload: Kount.Ris.Response.GetReasonCode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetScore
      commentId: M:Kount.Ris.Response.GetScore
      language: CSharp
      name:
        CSharp: GetScore()
        VB: GetScore()
      nameWithType:
        CSharp: Response.GetScore()
        VB: Response.GetScore()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetScore()
        VB: Kount.Ris.Response.GetScore()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetScore
        path: Kount/Ris/Response.cs
        startLine: 172
      summary: "\nGet the Kount score.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetScore()
          VB: Public Function GetScore As String
        return:
          type: System.String
          description: 1 to 99. The highter the score, the more risk.
      overload: Kount.Ris.Response.GetScore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetGeox
      commentId: M:Kount.Ris.Response.GetGeox
      language: CSharp
      name:
        CSharp: GetGeox()
        VB: GetGeox()
      nameWithType:
        CSharp: Response.GetGeox()
        VB: Response.GetGeox()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetGeox()
        VB: Kount.Ris.Response.GetGeox()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetGeox
        path: Kount/Ris/Response.cs
        startLine: 181
      summary: "\nGet the geo location of the client\n"
      example: []
      syntax:
        content:
          CSharp: public string GetGeox()
          VB: Public Function GetGeox As String
        return:
          type: System.String
          description: Geox of the client
      overload: Kount.Ris.Response.GetGeox*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetBrand
      commentId: M:Kount.Ris.Response.GetBrand
      language: CSharp
      name:
        CSharp: GetBrand()
        VB: GetBrand()
      nameWithType:
        CSharp: Response.GetBrand()
        VB: Response.GetBrand()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetBrand()
        VB: Kount.Ris.Response.GetBrand()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetBrand
        path: Kount/Ris/Response.cs
        startLine: 190
      summary: "\nGet the brand of the credit card if a card was the payment method\n"
      example: []
      syntax:
        content:
          CSharp: public string GetBrand()
          VB: Public Function GetBrand As String
        return:
          type: System.String
          description: Brand of credit card, e.g. VISA
      overload: Kount.Ris.Response.GetBrand*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetVelo
      commentId: M:Kount.Ris.Response.GetVelo
      language: CSharp
      name:
        CSharp: GetVelo()
        VB: GetVelo()
      nameWithType:
        CSharp: Response.GetVelo()
        VB: Response.GetVelo()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetVelo()
        VB: Kount.Ris.Response.GetVelo()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetVelo
        path: Kount/Ris/Response.cs
        startLine: 200
      summary: "\n6 hour card velocity\n"
      example: []
      syntax:
        content:
          CSharp: public string GetVelo()
          VB: Public Function GetVelo As String
        return:
          type: System.String
          description: >-
            Number of times this card number was used in the last 6

            hours
      overload: Kount.Ris.Response.GetVelo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetVmax
      commentId: M:Kount.Ris.Response.GetVmax
      language: CSharp
      name:
        CSharp: GetVmax()
        VB: GetVmax()
      nameWithType:
        CSharp: Response.GetVmax()
        VB: Response.GetVmax()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetVmax()
        VB: Kount.Ris.Response.GetVmax()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetVmax
        path: Kount/Ris/Response.cs
        startLine: 210
      summary: "\n2 week card velocity\n"
      example: []
      syntax:
        content:
          CSharp: public string GetVmax()
          VB: Public Function GetVmax As String
        return:
          type: System.String
          description: >-
            Number of times this card number was used in the last

            two weeks
      overload: Kount.Ris.Response.GetVmax*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetNetwork
      commentId: M:Kount.Ris.Response.GetNetwork
      language: CSharp
      name:
        CSharp: GetNetwork()
        VB: GetNetwork()
      nameWithType:
        CSharp: Response.GetNetwork()
        VB: Response.GetNetwork()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetNetwork()
        VB: Kount.Ris.Response.GetNetwork()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetNetwork
        path: Kount/Ris/Response.cs
        startLine: 220
      summary: "\nGet the network type\n"
      example: []
      syntax:
        content:
          CSharp: public string GetNetwork()
          VB: Public Function GetNetwork As String
        return:
          type: System.String
          description: >
            Get the network type of the client, e.g. L for library
      overload: Kount.Ris.Response.GetNetwork*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKnowYourCustomer
      commentId: M:Kount.Ris.Response.GetKnowYourCustomer
      language: CSharp
      name:
        CSharp: GetKnowYourCustomer()
        VB: GetKnowYourCustomer()
      nameWithType:
        CSharp: Response.GetKnowYourCustomer()
        VB: Response.GetKnowYourCustomer()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKnowYourCustomer()
        VB: Kount.Ris.Response.GetKnowYourCustomer()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKnowYourCustomer
        path: Kount/Ris/Response.cs
        startLine: 229
      summary: "\nGet the Know Your Customer flag\n"
      example: []
      syntax:
        content:
          CSharp: public string GetKnowYourCustomer()
          VB: Public Function GetKnowYourCustomer As String
        return:
          type: System.String
          description: Y means a KYC match, N means no match.
      overload: Kount.Ris.Response.GetKnowYourCustomer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetRegion
      commentId: M:Kount.Ris.Response.GetRegion
      language: CSharp
      name:
        CSharp: GetRegion()
        VB: GetRegion()
      nameWithType:
        CSharp: Response.GetRegion()
        VB: Response.GetRegion()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetRegion()
        VB: Kount.Ris.Response.GetRegion()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetRegion
        path: Kount/Ris/Response.cs
        startLine: 238
      summary: "\nGet the customer region\n"
      example: []
      syntax:
        content:
          CSharp: public string GetRegion()
          VB: Public Function GetRegion As String
        return:
          type: System.String
          description: US state abbreviation or country code.
      overload: Kount.Ris.Response.GetRegion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKaptcha
      commentId: M:Kount.Ris.Response.GetKaptcha
      language: CSharp
      name:
        CSharp: GetKaptcha()
        VB: GetKaptcha()
      nameWithType:
        CSharp: Response.GetKaptcha()
        VB: Response.GetKaptcha()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKaptcha()
        VB: Kount.Ris.Response.GetKaptcha()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKaptcha
        path: Kount/Ris/Response.cs
        startLine: 248
      summary: "\nGet the Kaptcha flag: enabled upon request and for when a RIS\nrecord has no Kaptcha data\n"
      example: []
      syntax:
        content:
          CSharp: public string GetKaptcha()
          VB: Public Function GetKaptcha As String
        return:
          type: System.String
          description: Returns Y or N
      overload: Kount.Ris.Response.GetKaptcha*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetProxy
      commentId: M:Kount.Ris.Response.GetProxy
      language: CSharp
      name:
        CSharp: GetProxy()
        VB: GetProxy()
      nameWithType:
        CSharp: Response.GetProxy()
        VB: Response.GetProxy()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetProxy()
        VB: Kount.Ris.Response.GetProxy()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetProxy
        path: Kount/Ris/Response.cs
        startLine: 258
      summary: "\nGet a string representing whether the remote device is using a\nproxy\n"
      example: []
      syntax:
        content:
          CSharp: public string GetProxy()
          VB: Public Function GetProxy As String
        return:
          type: System.String
          description: Returns Y or N
      overload: Kount.Ris.Response.GetProxy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetEmails
      commentId: M:Kount.Ris.Response.GetEmails
      language: CSharp
      name:
        CSharp: GetEmails()
        VB: GetEmails()
      nameWithType:
        CSharp: Response.GetEmails()
        VB: Response.GetEmails()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetEmails()
        VB: Kount.Ris.Response.GetEmails()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetEmails
        path: Kount/Ris/Response.cs
        startLine: 267
      summary: "\nGet the number of transactions associated with the email\n"
      example: []
      syntax:
        content:
          CSharp: public string GetEmails()
          VB: Public Function GetEmails As String
        return:
          type: System.String
          description: Number of emails
      overload: Kount.Ris.Response.GetEmails*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetHttpCountry
      commentId: M:Kount.Ris.Response.GetHttpCountry
      language: CSharp
      name:
        CSharp: GetHttpCountry()
        VB: GetHttpCountry()
      nameWithType:
        CSharp: Response.GetHttpCountry()
        VB: Response.GetHttpCountry()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetHttpCountry()
        VB: Kount.Ris.Response.GetHttpCountry()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetHttpCountry
        path: Kount/Ris/Response.cs
        startLine: 277
      summary: "\nGet the two character country code setting in the remote device's\nbrowser\n"
      example: []
      syntax:
        content:
          CSharp: public string GetHttpCountry()
          VB: Public Function GetHttpCountry As String
        return:
          type: System.String
          description: Get the country
      overload: Kount.Ris.Response.GetHttpCountry*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetTimeZone
      commentId: M:Kount.Ris.Response.GetTimeZone
      language: CSharp
      name:
        CSharp: GetTimeZone()
        VB: GetTimeZone()
      nameWithType:
        CSharp: Response.GetTimeZone()
        VB: Response.GetTimeZone()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetTimeZone()
        VB: Kount.Ris.Response.GetTimeZone()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetTimeZone
        path: Kount/Ris/Response.cs
        startLine: 287
      summary: "\nGet the two character country code setting in the remote device's\nbrowser\n"
      example: []
      syntax:
        content:
          CSharp: public string GetTimeZone()
          VB: Public Function GetTimeZone As String
        return:
          type: System.String
          description: The time zone
      overload: Kount.Ris.Response.GetTimeZone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetCards
      commentId: M:Kount.Ris.Response.GetCards
      language: CSharp
      name:
        CSharp: GetCards()
        VB: GetCards()
      nameWithType:
        CSharp: Response.GetCards()
        VB: Response.GetCards()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetCards()
        VB: Kount.Ris.Response.GetCards()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetCards
        path: Kount/Ris/Response.cs
        startLine: 296
      summary: "\nGet the number of transactions associated with the credit card\n"
      example: []
      syntax:
        content:
          CSharp: public string GetCards()
          VB: Public Function GetCards As String
        return:
          type: System.String
          description: Number of cards
      overload: Kount.Ris.Response.GetCards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetPcRemote
      commentId: M:Kount.Ris.Response.GetPcRemote
      language: CSharp
      name:
        CSharp: GetPcRemote()
        VB: GetPcRemote()
      nameWithType:
        CSharp: Response.GetPcRemote()
        VB: Response.GetPcRemote()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetPcRemote()
        VB: Kount.Ris.Response.GetPcRemote()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPcRemote
        path: Kount/Ris/Response.cs
        startLine: 306
      summary: "\nGet a string representing whether the end device is a remotely\ncontrolled computer\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPcRemote()
          VB: Public Function GetPcRemote As String
        return:
          type: System.String
          description: "\"Y\" or \"N\""
      overload: Kount.Ris.Response.GetPcRemote*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetDevices
      commentId: M:Kount.Ris.Response.GetDevices
      language: CSharp
      name:
        CSharp: GetDevices()
        VB: GetDevices()
      nameWithType:
        CSharp: Response.GetDevices()
        VB: Response.GetDevices()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetDevices()
        VB: Kount.Ris.Response.GetDevices()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetDevices
        path: Kount/Ris/Response.cs
        startLine: 316
      summary: "\nGet the number of transactions associated with the particular\ndevice\n"
      example: []
      syntax:
        content:
          CSharp: public string GetDevices()
          VB: Public Function GetDevices As String
        return:
          type: System.String
          description: Number of devices
      overload: Kount.Ris.Response.GetDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetDeviceLayers
      commentId: M:Kount.Ris.Response.GetDeviceLayers
      language: CSharp
      name:
        CSharp: GetDeviceLayers()
        VB: GetDeviceLayers()
      nameWithType:
        CSharp: Response.GetDeviceLayers()
        VB: Response.GetDeviceLayers()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetDeviceLayers()
        VB: Kount.Ris.Response.GetDeviceLayers()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetDeviceLayers
        path: Kount/Ris/Response.cs
        startLine: 326
      summary: "\nGet a string representing the five layers (Operating System, SSL,\nHTTP, Flash, JavaScript) of the remote device\n"
      example: []
      syntax:
        content:
          CSharp: public string GetDeviceLayers()
          VB: Public Function GetDeviceLayers As String
        return:
          type: System.String
          description: Device layers
      overload: Kount.Ris.Response.GetDeviceLayers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetMobileForwarder
      commentId: M:Kount.Ris.Response.GetMobileForwarder
      language: CSharp
      name:
        CSharp: GetMobileForwarder()
        VB: GetMobileForwarder()
      nameWithType:
        CSharp: Response.GetMobileForwarder()
        VB: Response.GetMobileForwarder()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetMobileForwarder()
        VB: Kount.Ris.Response.GetMobileForwarder()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetMobileForwarder
        path: Kount/Ris/Response.cs
        startLine: 335
      summary: "\nGet the mobile device's wireless application protocol\n"
      example: []
      syntax:
        content:
          CSharp: public string GetMobileForwarder()
          VB: Public Function GetMobileForwarder As String
        return:
          type: System.String
          description: The protocol
      overload: Kount.Ris.Response.GetMobileForwarder*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetVoiceDevice
      commentId: M:Kount.Ris.Response.GetVoiceDevice
      language: CSharp
      name:
        CSharp: GetVoiceDevice()
        VB: GetVoiceDevice()
      nameWithType:
        CSharp: Response.GetVoiceDevice()
        VB: Response.GetVoiceDevice()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetVoiceDevice()
        VB: Kount.Ris.Response.GetVoiceDevice()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetVoiceDevice
        path: Kount/Ris/Response.cs
        startLine: 345
      summary: "\nGet a string representing whether or not the remote device is\nvoice controlled\n"
      example: []
      syntax:
        content:
          CSharp: public string GetVoiceDevice()
          VB: Public Function GetVoiceDevice As String
        return:
          type: System.String
          description: "\"Y\" or \"N\""
      overload: Kount.Ris.Response.GetVoiceDevice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetLocalTime
      commentId: M:Kount.Ris.Response.GetLocalTime
      language: CSharp
      name:
        CSharp: GetLocalTime()
        VB: GetLocalTime()
      nameWithType:
        CSharp: Response.GetLocalTime()
        VB: Response.GetLocalTime()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetLocalTime()
        VB: Kount.Ris.Response.GetLocalTime()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetLocalTime
        path: Kount/Ris/Response.cs
        startLine: 354
      summary: "\nGet local time of the remote device in the YYYY-MM-DD format\n"
      example: []
      syntax:
        content:
          CSharp: public string GetLocalTime()
          VB: Public Function GetLocalTime As String
        return:
          type: System.String
          description: Local time
      overload: Kount.Ris.Response.GetLocalTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetMobileType
      commentId: M:Kount.Ris.Response.GetMobileType
      language: CSharp
      name:
        CSharp: GetMobileType()
        VB: GetMobileType()
      nameWithType:
        CSharp: Response.GetMobileType()
        VB: Response.GetMobileType()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetMobileType()
        VB: Kount.Ris.Response.GetMobileType()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetMobileType
        path: Kount/Ris/Response.cs
        startLine: 363
      summary: "\nGet the mobile device type\n"
      example: []
      syntax:
        content:
          CSharp: public string GetMobileType()
          VB: Public Function GetMobileType As String
        return:
          type: System.String
          description: Mobile type
      overload: Kount.Ris.Response.GetMobileType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetFingerPrint
      commentId: M:Kount.Ris.Response.GetFingerPrint
      language: CSharp
      name:
        CSharp: GetFingerPrint()
        VB: GetFingerPrint()
      nameWithType:
        CSharp: Response.GetFingerPrint()
        VB: Response.GetFingerPrint()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetFingerPrint()
        VB: Kount.Ris.Response.GetFingerPrint()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetFingerPrint
        path: Kount/Ris/Response.cs
        startLine: 372
      summary: "\nGet the device finger print\n"
      example: []
      syntax:
        content:
          CSharp: public string GetFingerPrint()
          VB: Public Function GetFingerPrint As String
        return:
          type: System.String
          description: Finger print
      overload: Kount.Ris.Response.GetFingerPrint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetFlash
      commentId: M:Kount.Ris.Response.GetFlash
      language: CSharp
      name:
        CSharp: GetFlash()
        VB: GetFlash()
      nameWithType:
        CSharp: Response.GetFlash()
        VB: Response.GetFlash()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetFlash()
        VB: Kount.Ris.Response.GetFlash()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetFlash
        path: Kount/Ris/Response.cs
        startLine: 382
      summary: "\nGet a string representing whether or not the remote device allows\nflash.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetFlash()
          VB: Public Function GetFlash As String
        return:
          type: System.String
          description: "\"Y\" or \"N\""
      overload: Kount.Ris.Response.GetFlash*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetLanguage
      commentId: M:Kount.Ris.Response.GetLanguage
      language: CSharp
      name:
        CSharp: GetLanguage()
        VB: GetLanguage()
      nameWithType:
        CSharp: Response.GetLanguage()
        VB: Response.GetLanguage()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetLanguage()
        VB: Kount.Ris.Response.GetLanguage()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetLanguage
        path: Kount/Ris/Response.cs
        startLine: 391
      summary: "\nGet the language setting on the remote device\n"
      example: []
      syntax:
        content:
          CSharp: public string GetLanguage()
          VB: Public Function GetLanguage As String
        return:
          type: System.String
          description: The language
      overload: Kount.Ris.Response.GetLanguage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetCountry
      commentId: M:Kount.Ris.Response.GetCountry
      language: CSharp
      name:
        CSharp: GetCountry()
        VB: GetCountry()
      nameWithType:
        CSharp: Response.GetCountry()
        VB: Response.GetCountry()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetCountry()
        VB: Kount.Ris.Response.GetCountry()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetCountry
        path: Kount/Ris/Response.cs
        startLine: 400
      summary: "\nGet the remote device's country of origin as a two character code\n"
      example: []
      syntax:
        content:
          CSharp: public string GetCountry()
          VB: Public Function GetCountry As String
        return:
          type: System.String
          description: The country
      overload: Kount.Ris.Response.GetCountry*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetJavaScript
      commentId: M:Kount.Ris.Response.GetJavaScript
      language: CSharp
      name:
        CSharp: GetJavaScript()
        VB: GetJavaScript()
      nameWithType:
        CSharp: Response.GetJavaScript()
        VB: Response.GetJavaScript()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetJavaScript()
        VB: Kount.Ris.Response.GetJavaScript()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetJavaScript
        path: Kount/Ris/Response.cs
        startLine: 410
      summary: "\nGet a string representing whether the remote device allows\nJavaScript\n"
      example: []
      syntax:
        content:
          CSharp: public string GetJavaScript()
          VB: Public Function GetJavaScript As String
        return:
          type: System.String
          description: "\"Y\" or \"N\""
      overload: Kount.Ris.Response.GetJavaScript*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetCookies
      commentId: M:Kount.Ris.Response.GetCookies
      language: CSharp
      name:
        CSharp: GetCookies()
        VB: GetCookies()
      nameWithType:
        CSharp: Response.GetCookies()
        VB: Response.GetCookies()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetCookies()
        VB: Kount.Ris.Response.GetCookies()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetCookies
        path: Kount/Ris/Response.cs
        startLine: 419
      summary: "\nGet a string representing whether the remote device allows cookies\n"
      example: []
      syntax:
        content:
          CSharp: public string GetCookies()
          VB: Public Function GetCookies As String
        return:
          type: System.String
          description: "\"Y\" or \"N\""
      overload: Kount.Ris.Response.GetCookies*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetMobileDevice
      commentId: M:Kount.Ris.Response.GetMobileDevice
      language: CSharp
      name:
        CSharp: GetMobileDevice()
        VB: GetMobileDevice()
      nameWithType:
        CSharp: Response.GetMobileDevice()
        VB: Response.GetMobileDevice()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetMobileDevice()
        VB: Kount.Ris.Response.GetMobileDevice()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetMobileDevice
        path: Kount/Ris/Response.cs
        startLine: 429
      summary: "\nGet a string representing whether the remote device is a mobile\ndevice\n"
      example: []
      syntax:
        content:
          CSharp: public string GetMobileDevice()
          VB: Public Function GetMobileDevice As String
        return:
          type: System.String
          description: "\"Y\" or \"N\""
      overload: Kount.Ris.Response.GetMobileDevice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetSite
      commentId: M:Kount.Ris.Response.GetSite
      language: CSharp
      name:
        CSharp: GetSite()
        VB: GetSite()
      nameWithType:
        CSharp: Response.GetSite()
        VB: Response.GetSite()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetSite()
        VB: Kount.Ris.Response.GetSite()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetSite
        path: Kount/Ris/Response.cs
        startLine: 438
      summary: "\nGet the site ID\n"
      example: []
      syntax:
        content:
          CSharp: public string GetSite()
          VB: Public Function GetSite As String
        return:
          type: System.String
          description: The site ID
      overload: Kount.Ris.Response.GetSite*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetMasterCardFraudScore
      commentId: M:Kount.Ris.Response.GetMasterCardFraudScore
      language: CSharp
      name:
        CSharp: GetMasterCardFraudScore()
        VB: GetMasterCardFraudScore()
      nameWithType:
        CSharp: Response.GetMasterCardFraudScore()
        VB: Response.GetMasterCardFraudScore()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetMasterCardFraudScore()
        VB: Kount.Ris.Response.GetMasterCardFraudScore()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetMasterCardFraudScore
        path: Kount/Ris/Response.cs
        startLine: 449
      summary: "\nGet MasterCard Fraud Score associated with the RIS transaction.\nPlease contact your Kount representative to enable support for this\nfeature in your merchant account.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetMasterCardFraudScore()
          VB: Public Function GetMasterCardFraudScore As String
        return:
          type: System.String
          description: MasterCard Fraud Score
      overload: Kount.Ris.Response.GetMasterCardFraudScore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetPiercedIPAddress
      commentId: M:Kount.Ris.Response.GetPiercedIPAddress
      language: CSharp
      name:
        CSharp: GetPiercedIPAddress()
        VB: GetPiercedIPAddress()
      nameWithType:
        CSharp: Response.GetPiercedIPAddress()
        VB: Response.GetPiercedIPAddress()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetPiercedIPAddress()
        VB: Kount.Ris.Response.GetPiercedIPAddress()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPiercedIPAddress
        path: Kount/Ris/Response.cs
        startLine: 458
      summary: "\nGet pierced IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPiercedIPAddress()
          VB: Public Function GetPiercedIPAddress As String
        return:
          type: System.String
          description: Pierced IP address
      overload: Kount.Ris.Response.GetPiercedIPAddress*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetPiercedIPAddressLatitude
      commentId: M:Kount.Ris.Response.GetPiercedIPAddressLatitude
      language: CSharp
      name:
        CSharp: GetPiercedIPAddressLatitude()
        VB: GetPiercedIPAddressLatitude()
      nameWithType:
        CSharp: Response.GetPiercedIPAddressLatitude()
        VB: Response.GetPiercedIPAddressLatitude()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetPiercedIPAddressLatitude()
        VB: Kount.Ris.Response.GetPiercedIPAddressLatitude()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPiercedIPAddressLatitude
        path: Kount/Ris/Response.cs
        startLine: 467
      summary: "\nGet latitude of pierced IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPiercedIPAddressLatitude()
          VB: Public Function GetPiercedIPAddressLatitude As String
        return:
          type: System.String
          description: Latitude of pierced IP address
      overload: Kount.Ris.Response.GetPiercedIPAddressLatitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetPiercedIPAddressLongitude
      commentId: M:Kount.Ris.Response.GetPiercedIPAddressLongitude
      language: CSharp
      name:
        CSharp: GetPiercedIPAddressLongitude()
        VB: GetPiercedIPAddressLongitude()
      nameWithType:
        CSharp: Response.GetPiercedIPAddressLongitude()
        VB: Response.GetPiercedIPAddressLongitude()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetPiercedIPAddressLongitude()
        VB: Kount.Ris.Response.GetPiercedIPAddressLongitude()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPiercedIPAddressLongitude
        path: Kount/Ris/Response.cs
        startLine: 476
      summary: "\nGet longitude of pierced IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPiercedIPAddressLongitude()
          VB: Public Function GetPiercedIPAddressLongitude As String
        return:
          type: System.String
          description: Longitude of pierced IP address
      overload: Kount.Ris.Response.GetPiercedIPAddressLongitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetPiercedIPAddressCountry
      commentId: M:Kount.Ris.Response.GetPiercedIPAddressCountry
      language: CSharp
      name:
        CSharp: GetPiercedIPAddressCountry()
        VB: GetPiercedIPAddressCountry()
      nameWithType:
        CSharp: Response.GetPiercedIPAddressCountry()
        VB: Response.GetPiercedIPAddressCountry()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetPiercedIPAddressCountry()
        VB: Kount.Ris.Response.GetPiercedIPAddressCountry()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPiercedIPAddressCountry
        path: Kount/Ris/Response.cs
        startLine: 485
      summary: "\nGet country of pierced IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPiercedIPAddressCountry()
          VB: Public Function GetPiercedIPAddressCountry As String
        return:
          type: System.String
          description: Country of pierced IP address
      overload: Kount.Ris.Response.GetPiercedIPAddressCountry*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetPiercedIPAddressRegion
      commentId: M:Kount.Ris.Response.GetPiercedIPAddressRegion
      language: CSharp
      name:
        CSharp: GetPiercedIPAddressRegion()
        VB: GetPiercedIPAddressRegion()
      nameWithType:
        CSharp: Response.GetPiercedIPAddressRegion()
        VB: Response.GetPiercedIPAddressRegion()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetPiercedIPAddressRegion()
        VB: Kount.Ris.Response.GetPiercedIPAddressRegion()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPiercedIPAddressRegion
        path: Kount/Ris/Response.cs
        startLine: 494
      summary: "\nGet region of pierced IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPiercedIPAddressRegion()
          VB: Public Function GetPiercedIPAddressRegion As String
        return:
          type: System.String
          description: Region of pierced IP address
      overload: Kount.Ris.Response.GetPiercedIPAddressRegion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetPiercedIPAddressCity
      commentId: M:Kount.Ris.Response.GetPiercedIPAddressCity
      language: CSharp
      name:
        CSharp: GetPiercedIPAddressCity()
        VB: GetPiercedIPAddressCity()
      nameWithType:
        CSharp: Response.GetPiercedIPAddressCity()
        VB: Response.GetPiercedIPAddressCity()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetPiercedIPAddressCity()
        VB: Kount.Ris.Response.GetPiercedIPAddressCity()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPiercedIPAddressCity
        path: Kount/Ris/Response.cs
        startLine: 503
      summary: "\nGet city of pierced IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPiercedIPAddressCity()
          VB: Public Function GetPiercedIPAddressCity As String
        return:
          type: System.String
          description: City of pierced IP address
      overload: Kount.Ris.Response.GetPiercedIPAddressCity*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetPiercedIPAddressOrganization
      commentId: M:Kount.Ris.Response.GetPiercedIPAddressOrganization
      language: CSharp
      name:
        CSharp: GetPiercedIPAddressOrganization()
        VB: GetPiercedIPAddressOrganization()
      nameWithType:
        CSharp: Response.GetPiercedIPAddressOrganization()
        VB: Response.GetPiercedIPAddressOrganization()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetPiercedIPAddressOrganization()
        VB: Kount.Ris.Response.GetPiercedIPAddressOrganization()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPiercedIPAddressOrganization
        path: Kount/Ris/Response.cs
        startLine: 512
      summary: "\nGet organization of pierced IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPiercedIPAddressOrganization()
          VB: Public Function GetPiercedIPAddressOrganization As String
        return:
          type: System.String
          description: Organization of pierced IP address
      overload: Kount.Ris.Response.GetPiercedIPAddressOrganization*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetIPAddress
      commentId: M:Kount.Ris.Response.GetIPAddress
      language: CSharp
      name:
        CSharp: GetIPAddress()
        VB: GetIPAddress()
      nameWithType:
        CSharp: Response.GetIPAddress()
        VB: Response.GetIPAddress()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetIPAddress()
        VB: Kount.Ris.Response.GetIPAddress()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetIPAddress
        path: Kount/Ris/Response.cs
        startLine: 521
      summary: "\nGet proxy IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetIPAddress()
          VB: Public Function GetIPAddress As String
        return:
          type: System.String
          description: Proxy IP Address
      overload: Kount.Ris.Response.GetIPAddress*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetIPAddressLatitude
      commentId: M:Kount.Ris.Response.GetIPAddressLatitude
      language: CSharp
      name:
        CSharp: GetIPAddressLatitude()
        VB: GetIPAddressLatitude()
      nameWithType:
        CSharp: Response.GetIPAddressLatitude()
        VB: Response.GetIPAddressLatitude()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetIPAddressLatitude()
        VB: Kount.Ris.Response.GetIPAddressLatitude()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetIPAddressLatitude
        path: Kount/Ris/Response.cs
        startLine: 530
      summary: "\nGet latitude of proxy IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetIPAddressLatitude()
          VB: Public Function GetIPAddressLatitude As String
        return:
          type: System.String
          description: Latitude of proxy IP address
      overload: Kount.Ris.Response.GetIPAddressLatitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetIPAddressLongitude
      commentId: M:Kount.Ris.Response.GetIPAddressLongitude
      language: CSharp
      name:
        CSharp: GetIPAddressLongitude()
        VB: GetIPAddressLongitude()
      nameWithType:
        CSharp: Response.GetIPAddressLongitude()
        VB: Response.GetIPAddressLongitude()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetIPAddressLongitude()
        VB: Kount.Ris.Response.GetIPAddressLongitude()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetIPAddressLongitude
        path: Kount/Ris/Response.cs
        startLine: 539
      summary: "\nGet longitude of proxy IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetIPAddressLongitude()
          VB: Public Function GetIPAddressLongitude As String
        return:
          type: System.String
          description: Longitude of proxy IP address
      overload: Kount.Ris.Response.GetIPAddressLongitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetIPAddressCountry
      commentId: M:Kount.Ris.Response.GetIPAddressCountry
      language: CSharp
      name:
        CSharp: GetIPAddressCountry()
        VB: GetIPAddressCountry()
      nameWithType:
        CSharp: Response.GetIPAddressCountry()
        VB: Response.GetIPAddressCountry()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetIPAddressCountry()
        VB: Kount.Ris.Response.GetIPAddressCountry()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetIPAddressCountry
        path: Kount/Ris/Response.cs
        startLine: 548
      summary: "\nGet country of proxy IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetIPAddressCountry()
          VB: Public Function GetIPAddressCountry As String
        return:
          type: System.String
          description: Country of proxy IP address
      overload: Kount.Ris.Response.GetIPAddressCountry*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetIPAddressRegion
      commentId: M:Kount.Ris.Response.GetIPAddressRegion
      language: CSharp
      name:
        CSharp: GetIPAddressRegion()
        VB: GetIPAddressRegion()
      nameWithType:
        CSharp: Response.GetIPAddressRegion()
        VB: Response.GetIPAddressRegion()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetIPAddressRegion()
        VB: Kount.Ris.Response.GetIPAddressRegion()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetIPAddressRegion
        path: Kount/Ris/Response.cs
        startLine: 557
      summary: "\nGet region of proxy IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetIPAddressRegion()
          VB: Public Function GetIPAddressRegion As String
        return:
          type: System.String
          description: Region of proxy IP address
      overload: Kount.Ris.Response.GetIPAddressRegion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetIPAddressCity
      commentId: M:Kount.Ris.Response.GetIPAddressCity
      language: CSharp
      name:
        CSharp: GetIPAddressCity()
        VB: GetIPAddressCity()
      nameWithType:
        CSharp: Response.GetIPAddressCity()
        VB: Response.GetIPAddressCity()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetIPAddressCity()
        VB: Kount.Ris.Response.GetIPAddressCity()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetIPAddressCity
        path: Kount/Ris/Response.cs
        startLine: 566
      summary: "\nGet city of proxy IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetIPAddressCity()
          VB: Public Function GetIPAddressCity As String
        return:
          type: System.String
          description: City of proxy IP address
      overload: Kount.Ris.Response.GetIPAddressCity*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetIPAddressOrganization
      commentId: M:Kount.Ris.Response.GetIPAddressOrganization
      language: CSharp
      name:
        CSharp: GetIPAddressOrganization()
        VB: GetIPAddressOrganization()
      nameWithType:
        CSharp: Response.GetIPAddressOrganization()
        VB: Response.GetIPAddressOrganization()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetIPAddressOrganization()
        VB: Kount.Ris.Response.GetIPAddressOrganization()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetIPAddressOrganization
        path: Kount/Ris/Response.cs
        startLine: 575
      summary: "\nGet organization of proxy IP address\n"
      example: []
      syntax:
        content:
          CSharp: public string GetIPAddressOrganization()
          VB: Public Function GetIPAddressOrganization As String
        return:
          type: System.String
          description: Organization of proxy IP address
      overload: Kount.Ris.Response.GetIPAddressOrganization*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetDateDeviceFirstSeen
      commentId: M:Kount.Ris.Response.GetDateDeviceFirstSeen
      language: CSharp
      name:
        CSharp: GetDateDeviceFirstSeen()
        VB: GetDateDeviceFirstSeen()
      nameWithType:
        CSharp: Response.GetDateDeviceFirstSeen()
        VB: Response.GetDateDeviceFirstSeen()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetDateDeviceFirstSeen()
        VB: Kount.Ris.Response.GetDateDeviceFirstSeen()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetDateDeviceFirstSeen
        path: Kount/Ris/Response.cs
        startLine: 584
      summary: "\nGet date device first seen\n"
      example: []
      syntax:
        content:
          CSharp: public string GetDateDeviceFirstSeen()
          VB: Public Function GetDateDeviceFirstSeen As String
        return:
          type: System.String
          description: Date device first seen
      overload: Kount.Ris.Response.GetDateDeviceFirstSeen*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetUserAgentString
      commentId: M:Kount.Ris.Response.GetUserAgentString
      language: CSharp
      name:
        CSharp: GetUserAgentString()
        VB: GetUserAgentString()
      nameWithType:
        CSharp: Response.GetUserAgentString()
        VB: Response.GetUserAgentString()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetUserAgentString()
        VB: Kount.Ris.Response.GetUserAgentString()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetUserAgentString
        path: Kount/Ris/Response.cs
        startLine: 593
      summary: "\nGet user agent string\n"
      example: []
      syntax:
        content:
          CSharp: public string GetUserAgentString()
          VB: Public Function GetUserAgentString As String
        return:
          type: System.String
          description: User agent string
      overload: Kount.Ris.Response.GetUserAgentString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetDeviceScreenResolution
      commentId: M:Kount.Ris.Response.GetDeviceScreenResolution
      language: CSharp
      name:
        CSharp: GetDeviceScreenResolution()
        VB: GetDeviceScreenResolution()
      nameWithType:
        CSharp: Response.GetDeviceScreenResolution()
        VB: Response.GetDeviceScreenResolution()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetDeviceScreenResolution()
        VB: Kount.Ris.Response.GetDeviceScreenResolution()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetDeviceScreenResolution
        path: Kount/Ris/Response.cs
        startLine: 602
      summary: "\nGet device screen resolution\n"
      example: []
      syntax:
        content:
          CSharp: public string GetDeviceScreenResolution()
          VB: Public Function GetDeviceScreenResolution As String
        return:
          type: System.String
          description: Device screen resolution (HxW - Height by Width)
      overload: Kount.Ris.Response.GetDeviceScreenResolution*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetOS
      commentId: M:Kount.Ris.Response.GetOS
      language: CSharp
      name:
        CSharp: GetOS()
        VB: GetOS()
      nameWithType:
        CSharp: Response.GetOS()
        VB: Response.GetOS()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetOS()
        VB: Kount.Ris.Response.GetOS()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetOS
        path: Kount/Ris/Response.cs
        startLine: 611
      summary: "\nGet operating system (derived from user agent string)\n"
      example: []
      syntax:
        content:
          CSharp: public string GetOS()
          VB: Public Function GetOS As String
        return:
          type: System.String
          description: OS (operating system)
      overload: Kount.Ris.Response.GetOS*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetBrowser
      commentId: M:Kount.Ris.Response.GetBrowser
      language: CSharp
      name:
        CSharp: GetBrowser()
        VB: GetBrowser()
      nameWithType:
        CSharp: Response.GetBrowser()
        VB: Response.GetBrowser()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetBrowser()
        VB: Kount.Ris.Response.GetBrowser()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetBrowser
        path: Kount/Ris/Response.cs
        startLine: 620
      summary: "\nGet browser (derived from user agent string)\n"
      example: []
      syntax:
        content:
          CSharp: public string GetBrowser()
          VB: Public Function GetBrowser As String
        return:
          type: System.String
          description: Browser string
      overload: Kount.Ris.Response.GetBrowser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.ToString
      commentId: M:Kount.Ris.Response.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Response.ToString()
        VB: Response.ToString()
      qualifiedName:
        CSharp: Kount.Ris.Response.ToString()
        VB: Kount.Ris.Response.ToString()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ToString
        path: Kount/Ris/Response.cs
        startLine: 629
      summary: "\nGet the original raw name=value pair string of the response.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: Raw string of the response.
      overload: Kount.Ris.Response.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Kount.Ris.Response.GetRulesTriggered
      commentId: M:Kount.Ris.Response.GetRulesTriggered
      language: CSharp
      name:
        CSharp: GetRulesTriggered()
        VB: GetRulesTriggered()
      nameWithType:
        CSharp: Response.GetRulesTriggered()
        VB: Response.GetRulesTriggered()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetRulesTriggered()
        VB: Kount.Ris.Response.GetRulesTriggered()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetRulesTriggered
        path: Kount/Ris/Response.cs
        startLine: 638
      summary: "\nGet a Map of the rules triggered by this Response.\n"
      example: []
      syntax:
        content:
          CSharp: public IDictionary GetRulesTriggered()
          VB: Public Function GetRulesTriggered As IDictionary
        return:
          type: IDictionary
          description: Map of the rules
      overload: Kount.Ris.Response.GetRulesTriggered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetNumberRulesTriggered
      commentId: M:Kount.Ris.Response.GetNumberRulesTriggered
      language: CSharp
      name:
        CSharp: GetNumberRulesTriggered()
        VB: GetNumberRulesTriggered()
      nameWithType:
        CSharp: Response.GetNumberRulesTriggered()
        VB: Response.GetNumberRulesTriggered()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetNumberRulesTriggered()
        VB: Kount.Ris.Response.GetNumberRulesTriggered()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetNumberRulesTriggered
        path: Kount/Ris/Response.cs
        startLine: 656
      summary: "\nGet the number of rules triggered with the response.\n"
      example: []
      syntax:
        content:
          CSharp: public int GetNumberRulesTriggered()
          VB: Public Function GetNumberRulesTriggered As Integer
        return:
          type: System.Int32
          description: Number of rules
      overload: Kount.Ris.Response.GetNumberRulesTriggered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetWarnings
      commentId: M:Kount.Ris.Response.GetWarnings
      language: CSharp
      name:
        CSharp: GetWarnings()
        VB: GetWarnings()
      nameWithType:
        CSharp: Response.GetWarnings()
        VB: Response.GetWarnings()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetWarnings()
        VB: Kount.Ris.Response.GetWarnings()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetWarnings
        path: Kount/Ris/Response.cs
        startLine: 684
      summary: "\nGet a Map of the warnings returned by this Response.\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> GetWarnings()
          VB: Public Function GetWarnings As List(Of String)
        return:
          type: List{System.String}
          description: Get the warnings
      overload: Kount.Ris.Response.GetWarnings*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetWarningCount
      commentId: M:Kount.Ris.Response.GetWarningCount
      language: CSharp
      name:
        CSharp: GetWarningCount()
        VB: GetWarningCount()
      nameWithType:
        CSharp: Response.GetWarningCount()
        VB: Response.GetWarningCount()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetWarningCount()
        VB: Kount.Ris.Response.GetWarningCount()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetWarningCount
        path: Kount/Ris/Response.cs
        startLine: 700
      summary: "\nGet the number of warnings associated with the response.\n"
      example: []
      syntax:
        content:
          CSharp: public int GetWarningCount()
          VB: Public Function GetWarningCount As Integer
        return:
          type: System.Int32
          description: Number of warnings
      overload: Kount.Ris.Response.GetWarningCount*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetErrors
      commentId: M:Kount.Ris.Response.GetErrors
      language: CSharp
      name:
        CSharp: GetErrors()
        VB: GetErrors()
      nameWithType:
        CSharp: Response.GetErrors()
        VB: Response.GetErrors()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetErrors()
        VB: Kount.Ris.Response.GetErrors()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetErrors
        path: Kount/Ris/Response.cs
        startLine: 728
      summary: "\nGet a map of the errors associated with the response.\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> GetErrors()
          VB: Public Function GetErrors As List(Of String)
        return:
          type: List{System.String}
          description: Array of errors
      overload: Kount.Ris.Response.GetErrors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetErrorCount
      commentId: M:Kount.Ris.Response.GetErrorCount
      language: CSharp
      name:
        CSharp: GetErrorCount()
        VB: GetErrorCount()
      nameWithType:
        CSharp: Response.GetErrorCount()
        VB: Response.GetErrorCount()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetErrorCount()
        VB: Kount.Ris.Response.GetErrorCount()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetErrorCount
        path: Kount/Ris/Response.cs
        startLine: 744
      summary: "\nGet the number of errors associated with the response.\n"
      example: []
      syntax:
        content:
          CSharp: public int GetErrorCount()
          VB: Public Function GetErrorCount As Integer
        return:
          type: System.Int32
          description: Number of errors
      overload: Kount.Ris.Response.GetErrorCount*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.HasErrors
      commentId: M:Kount.Ris.Response.HasErrors
      language: CSharp
      name:
        CSharp: HasErrors()
        VB: HasErrors()
      nameWithType:
        CSharp: Response.HasErrors()
        VB: Response.HasErrors()
      qualifiedName:
        CSharp: Kount.Ris.Response.HasErrors()
        VB: Kount.Ris.Response.HasErrors()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: HasErrors
        path: Kount/Ris/Response.cs
        startLine: 772
      summary: "\nCheck if the response has errors.\n"
      example: []
      syntax:
        content:
          CSharp: public bool HasErrors()
          VB: Public Function HasErrors As Boolean
        return:
          type: System.Boolean
          description: True if response has errors, false otherwise.
      overload: Kount.Ris.Response.HasErrors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetLexisNexisCbdAttributes
      commentId: M:Kount.Ris.Response.GetLexisNexisCbdAttributes
      language: CSharp
      name:
        CSharp: GetLexisNexisCbdAttributes()
        VB: GetLexisNexisCbdAttributes()
      nameWithType:
        CSharp: Response.GetLexisNexisCbdAttributes()
        VB: Response.GetLexisNexisCbdAttributes()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetLexisNexisCbdAttributes()
        VB: Kount.Ris.Response.GetLexisNexisCbdAttributes()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetLexisNexisCbdAttributes
        path: Kount/Ris/Response.cs
        startLine: 784
      summary: "\nGet LexisNexis Chargeback Defender attribute data associated with\nthe RIS transaction. Please contact your Kount representative to\nenable support for this feature in your merchant account.\n"
      example: []
      syntax:
        content:
          CSharp: public IDictionary GetLexisNexisCbdAttributes()
          VB: Public Function GetLexisNexisCbdAttributes As IDictionary
        return:
          type: IDictionary
          description: >-
            Map of attributes where the keys are the attribute names

            and the values are the attribute values.
      overload: Kount.Ris.Response.GetLexisNexisCbdAttributes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetLexisNexisInstantIdAttributes
      commentId: M:Kount.Ris.Response.GetLexisNexisInstantIdAttributes
      language: CSharp
      name:
        CSharp: GetLexisNexisInstantIdAttributes()
        VB: GetLexisNexisInstantIdAttributes()
      nameWithType:
        CSharp: Response.GetLexisNexisInstantIdAttributes()
        VB: Response.GetLexisNexisInstantIdAttributes()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetLexisNexisInstantIdAttributes()
        VB: Kount.Ris.Response.GetLexisNexisInstantIdAttributes()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetLexisNexisInstantIdAttributes
        path: Kount/Ris/Response.cs
        startLine: 796
      summary: "\nGet LexisNexis Instant ID attribute data associated with\nthe RIS transaction. Please contact your Kount representative to\nenable support for this feature in your merchant account.\n"
      example: []
      syntax:
        content:
          CSharp: public IDictionary GetLexisNexisInstantIdAttributes()
          VB: Public Function GetLexisNexisInstantIdAttributes As IDictionary
        return:
          type: IDictionary
          description: >-
            Map of attributes where the keys are the attribute names

            and the values are the attribute values.
      overload: Kount.Ris.Response.GetLexisNexisInstantIdAttributes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetCountersTriggered
      commentId: M:Kount.Ris.Response.GetCountersTriggered
      language: CSharp
      name:
        CSharp: GetCountersTriggered()
        VB: GetCountersTriggered()
      nameWithType:
        CSharp: Response.GetCountersTriggered()
        VB: Response.GetCountersTriggered()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetCountersTriggered()
        VB: Kount.Ris.Response.GetCountersTriggered()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetCountersTriggered
        path: Kount/Ris/Response.cs
        startLine: 807
      summary: "\nGet a map of the rules counters triggered in the response.\n"
      example: []
      syntax:
        content:
          CSharp: public IDictionary GetCountersTriggered()
          VB: Public Function GetCountersTriggered As IDictionary
        return:
          type: IDictionary
          description: "\nMap Key: counter name, Value: counter value.\n"
      overload: Kount.Ris.Response.GetCountersTriggered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetNumberCountersTriggered
      commentId: M:Kount.Ris.Response.GetNumberCountersTriggered
      language: CSharp
      name:
        CSharp: GetNumberCountersTriggered()
        VB: GetNumberCountersTriggered()
      nameWithType:
        CSharp: Response.GetNumberCountersTriggered()
        VB: Response.GetNumberCountersTriggered()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetNumberCountersTriggered()
        VB: Kount.Ris.Response.GetNumberCountersTriggered()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetNumberCountersTriggered
        path: Kount/Ris/Response.cs
        startLine: 829
      summary: "\nGet the number of rules counters triggered in the response.\n"
      example: []
      syntax:
        content:
          CSharp: public int GetNumberCountersTriggered()
          VB: Public Function GetNumberCountersTriggered As Integer
        return:
          type: System.Int32
          description: "\nNumber of counters triggered\n"
      overload: Kount.Ris.Response.GetNumberCountersTriggered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKountCentralCustomerId
      commentId: M:Kount.Ris.Response.GetKountCentralCustomerId
      language: CSharp
      name:
        CSharp: GetKountCentralCustomerId()
        VB: GetKountCentralCustomerId()
      nameWithType:
        CSharp: Response.GetKountCentralCustomerId()
        VB: Response.GetKountCentralCustomerId()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKountCentralCustomerId()
        VB: Kount.Ris.Response.GetKountCentralCustomerId()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKountCentralCustomerId
        path: Kount/Ris/Response.cs
        startLine: 857
      summary: "\nGet the Kount Central Customer ID\n"
      example: []
      syntax:
        content:
          CSharp: public string GetKountCentralCustomerId()
          VB: Public Function GetKountCentralCustomerId As String
        return:
          type: System.String
          description: "\nKount Central Customer ID\n"
      overload: Kount.Ris.Response.GetKountCentralCustomerId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKountCentralWarnings
      commentId: M:Kount.Ris.Response.GetKountCentralWarnings
      language: CSharp
      name:
        CSharp: GetKountCentralWarnings()
        VB: GetKountCentralWarnings()
      nameWithType:
        CSharp: Response.GetKountCentralWarnings()
        VB: Response.GetKountCentralWarnings()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKountCentralWarnings()
        VB: Kount.Ris.Response.GetKountCentralWarnings()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKountCentralWarnings
        path: Kount/Ris/Response.cs
        startLine: 868
      summary: "\nGet all the Kount Central Warnings for this response\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> GetKountCentralWarnings()
          VB: Public Function GetKountCentralWarnings As List(Of String)
        return:
          type: List{System.String}
          description: "\nKount Central Warnings\n"
      overload: Kount.Ris.Response.GetKountCentralWarnings*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKountCentralWarningCount
      commentId: M:Kount.Ris.Response.GetKountCentralWarningCount
      language: CSharp
      name:
        CSharp: GetKountCentralWarningCount()
        VB: GetKountCentralWarningCount()
      nameWithType:
        CSharp: Response.GetKountCentralWarningCount()
        VB: Response.GetKountCentralWarningCount()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKountCentralWarningCount()
        VB: Kount.Ris.Response.GetKountCentralWarningCount()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKountCentralWarningCount
        path: Kount/Ris/Response.cs
        startLine: 886
      summary: "\nGet the number of Kount Central Warnings\n"
      example: []
      syntax:
        content:
          CSharp: public int GetKountCentralWarningCount()
          VB: Public Function GetKountCentralWarningCount As Integer
        return:
          type: System.Int32
          description: "\nNumber of Kount Central Warnings\n"
      overload: Kount.Ris.Response.GetKountCentralWarningCount*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKountCentralErrors
      commentId: M:Kount.Ris.Response.GetKountCentralErrors
      language: CSharp
      name:
        CSharp: GetKountCentralErrors()
        VB: GetKountCentralErrors()
      nameWithType:
        CSharp: Response.GetKountCentralErrors()
        VB: Response.GetKountCentralErrors()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKountCentralErrors()
        VB: Kount.Ris.Response.GetKountCentralErrors()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKountCentralErrors
        path: Kount/Ris/Response.cs
        startLine: 911
      summary: "\nGet all the Kount Central Errors for this response\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> GetKountCentralErrors()
          VB: Public Function GetKountCentralErrors As List(Of String)
        return:
          type: List{System.String}
          description: "\nKount Central Errors\n"
      overload: Kount.Ris.Response.GetKountCentralErrors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKountCentralErrorCount
      commentId: M:Kount.Ris.Response.GetKountCentralErrorCount
      language: CSharp
      name:
        CSharp: GetKountCentralErrorCount()
        VB: GetKountCentralErrorCount()
      nameWithType:
        CSharp: Response.GetKountCentralErrorCount()
        VB: Response.GetKountCentralErrorCount()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKountCentralErrorCount()
        VB: Kount.Ris.Response.GetKountCentralErrorCount()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKountCentralErrorCount
        path: Kount/Ris/Response.cs
        startLine: 929
      summary: "\nGet the number of Kount Central Errors\n"
      example: []
      syntax:
        content:
          CSharp: public int GetKountCentralErrorCount()
          VB: Public Function GetKountCentralErrorCount As Integer
        return:
          type: System.Int32
          description: "\nNumber of Kount Central Errors\n"
      overload: Kount.Ris.Response.GetKountCentralErrorCount*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered
      commentId: M:Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered
      language: CSharp
      name:
        CSharp: GetKountCentralNumberThresholdsTriggered()
        VB: GetKountCentralNumberThresholdsTriggered()
      nameWithType:
        CSharp: Response.GetKountCentralNumberThresholdsTriggered()
        VB: Response.GetKountCentralNumberThresholdsTriggered()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered()
        VB: Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKountCentralNumberThresholdsTriggered
        path: Kount/Ris/Response.cs
        startLine: 954
      summary: "\nGet the number of Kount Central thresholds triggered\n"
      example: []
      syntax:
        content:
          CSharp: public int GetKountCentralNumberThresholdsTriggered()
          VB: Public Function GetKountCentralNumberThresholdsTriggered As Integer
        return:
          type: System.Int32
          description: "\nNumber of Kount Central thresholds triggered\n"
      overload: Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKountCentralDecision
      commentId: M:Kount.Ris.Response.GetKountCentralDecision
      language: CSharp
      name:
        CSharp: GetKountCentralDecision()
        VB: GetKountCentralDecision()
      nameWithType:
        CSharp: Response.GetKountCentralDecision()
        VB: Response.GetKountCentralDecision()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKountCentralDecision()
        VB: Kount.Ris.Response.GetKountCentralDecision()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKountCentralDecision
        path: Kount/Ris/Response.cs
        startLine: 979
      summary: "\nGet the Kount Central Decision\n"
      example: []
      syntax:
        content:
          CSharp: public string GetKountCentralDecision()
          VB: Public Function GetKountCentralDecision As String
        return:
          type: System.String
          description: "\nThe Kount Central Decision\n"
      overload: Kount.Ris.Response.GetKountCentralDecision*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetKountCentralThresholdEvents
      commentId: M:Kount.Ris.Response.GetKountCentralThresholdEvents
      language: CSharp
      name:
        CSharp: GetKountCentralThresholdEvents()
        VB: GetKountCentralThresholdEvents()
      nameWithType:
        CSharp: Response.GetKountCentralThresholdEvents()
        VB: Response.GetKountCentralThresholdEvents()
      qualifiedName:
        CSharp: Kount.Ris.Response.GetKountCentralThresholdEvents()
        VB: Kount.Ris.Response.GetKountCentralThresholdEvents()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetKountCentralThresholdEvents
        path: Kount/Ris/Response.cs
        startLine: 990
      summary: "\nGet list of KcEvent objects for this Response\n"
      example: []
      syntax:
        content:
          CSharp: public List<KcEvent> GetKountCentralThresholdEvents()
          VB: Public Function GetKountCentralThresholdEvents As List(Of KcEvent)
        return:
          type: List{Kount.Ris.KcEvent}
          description: "\nList of KcEvent objects\n"
      overload: Kount.Ris.Response.GetKountCentralThresholdEvents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Response.GetPrefixedResponseDataDictionary(System.String)
      commentId: M:Kount.Ris.Response.GetPrefixedResponseDataDictionary(System.String)
      language: CSharp
      name:
        CSharp: GetPrefixedResponseDataDictionary(String)
        VB: GetPrefixedResponseDataDictionary(String)
      nameWithType:
        CSharp: Response.GetPrefixedResponseDataDictionary(String)
        VB: Response.GetPrefixedResponseDataDictionary(String)
      qualifiedName:
        CSharp: Kount.Ris.Response.GetPrefixedResponseDataDictionary(System.String)
        VB: Kount.Ris.Response.GetPrefixedResponseDataDictionary(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Response.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetPrefixedResponseDataDictionary
        path: Kount/Ris/Response.cs
        startLine: 1014
      summary: "\nGet a dictionary of the response data where the keys are the RIS\nresponse keys that begin with a specified prefix.\n"
      example: []
      syntax:
        content:
          CSharp: protected IDictionary GetPrefixedResponseDataDictionary(string prefix)
          VB: Protected Function GetPrefixedResponseDataDictionary(prefix As String) As IDictionary
        parameters:
        - id: prefix
          type: System.String
          description: Key prefix.
        return:
          type: IDictionary
          description: >-
            Dictionary of key-value pairs for a specified RIS key

            prefix.
      overload: Kount.Ris.Response.GetPrefixedResponseDataDictionary*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: Kount.Ris.RSA
    commentId: T:Kount.Ris.RSA
    language: CSharp
    name:
      CSharp: RSA
      VB: RSA
    nameWithType:
      CSharp: RSA
      VB: RSA
    qualifiedName:
      CSharp: Kount.Ris.RSA
      VB: Kount.Ris.RSA
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/RSA.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: RSA
      path: Kount/Ris/RSA.cs
      startLine: 18
    summary: "\nRSA Utility class for encrypting PANs <br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RSA : object'
        VB: >-
          Public Class RSA

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.RSA.Encrypt(System.String)
      commentId: M:Kount.Ris.RSA.Encrypt(System.String)
      language: CSharp
      name:
        CSharp: Encrypt(String)
        VB: Encrypt(String)
      nameWithType:
        CSharp: RSA.Encrypt(String)
        VB: RSA.Encrypt(String)
      qualifiedName:
        CSharp: Kount.Ris.RSA.Encrypt(System.String)
        VB: Kount.Ris.RSA.Encrypt(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/RSA.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Encrypt
        path: Kount/Ris/RSA.cs
        startLine: 25
      summary: "\nEncrypt a token with an RSA public key\n"
      example: []
      syntax:
        content:
          CSharp: public string Encrypt(string plainText)
          VB: Public Function Encrypt(plainText As String) As String
        parameters:
        - id: plainText
          type: System.String
          description: Plaintext string
        return:
          type: System.String
          description: Encrypted string
      overload: Kount.Ris.RSA.Encrypt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Kount.Ris.Update
    commentId: T:Kount.Ris.Update
    language: CSharp
    name:
      CSharp: Update
      VB: Update
    nameWithType:
      CSharp: Update
      VB: Update
    qualifiedName:
      CSharp: Kount.Ris.Update
      VB: Kount.Ris.Update
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/Update.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: Update
      path: Kount/Ris/Update.cs
      startLine: 18
    summary: "\nUpdate class. A bunch of setters for sending transaction update <br />\ndata to a Kount RIS server.\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Update : Request'
        VB: >-
          Public Class Update

              Inherits Request
    inheritance:
    - System.Object
    - Kount.Ris.Request
    inheritedMembers:
    - Kount.Ris.Request.Data
    - Kount.Ris.Request.GetResponse(System.Boolean)
    - Kount.Ris.Request.SetParameter(System.String,System.String)
    - Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes)
    - Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes)
    - Kount.Ris.Request.SetMerchantId(System.Int32)
    - Kount.Ris.Request.SetKountCentralCustomerId(System.String)
    - Kount.Ris.Request.SetSessionId(System.String)
    - Kount.Ris.Request.SetOrderNumber(System.String)
    - Kount.Ris.Request.SetMack(System.Char)
    - Kount.Ris.Request.SetAuth(System.Char)
    - Kount.Ris.Request.SetAvsz(System.Char)
    - Kount.Ris.Request.SetAvst(System.Char)
    - Kount.Ris.Request.SetCvvr(System.Char)
    - Kount.Ris.Request.SetCardPaymentMasked(System.String)
    - Kount.Ris.Request.SetNoPayment
    - Kount.Ris.Request.SetPayment(System.String,System.String)
    - Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes,System.String)
    - Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String)
    - Kount.Ris.Request.GetParam(System.String)
    - Kount.Ris.Request.GetUrl
    - Kount.Ris.Request.SetUrl(System.String)
    - Kount.Ris.Request.SetCertificate(System.String,System.String)
    - Kount.Ris.Request.SetApiKey(System.String)
    - Kount.Ris.Request.GetCertificateFile
    - Kount.Ris.Request.GetPrivateKeyPassword
    - Kount.Ris.Request.SetKhashPaymentEncoding
    - Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean)
    - Kount.Ris.Request.SetPaymentTokenLast4(System.String)
    - Kount.Ris.Request.SetVersion(System.String)
    - Kount.Ris.Request.IsSetKhashPaymentEncoding
    - Kount.Ris.Request.SetPaymentToken(System.String)
    - Kount.Ris.Request.CheckConfigurationParameter(System.String,System.String)
    - Kount.Ris.Request.SafeGet(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.Update.#ctor
      commentId: M:Kount.Ris.Update.#ctor
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Update.Update()
        VB: Update.Update()
      qualifiedName:
        CSharp: Kount.Ris.Update.Update()
        VB: Kount.Ris.Update.Update()
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Update.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/Update.cs
        startLine: 39
      summary: "\nConstructor. Sets the mode to 'U' by default.\nUse setMode(char) to change it.\n"
      example: []
      syntax:
        content:
          CSharp: public Update()
          VB: Public Sub New
      overload: Kount.Ris.Update.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Update.#ctor(System.Boolean)
      commentId: M:Kount.Ris.Update.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: Update(Boolean)
        VB: Update(Boolean)
      nameWithType:
        CSharp: Update.Update(Boolean)
        VB: Update.Update(Boolean)
      qualifiedName:
        CSharp: Kount.Ris.Update.Update(System.Boolean)
        VB: Kount.Ris.Update.Update(System.Boolean)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Update.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/Update.cs
        startLine: 54
      summary: "\nConstructor. Sets the mode to 'U' by default.\nUse setMode(char) to change it.\n"
      example: []
      syntax:
        content:
          CSharp: public Update(bool checkConfiguration)
          VB: Public Sub New(checkConfiguration As Boolean)
        parameters:
        - id: checkConfiguration
          type: System.Boolean
          description: "If is true: will check config file if \n`Ris.Url`, \n`Ris.MerchantId`, \n`Ris.Config.Key` and `Ris.Connect.Timeout` are set."
      overload: Kount.Ris.Update.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Update.#ctor(System.Boolean,Kount.Ris.Configuration)
      commentId: M:Kount.Ris.Update.#ctor(System.Boolean,Kount.Ris.Configuration)
      language: CSharp
      name:
        CSharp: Update(Boolean, Configuration)
        VB: Update(Boolean, Configuration)
      nameWithType:
        CSharp: Update.Update(Boolean, Configuration)
        VB: Update.Update(Boolean, Configuration)
      qualifiedName:
        CSharp: Kount.Ris.Update.Update(System.Boolean, Kount.Ris.Configuration)
        VB: Kount.Ris.Update.Update(System.Boolean, Kount.Ris.Configuration)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Update.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/Update.cs
        startLine: 70
      summary: "\nConstructor. Sets the mode to 'U' by default.\nUse setMode(char) to change it.\n"
      example: []
      syntax:
        content:
          CSharp: public Update(bool checkConfiguration, Configuration configuration)
          VB: Public Sub New(checkConfiguration As Boolean, configuration As Configuration)
        parameters:
        - id: checkConfiguration
          type: System.Boolean
          description: "If is true: will check config file if \n`Ris.Url`, \n`Ris.MerchantId`, \n`Ris.Config.Key` and `Ris.Connect.Timeout` are set."
        - id: configuration
          type: Kount.Ris.Configuration
          description: Configuration class with raw values
      overload: Kount.Ris.Update.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Update.SetMode(System.Char)
      commentId: M:Kount.Ris.Update.SetMode(System.Char)
      language: CSharp
      name:
        CSharp: SetMode(Char)
        VB: SetMode(Char)
      nameWithType:
        CSharp: Update.SetMode(Char)
        VB: Update.SetMode(Char)
      qualifiedName:
        CSharp: Kount.Ris.Update.SetMode(System.Char)
        VB: Kount.Ris.Update.SetMode(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Update.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetMode
        path: Kount/Ris/Update.cs
        startLine: 83
      summary: "\nSet the mode of the update.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void SetMode(char mode)
          VB: Protected Overrides Sub SetMode(mode As Char)
        parameters:
        - id: mode
          type: System.Char
          description: Set U or X
      overload: Kount.Ris.Update.SetMode*
      overridden: Kount.Ris.Request.SetMode(System.Char)
      exceptions:
      - type: Kount.Ris.IllegalArgumentException
        commentId: T:Kount.Ris.IllegalArgumentException
        description: >-
          Thrown if

          parameter is an invalid mode.
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Kount.Ris.Update.SetTransactionId(System.String)
      commentId: M:Kount.Ris.Update.SetTransactionId(System.String)
      language: CSharp
      name:
        CSharp: SetTransactionId(String)
        VB: SetTransactionId(String)
      nameWithType:
        CSharp: Update.SetTransactionId(String)
        VB: Update.SetTransactionId(String)
      qualifiedName:
        CSharp: Kount.Ris.Update.SetTransactionId(System.String)
        VB: Kount.Ris.Update.SetTransactionId(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Update.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetTransactionId
        path: Kount/Ris/Update.cs
        startLine: 99
      summary: "\nSet the original associated transaction id generated by Kount\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTransactionId(string transactionId)
          VB: Public Sub SetTransactionId(transactionId As String)
        parameters:
        - id: transactionId
          type: System.String
          description: Transaction id.
      overload: Kount.Ris.Update.SetTransactionId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Update.SetRefundChargeback(System.Char)
      commentId: M:Kount.Ris.Update.SetRefundChargeback(System.Char)
      language: CSharp
      name:
        CSharp: SetRefundChargeback(Char)
        VB: SetRefundChargeback(Char)
      nameWithType:
        CSharp: Update.SetRefundChargeback(Char)
        VB: Update.SetRefundChargeback(Char)
      qualifiedName:
        CSharp: Kount.Ris.Update.SetRefundChargeback(System.Char)
        VB: Kount.Ris.Update.SetRefundChargeback(System.Char)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Update.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetRefundChargeback
        path: Kount/Ris/Update.cs
        startLine: 108
      summary: "\nSet if this transaction ended up being a refund or chargback.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetRefundChargeback(char rfcb)
          VB: Public Sub SetRefundChargeback(rfcb As Char)
        parameters:
        - id: rfcb
          type: System.Char
          description: Set R or C.
      overload: Kount.Ris.Update.SetRefundChargeback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.Update.SetPayPalId(System.String)
      commentId: M:Kount.Ris.Update.SetPayPalId(System.String)
      language: CSharp
      name:
        CSharp: SetPayPalId(String)
        VB: SetPayPalId(String)
      nameWithType:
        CSharp: Update.SetPayPalId(String)
        VB: Update.SetPayPalId(String)
      qualifiedName:
        CSharp: Kount.Ris.Update.SetPayPalId(System.String)
        VB: Kount.Ris.Update.SetPayPalId(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/Update.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SetPayPalId
        path: Kount/Ris/Update.cs
        startLine: 123
      summary: "\nSet the paypal Id\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPayPalId(string paypalId)
          VB: Public Sub SetPayPalId(paypalId As String)
        parameters:
        - id: paypalId
          type: System.String
          description: Set paypal Id
      overload: Kount.Ris.Update.SetPayPalId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Kount.Ris.ValidationError
    commentId: T:Kount.Ris.ValidationError
    language: CSharp
    name:
      CSharp: ValidationError
      VB: ValidationError
    nameWithType:
      CSharp: ValidationError
      VB: ValidationError
    qualifiedName:
      CSharp: Kount.Ris.ValidationError
      VB: Kount.Ris.ValidationError
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/ValidationError.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: ValidationError
      path: Kount/Ris/ValidationError.cs
      startLine: 13
    summary: "\nA class representing a RIS SDK client side validation error.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ValidationError : object'
        VB: >-
          Public Class ValidationError

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.ValidationError.#ctor(System.String,System.String)
      commentId: M:Kount.Ris.ValidationError.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: ValidationError(String, String)
        VB: ValidationError(String, String)
      nameWithType:
        CSharp: ValidationError.ValidationError(String, String)
        VB: ValidationError.ValidationError(String, String)
      qualifiedName:
        CSharp: Kount.Ris.ValidationError.ValidationError(System.String, System.String)
        VB: Kount.Ris.ValidationError.ValidationError(System.String, System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/ValidationError.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/ValidationError.cs
        startLine: 65
      summary: "\nConstructor for missing required field.\n"
      example: []
      syntax:
        content:
          CSharp: public ValidationError(string field, string mode)
          VB: Public Sub New(field As String, mode As String)
        parameters:
        - id: field
          type: System.String
          description: The name of the bad field
        - id: mode
          type: System.String
          description: The RIS mode the field is associated with
      overload: Kount.Ris.ValidationError.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.ValidationError.#ctor(System.String,System.String,System.String)
      commentId: M:Kount.Ris.ValidationError.#ctor(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: ValidationError(String, String, String)
        VB: ValidationError(String, String, String)
      nameWithType:
        CSharp: ValidationError.ValidationError(String, String, String)
        VB: ValidationError.ValidationError(String, String, String)
      qualifiedName:
        CSharp: Kount.Ris.ValidationError.ValidationError(System.String, System.String, System.String)
        VB: Kount.Ris.ValidationError.ValidationError(System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/ValidationError.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/ValidationError.cs
        startLine: 78
      summary: "\nConstructor for regular expression error.\n"
      example: []
      syntax:
        content:
          CSharp: public ValidationError(string field, string value, string pattern)
          VB: Public Sub New(field As String, value As String, pattern As String)
        parameters:
        - id: field
          type: System.String
          description: The name of the bad field
        - id: value
          type: System.String
          description: The value of the field
        - id: pattern
          type: System.String
          description: The regular expression violated
      overload: Kount.Ris.ValidationError.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.ValidationError.#ctor(System.String,System.String,System.Int32)
      commentId: M:Kount.Ris.ValidationError.#ctor(System.String,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: ValidationError(String, String, Int32)
        VB: ValidationError(String, String, Int32)
      nameWithType:
        CSharp: ValidationError.ValidationError(String, String, Int32)
        VB: ValidationError.ValidationError(String, String, Int32)
      qualifiedName:
        CSharp: Kount.Ris.ValidationError.ValidationError(System.String, System.String, System.Int32)
        VB: Kount.Ris.ValidationError.ValidationError(System.String, System.String, System.Int32)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/ValidationError.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/ValidationError.cs
        startLine: 92
      summary: "\nConstructor for maximum length error.\n"
      example: []
      syntax:
        content:
          CSharp: public ValidationError(string field, string value, int length)
          VB: Public Sub New(field As String, value As String, length As Integer)
        parameters:
        - id: field
          type: System.String
          description: The name of the bad field
        - id: value
          type: System.String
          description: The value of the field
        - id: length
          type: System.Int32
          description: The maximum allowable length
      overload: Kount.Ris.ValidationError.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.ValidationError.ToString
      commentId: M:Kount.Ris.ValidationError.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ValidationError.ToString()
        VB: ValidationError.ToString()
      qualifiedName:
        CSharp: Kount.Ris.ValidationError.ToString()
        VB: Kount.Ris.ValidationError.ToString()
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/ValidationError.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ToString
        path: Kount/Ris/ValidationError.cs
        startLine: 104
      summary: "\nGet the string representation of the error.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: Error message string
      overload: Kount.Ris.ValidationError.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Kount.Ris.ValidationException
    commentId: T:Kount.Ris.ValidationException
    language: CSharp
    name:
      CSharp: ValidationException
      VB: ValidationException
    nameWithType:
      CSharp: ValidationException
      VB: ValidationException
    qualifiedName:
      CSharp: Kount.Ris.ValidationException
      VB: Kount.Ris.ValidationException
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Ris
    source:
      remote:
        path: SDK/Kount/Ris/ValidationException.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: ValidationException
      path: Kount/Ris/ValidationException.cs
      startLine: 15
    summary: "\nValidation Exception.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ValidationException : Exception'
        VB: >-
          Public Class ValidationException

              Inherits Exception
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Ris.ValidationException.#ctor(System.String)
      commentId: M:Kount.Ris.ValidationException.#ctor(System.String)
      language: CSharp
      name:
        CSharp: ValidationException(String)
        VB: ValidationException(String)
      nameWithType:
        CSharp: ValidationException.ValidationException(String)
        VB: ValidationException.ValidationException(String)
      qualifiedName:
        CSharp: Kount.Ris.ValidationException.ValidationException(System.String)
        VB: Kount.Ris.ValidationException.ValidationException(System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/ValidationException.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/ValidationException.cs
        startLine: 21
      summary: "\nCreate an exception with an error message\n"
      example: []
      syntax:
        content:
          CSharp: public ValidationException(string errorMessage)
          VB: Public Sub New(errorMessage As String)
        parameters:
        - id: errorMessage
          type: System.String
          description: Error message.
      overload: Kount.Ris.ValidationException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.ValidationException.#ctor(System.String,Exception)
      commentId: M:Kount.Ris.ValidationException.#ctor(System.String,Exception)
      language: CSharp
      name:
        CSharp: ValidationException(String, Exception)
        VB: ValidationException(String, Exception)
      nameWithType:
        CSharp: ValidationException.ValidationException(String, Exception)
        VB: ValidationException.ValidationException(String, Exception)
      qualifiedName:
        CSharp: Kount.Ris.ValidationException.ValidationException(System.String, Exception)
        VB: Kount.Ris.ValidationException.ValidationException(System.String, Exception)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/ValidationException.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/Ris/ValidationException.cs
        startLine: 30
      summary: "\nCreate an exception with an error message and another exception\n"
      example: []
      syntax:
        content:
          CSharp: public ValidationException(string errorMessage, Exception innerEx)
          VB: Public Sub New(errorMessage As String, innerEx As Exception)
        parameters:
        - id: errorMessage
          type: System.String
          description: Error message.
        - id: innerEx
          type: Exception
          description: Inner exception.
      overload: Kount.Ris.ValidationException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.Ris.ValidationException.ErrorMessage
      commentId: P:Kount.Ris.ValidationException.ErrorMessage
      language: CSharp
      name:
        CSharp: ErrorMessage
        VB: ErrorMessage
      nameWithType:
        CSharp: ValidationException.ErrorMessage
        VB: ValidationException.ErrorMessage
      qualifiedName:
        CSharp: Kount.Ris.ValidationException.ErrorMessage
        VB: Kount.Ris.ValidationException.ErrorMessage
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Ris
      source:
        remote:
          path: SDK/Kount/Ris/ValidationException.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ErrorMessage
        path: Kount/Ris/ValidationException.cs
        startLine: 38
      summary: "\nGets a string of the error message.\n"
      example: []
      syntax:
        content:
          CSharp: public string ErrorMessage { get; }
          VB: Public ReadOnly Property ErrorMessage As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Ris.ValidationException.ErrorMessage*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
- id: Kount.SimpleLogger
  commentId: N:Kount.SimpleLogger
  language: CSharp
  name:
    CSharp: Kount.SimpleLogger
    VB: Kount.SimpleLogger
  nameWithType:
    CSharp: Kount.SimpleLogger
    VB: Kount.SimpleLogger
  qualifiedName:
    CSharp: Kount.SimpleLogger
    VB: Kount.SimpleLogger
  type: Namespace
  assemblies:
  - KountRisSdk
  modifiers: {}
  items:
  - id: Kount.SimpleLogger.File
    commentId: T:Kount.SimpleLogger.File
    language: CSharp
    name:
      CSharp: File
      VB: File
    nameWithType:
      CSharp: File
      VB: File
    qualifiedName:
      CSharp: Kount.SimpleLogger.File
      VB: Kount.SimpleLogger.File
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.SimpleLogger
    source:
      remote:
        path: SDK/Kount/SimpleLogger/File.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: File
      path: Kount/SimpleLogger/File.cs
      startLine: 18
    summary: "\nA simple file logger.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2010 Keynetics Inc <br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class File : object'
        VB: >-
          Public Class File

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.SimpleLogger.File.SdkElapsed
      commentId: P:Kount.SimpleLogger.File.SdkElapsed
      language: CSharp
      name:
        CSharp: SdkElapsed
        VB: SdkElapsed
      nameWithType:
        CSharp: File.SdkElapsed
        VB: File.SdkElapsed
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.SdkElapsed
        VB: Kount.SimpleLogger.File.SdkElapsed
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: SdkElapsed
        path: Kount/SimpleLogger/File.cs
        startLine: 72
      summary: "\nConfigurable property. In `app.config` set setting `LOG.SIMPLE.ELAPSED` to <strong>ON/OFF</strong><br />\nexample: \n<example>`<add key=\"LOG.SIMPLE.ELAPSED\" value=\"ON\"></add>`</example><br />\nIn case is not set is `OFF`.\n"
      example: []
      syntax:
        content:
          CSharp: public string SdkElapsed { get; }
          VB: Public ReadOnly Property SdkElapsed As String
        parameters: []
        return:
          type: System.String
      overload: Kount.SimpleLogger.File.SdkElapsed*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Kount.SimpleLogger.File.#ctor(System.String)
      commentId: M:Kount.SimpleLogger.File.#ctor(System.String)
      language: CSharp
      name:
        CSharp: File(String)
        VB: File(String)
      nameWithType:
        CSharp: File.File(String)
        VB: File.File(String)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.File(System.String)
        VB: Kount.SimpleLogger.File.File(System.String)
      type: Constructor
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: .ctor
        path: Kount/SimpleLogger/File.cs
        startLine: 78
      summary: "\nConstructor for file logger.\n"
      example: []
      syntax:
        content:
          CSharp: public File(string name)
          VB: Public Sub New(name As String)
        parameters:
        - id: name
          type: System.String
          description: Name of the logger
      overload: Kount.SimpleLogger.File.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Debug(System.String)
      commentId: M:Kount.SimpleLogger.File.Debug(System.String)
      language: CSharp
      name:
        CSharp: Debug(String)
        VB: Debug(String)
      nameWithType:
        CSharp: File.Debug(String)
        VB: File.Debug(String)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Debug(System.String)
        VB: Kount.SimpleLogger.File.Debug(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Debug
        path: Kount/SimpleLogger/File.cs
        startLine: 106
      summary: "\nLog a debug level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Debug(string message)
          VB: Public Sub Debug(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.SimpleLogger.File.Debug*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Debug(System.String,Exception)
      commentId: M:Kount.SimpleLogger.File.Debug(System.String,Exception)
      language: CSharp
      name:
        CSharp: Debug(String, Exception)
        VB: Debug(String, Exception)
      nameWithType:
        CSharp: File.Debug(String, Exception)
        VB: File.Debug(String, Exception)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Debug(System.String, Exception)
        VB: Kount.SimpleLogger.File.Debug(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Debug
        path: Kount/SimpleLogger/File.cs
        startLine: 116
      summary: "\nLog a debug level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Debug(string message, Exception e)
          VB: Public Sub Debug(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Mesage to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.SimpleLogger.File.Debug*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Info(System.String)
      commentId: M:Kount.SimpleLogger.File.Info(System.String)
      language: CSharp
      name:
        CSharp: Info(String)
        VB: Info(String)
      nameWithType:
        CSharp: File.Info(String)
        VB: File.Info(String)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Info(System.String)
        VB: Kount.SimpleLogger.File.Info(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Info
        path: Kount/SimpleLogger/File.cs
        startLine: 125
      summary: "\nLog an info level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Info(string message)
          VB: Public Sub Info(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.SimpleLogger.File.Info*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Info(System.String,Exception)
      commentId: M:Kount.SimpleLogger.File.Info(System.String,Exception)
      language: CSharp
      name:
        CSharp: Info(String, Exception)
        VB: Info(String, Exception)
      nameWithType:
        CSharp: File.Info(String, Exception)
        VB: File.Info(String, Exception)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Info(System.String, Exception)
        VB: Kount.SimpleLogger.File.Info(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Info
        path: Kount/SimpleLogger/File.cs
        startLine: 135
      summary: "\nLog an info level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Info(string message, Exception e)
          VB: Public Sub Info(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Mesage to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.SimpleLogger.File.Info*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Warn(System.String)
      commentId: M:Kount.SimpleLogger.File.Warn(System.String)
      language: CSharp
      name:
        CSharp: Warn(String)
        VB: Warn(String)
      nameWithType:
        CSharp: File.Warn(String)
        VB: File.Warn(String)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Warn(System.String)
        VB: Kount.SimpleLogger.File.Warn(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Warn
        path: Kount/SimpleLogger/File.cs
        startLine: 144
      summary: "\nLog a warn level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Warn(string message)
          VB: Public Sub Warn(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.SimpleLogger.File.Warn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Warn(System.String,Exception)
      commentId: M:Kount.SimpleLogger.File.Warn(System.String,Exception)
      language: CSharp
      name:
        CSharp: Warn(String, Exception)
        VB: Warn(String, Exception)
      nameWithType:
        CSharp: File.Warn(String, Exception)
        VB: File.Warn(String, Exception)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Warn(System.String, Exception)
        VB: Kount.SimpleLogger.File.Warn(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Warn
        path: Kount/SimpleLogger/File.cs
        startLine: 154
      summary: "\nLog a warn level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Warn(string message, Exception e)
          VB: Public Sub Warn(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Mesage to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.SimpleLogger.File.Warn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Error(System.String)
      commentId: M:Kount.SimpleLogger.File.Error(System.String)
      language: CSharp
      name:
        CSharp: Error(String)
        VB: Error(String)
      nameWithType:
        CSharp: File.Error(String)
        VB: File.Error(String)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Error(System.String)
        VB: Kount.SimpleLogger.File.Error(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Error
        path: Kount/SimpleLogger/File.cs
        startLine: 163
      summary: "\nLog an error level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Error(string message)
          VB: Public Sub Error(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.SimpleLogger.File.Error*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Error(System.String,Exception)
      commentId: M:Kount.SimpleLogger.File.Error(System.String,Exception)
      language: CSharp
      name:
        CSharp: Error(String, Exception)
        VB: Error(String, Exception)
      nameWithType:
        CSharp: File.Error(String, Exception)
        VB: File.Error(String, Exception)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Error(System.String, Exception)
        VB: Kount.SimpleLogger.File.Error(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Error
        path: Kount/SimpleLogger/File.cs
        startLine: 173
      summary: "\nLog an error level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Error(string message, Exception e)
          VB: Public Sub Error(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Mesage to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.SimpleLogger.File.Error*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Fatal(System.String)
      commentId: M:Kount.SimpleLogger.File.Fatal(System.String)
      language: CSharp
      name:
        CSharp: Fatal(String)
        VB: Fatal(String)
      nameWithType:
        CSharp: File.Fatal(String)
        VB: File.Fatal(String)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Fatal(System.String)
        VB: Kount.SimpleLogger.File.Fatal(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Fatal
        path: Kount/SimpleLogger/File.cs
        startLine: 182
      summary: "\nLog a fatal level message.\n"
      example: []
      syntax:
        content:
          CSharp: public void Fatal(string message)
          VB: Public Sub Fatal(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.SimpleLogger.File.Fatal*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.Fatal(System.String,Exception)
      commentId: M:Kount.SimpleLogger.File.Fatal(System.String,Exception)
      language: CSharp
      name:
        CSharp: Fatal(String, Exception)
        VB: Fatal(String, Exception)
      nameWithType:
        CSharp: File.Fatal(String, Exception)
        VB: File.Fatal(String, Exception)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Fatal(System.String, Exception)
        VB: Kount.SimpleLogger.File.Fatal(System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Fatal
        path: Kount/SimpleLogger/File.cs
        startLine: 192
      summary: "\nLog a fatal level message and exception.\n"
      example: []
      syntax:
        content:
          CSharp: public void Fatal(string message, Exception e)
          VB: Public Sub Fatal(message As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Mesage to log
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.SimpleLogger.File.Fatal*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Kount.SimpleLogger.File.ProcessMessage(System.String,System.String,Exception)
      commentId: M:Kount.SimpleLogger.File.ProcessMessage(System.String,System.String,Exception)
      language: CSharp
      name:
        CSharp: ProcessMessage(String, String, Exception)
        VB: ProcessMessage(String, String, Exception)
      nameWithType:
        CSharp: File.ProcessMessage(String, String, Exception)
        VB: File.ProcessMessage(String, String, Exception)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.ProcessMessage(System.String, System.String, Exception)
        VB: Kount.SimpleLogger.File.ProcessMessage(System.String, System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ProcessMessage
        path: Kount/SimpleLogger/File.cs
        startLine: 204
      summary: "\nProcess a log message, by determining if it should be logged,\nformatting the message, and logging it.\n"
      example: []
      syntax:
        content:
          CSharp: protected void ProcessMessage(string message, string level, Exception e)
          VB: Protected Sub ProcessMessage(message As String, level As String, e As Exception)
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: level
          type: System.String
          description: Logging level
        - id: e
          type: Exception
          description: Exception to log
      overload: Kount.SimpleLogger.File.ProcessMessage*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Kount.SimpleLogger.File.FormatMessage(System.String,System.String,Exception)
      commentId: M:Kount.SimpleLogger.File.FormatMessage(System.String,System.String,Exception)
      language: CSharp
      name:
        CSharp: FormatMessage(String, String, Exception)
        VB: FormatMessage(String, String, Exception)
      nameWithType:
        CSharp: File.FormatMessage(String, String, Exception)
        VB: File.FormatMessage(String, String, Exception)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.FormatMessage(System.String, System.String, Exception)
        VB: Kount.SimpleLogger.File.FormatMessage(System.String, System.String, Exception)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: FormatMessage
        path: Kount/SimpleLogger/File.cs
        startLine: 223
      summary: "\nFormat a message so it can be logged\n"
      example: []
      syntax:
        content:
          CSharp: protected string FormatMessage(string message, string level, Exception e)
          VB: Protected Function FormatMessage(message As String, level As String, e As Exception) As String
        parameters:
        - id: message
          type: System.String
          description: Message to log
        - id: level
          type: System.String
          description: Logging level
        - id: e
          type: Exception
          description: Exception to log
        return:
          type: System.String
          description: Formatted message
      overload: Kount.SimpleLogger.File.FormatMessage*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Kount.SimpleLogger.File.Log(System.String)
      commentId: M:Kount.SimpleLogger.File.Log(System.String)
      language: CSharp
      name:
        CSharp: Log(String)
        VB: Log(String)
      nameWithType:
        CSharp: File.Log(String)
        VB: File.Log(String)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.Log(System.String)
        VB: Kount.SimpleLogger.File.Log(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Log
        path: Kount/SimpleLogger/File.cs
        startLine: 247
      summary: "\nLog a message.\n"
      example: []
      syntax:
        content:
          CSharp: protected void Log(string message)
          VB: Protected Sub Log(message As String)
        parameters:
        - id: message
          type: System.String
          description: Message to log
      overload: Kount.SimpleLogger.File.Log*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Kount.SimpleLogger.File.IsLoggable(System.String)
      commentId: M:Kount.SimpleLogger.File.IsLoggable(System.String)
      language: CSharp
      name:
        CSharp: IsLoggable(String)
        VB: IsLoggable(String)
      nameWithType:
        CSharp: File.IsLoggable(String)
        VB: File.IsLoggable(String)
      qualifiedName:
        CSharp: Kount.SimpleLogger.File.IsLoggable(System.String)
        VB: Kount.SimpleLogger.File.IsLoggable(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.SimpleLogger
      source:
        remote:
          path: SDK/Kount/SimpleLogger/File.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: IsLoggable
        path: Kount/SimpleLogger/File.cs
        startLine: 266
      summary: "\nDetermine if a message should be logged based on the logging\nlevel defined in the app configuration.\n"
      example: []
      syntax:
        content:
          CSharp: protected bool IsLoggable(string level)
          VB: Protected Function IsLoggable(level As String) As Boolean
        parameters:
        - id: level
          type: System.String
          description: Logging level of the message
        return:
          type: System.Boolean
          description: True if the message should be logged, false otherwise
      overload: Kount.SimpleLogger.File.IsLoggable*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: Kount.Util
  commentId: N:Kount.Util
  language: CSharp
  name:
    CSharp: Kount.Util
    VB: Kount.Util
  nameWithType:
    CSharp: Kount.Util
    VB: Kount.Util
  qualifiedName:
    CSharp: Kount.Util
    VB: Kount.Util
  type: Namespace
  assemblies:
  - KountRisSdk
  modifiers: {}
  items:
  - id: Kount.Util.Base85
    commentId: T:Kount.Util.Base85
    language: CSharp
    name:
      CSharp: Base85
      VB: Base85
    nameWithType:
      CSharp: Base85
      VB: Base85
    qualifiedName:
      CSharp: Kount.Util.Base85
      VB: Kount.Util.Base85
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Util
    source:
      remote:
        path: SDK/Kount/Util/Base85.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: Base85
      path: Kount/Util/Base85.cs
      startLine: 15
    summary: "\nC# implementation of BASE85 encoding. \nBased on C code from http://www.stillhq.com/cgi-bin/cvsweb/BASE85/\n"
    example: []
    syntax:
      content:
        CSharp: 'public static class Base85 : object'
        VB: >-
          Public Module Base85

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Kount.Util.Base85.LineLength
      commentId: F:Kount.Util.Base85.LineLength
      language: CSharp
      name:
        CSharp: LineLength
        VB: LineLength
      nameWithType:
        CSharp: Base85.LineLength
        VB: Base85.LineLength
      qualifiedName:
        CSharp: Kount.Util.Base85.LineLength
        VB: Kount.Util.Base85.LineLength
      type: Field
      assemblies:
      - KountRisSdk
      namespace: Kount.Util
      source:
        remote:
          path: SDK/Kount/Util/Base85.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: LineLength
        path: Kount/Util/Base85.cs
        startLine: 21
      summary: "\nMaximum line length for encoded BASE85 string; \nset to zero for one unbroken line.\n"
      example: []
      syntax:
        content:
          CSharp: public static int LineLength
          VB: Public Shared LineLength As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Kount.Util.Base85.Decode(System.String)
      commentId: M:Kount.Util.Base85.Decode(System.String)
      language: CSharp
      name:
        CSharp: Decode(String)
        VB: Decode(String)
      nameWithType:
        CSharp: Base85.Decode(String)
        VB: Base85.Decode(String)
      qualifiedName:
        CSharp: Kount.Util.Base85.Decode(System.String)
        VB: Kount.Util.Base85.Decode(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Util
      source:
        remote:
          path: SDK/Kount/Util/Base85.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Decode
        path: Kount/Util/Base85.cs
        startLine: 39
      summary: "\nDecodes an BASE85 encoded string into the original binary data\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] Decode(string s)
          VB: Public Shared Function Decode(s As String) As Byte()
        parameters:
        - id: s
          type: System.String
          description: BASE85 encoded string
        return:
          type: System.Byte[]
          description: byte array of decoded binary data
      overload: Kount.Util.Base85.Decode*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Kount.Util.Base85.Encode(System.Byte[])
      commentId: M:Kount.Util.Base85.Encode(System.Byte[])
      language: CSharp
      name:
        CSharp: Encode(Byte[])
        VB: Encode(Byte())
      nameWithType:
        CSharp: Base85.Encode(Byte[])
        VB: Base85.Encode(Byte())
      qualifiedName:
        CSharp: Kount.Util.Base85.Encode(System.Byte[])
        VB: Kount.Util.Base85.Encode(System.Byte())
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Util
      source:
        remote:
          path: SDK/Kount/Util/Base85.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Encode
        path: Kount/Util/Base85.cs
        startLine: 121
      summary: "\nEncodes binary data into a plaintext BASE85 format string\n"
      example: []
      syntax:
        content:
          CSharp: public static string Encode(byte[] ba)
          VB: Public Shared Function Encode(ba As Byte()) As String
        parameters:
        - id: ba
          type: System.Byte[]
          description: binary data to encode
        return:
          type: System.String
          description: BASE85 encoded string
      overload: Kount.Util.Base85.Encode*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Kount.Util.Khash
    commentId: T:Kount.Util.Khash
    language: CSharp
    name:
      CSharp: Khash
      VB: Khash
    nameWithType:
      CSharp: Khash
      VB: Khash
    qualifiedName:
      CSharp: Kount.Util.Khash
      VB: Kount.Util.Khash
    type: Class
    assemblies:
    - KountRisSdk
    namespace: Kount.Util
    source:
      remote:
        path: SDK/Kount/Util/Khash.cs
        branch: master
        repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
      id: Khash
      path: Kount/Util/Khash.cs
      startLine: 17
    summary: "\nClass for creating Kount RIS KHASH encoding payment tokens.<br />\n<strong>Author:</strong> Kount <a>custserv@kount.com</a>;<br />\n<strong>Version:</strong> 7.0.0. <br />\n<strong>Copyright:</strong> 2011 Kount Inc. All Rights Reserved.<br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Khash : object'
        VB: >-
          Public Class Khash

              Inherits Object
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Kount.Util.Khash.ConfigKey
      commentId: P:Kount.Util.Khash.ConfigKey
      language: CSharp
      name:
        CSharp: ConfigKey
        VB: ConfigKey
      nameWithType:
        CSharp: Khash.ConfigKey
        VB: Khash.ConfigKey
      qualifiedName:
        CSharp: Kount.Util.Khash.ConfigKey
        VB: Kount.Util.Khash.ConfigKey
      type: Property
      assemblies:
      - KountRisSdk
      namespace: Kount.Util
      source:
        remote:
          path: SDK/Kount/Util/Khash.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: ConfigKey
        path: Kount/Util/Khash.cs
        startLine: 22
      summary: "\nGetting or Setting Config Key used in hashing method\n"
      example: []
      syntax:
        content:
          CSharp: public static string ConfigKey { get; set; }
          VB: Public Shared Property ConfigKey As String
        parameters: []
        return:
          type: System.String
      overload: Kount.Util.Khash.ConfigKey*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: Kount.Util.Khash.HashPaymentToken(System.String)
      commentId: M:Kount.Util.Khash.HashPaymentToken(System.String)
      language: CSharp
      name:
        CSharp: HashPaymentToken(String)
        VB: HashPaymentToken(String)
      nameWithType:
        CSharp: Khash.HashPaymentToken(String)
        VB: Khash.HashPaymentToken(String)
      qualifiedName:
        CSharp: Kount.Util.Khash.HashPaymentToken(System.String)
        VB: Kount.Util.Khash.HashPaymentToken(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Util
      source:
        remote:
          path: SDK/Kount/Util/Khash.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: HashPaymentToken
        path: Kount/Util/Khash.cs
        startLine: 32
      summary: "\nCreate a Kount hash of a provided payment token. Payment tokens\nthat can be hashed via this method include: credit card numbers,\nPaypal payment IDs, Check numbers, Google Checkout IDs, Bill Me\nLater IDs, and Green Dot MoneyPak IDs.\n"
      example: []
      syntax:
        content:
          CSharp: public static string HashPaymentToken(string token)
          VB: Public Shared Function HashPaymentToken(token As String) As String
        parameters:
        - id: token
          type: System.String
          description: String to be hashed
        return:
          type: System.String
          description: String Hashed
      overload: Kount.Util.Khash.HashPaymentToken*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Kount.Util.Khash.HashGiftCard(System.Int32,System.String)
      commentId: M:Kount.Util.Khash.HashGiftCard(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: HashGiftCard(Int32, String)
        VB: HashGiftCard(Int32, String)
      nameWithType:
        CSharp: Khash.HashGiftCard(Int32, String)
        VB: Khash.HashGiftCard(Int32, String)
      qualifiedName:
        CSharp: Kount.Util.Khash.HashGiftCard(System.Int32, System.String)
        VB: Kount.Util.Khash.HashGiftCard(System.Int32, System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Util
      source:
        remote:
          path: SDK/Kount/Util/Khash.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: HashGiftCard
        path: Kount/Util/Khash.cs
        startLine: 45
      summary: "\nHash a gift card payment token using the Kount hashing algorithm.\n"
      example: []
      syntax:
        content:
          CSharp: public static string HashGiftCard(int merchantId, string cardNumber)
          VB: Public Shared Function HashGiftCard(merchantId As Integer, cardNumber As String) As String
        parameters:
        - id: merchantId
          type: System.Int32
          description: Merchant ID number
        - id: cardNumber
          type: System.String
          description: Card number to be hashed
        return:
          type: System.String
          description: String Hashed
      overload: Kount.Util.Khash.HashGiftCard*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Kount.Util.Khash.Hash(System.String)
      commentId: M:Kount.Util.Khash.Hash(System.String)
      language: CSharp
      name:
        CSharp: Hash(String)
        VB: Hash(String)
      nameWithType:
        CSharp: Khash.Hash(String)
        VB: Khash.Hash(String)
      qualifiedName:
        CSharp: Kount.Util.Khash.Hash(System.String)
        VB: Kount.Util.Khash.Hash(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Util
      source:
        remote:
          path: SDK/Kount/Util/Khash.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: Hash
        path: Kount/Util/Khash.cs
        startLine: 59
      summary: "\nCompute a Kount hash of a given plain text string.\n\nPreserves the first six characters of the input\nso that hasked tokens can be categorized\nby Bank Idenfication Number (BIN).\n"
      example: []
      syntax:
        content:
          CSharp: public static string Hash(string plainText)
          VB: Public Shared Function Hash(plainText As String) As String
        parameters:
        - id: plainText
          type: System.String
          description: String to be hashed
        return:
          type: System.String
          description: String Hashed
      overload: Kount.Util.Khash.Hash*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Kount.Util.Khash.GetBase85ConfigKey(System.String)
      commentId: M:Kount.Util.Khash.GetBase85ConfigKey(System.String)
      language: CSharp
      name:
        CSharp: GetBase85ConfigKey(String)
        VB: GetBase85ConfigKey(String)
      nameWithType:
        CSharp: Khash.GetBase85ConfigKey(String)
        VB: Khash.GetBase85ConfigKey(String)
      qualifiedName:
        CSharp: Kount.Util.Khash.GetBase85ConfigKey(System.String)
        VB: Kount.Util.Khash.GetBase85ConfigKey(System.String)
      type: Method
      assemblies:
      - KountRisSdk
      namespace: Kount.Util
      source:
        remote:
          path: SDK/Kount/Util/Khash.cs
          branch: master
          repo: https://github.com/PrashanthBasava/Travis-Ris-Test-01.git
        id: GetBase85ConfigKey
        path: Kount/Util/Khash.cs
        startLine: 88
      summary: "\nGet Base85 encoded ConfigKey\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetBase85ConfigKey(string key)
          VB: Public Shared Function GetBase85ConfigKey(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
          description: encoded config key
      overload: Kount.Util.Khash.GetBase85ConfigKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
  Kount.Enums:
    name:
      CSharp:
      - name: Kount.Enums
        nameWithType: Kount.Enums
        qualifiedName: Kount.Enums
      VB:
      - name: Kount.Enums
        nameWithType: Kount.Enums
        qualifiedName: Kount.Enums
    isDefinition: true
    commentId: N:Kount.Enums
  Kount.Enums.PaymentTypes:
    name:
      CSharp:
      - id: Kount.Enums.PaymentTypes
        name: PaymentTypes
        nameWithType: PaymentTypes
        qualifiedName: Kount.Enums.PaymentTypes
      VB:
      - id: Kount.Enums.PaymentTypes
        name: PaymentTypes
        nameWithType: PaymentTypes
        qualifiedName: Kount.Enums.PaymentTypes
    isDefinition: true
    parent: Kount.Enums
    commentId: T:Kount.Enums.PaymentTypes
  Kount.Enums.EnumHelper.GetValueAsString*:
    name:
      CSharp:
      - id: Kount.Enums.EnumHelper.GetValueAsString*
        name: GetValueAsString
        nameWithType: EnumHelper.GetValueAsString
        qualifiedName: Kount.Enums.EnumHelper.GetValueAsString
      VB:
      - id: Kount.Enums.EnumHelper.GetValueAsString*
        name: GetValueAsString
        nameWithType: EnumHelper.GetValueAsString
        qualifiedName: Kount.Enums.EnumHelper.GetValueAsString
    isDefinition: true
    commentId: Overload:Kount.Enums.EnumHelper.GetValueAsString
  Kount.Enums.EnumHelper:
    name:
      CSharp:
      - id: Kount.Enums.EnumHelper
        name: EnumHelper
        nameWithType: EnumHelper
        qualifiedName: Kount.Enums.EnumHelper
      VB:
      - id: Kount.Enums.EnumHelper
        name: EnumHelper
        nameWithType: EnumHelper
        qualifiedName: Kount.Enums.EnumHelper
    isDefinition: true
    parent: Kount.Enums
    commentId: T:Kount.Enums.EnumHelper
  Kount.Enums.InquiryTypes:
    name:
      CSharp:
      - id: Kount.Enums.InquiryTypes
        name: InquiryTypes
        nameWithType: InquiryTypes
        qualifiedName: Kount.Enums.InquiryTypes
      VB:
      - id: Kount.Enums.InquiryTypes
        name: InquiryTypes
        nameWithType: InquiryTypes
        qualifiedName: Kount.Enums.InquiryTypes
    isDefinition: true
    parent: Kount.Enums
    commentId: T:Kount.Enums.InquiryTypes
  Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes):
    name:
      CSharp:
      - id: Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes)
        name: GetValueAsString
        nameWithType: EnumHelper.GetValueAsString
        qualifiedName: Kount.Enums.EnumHelper.GetValueAsString
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Kount.Enums.PaymentTypes
        name: PaymentTypes
        nameWithType: PaymentTypes
        qualifiedName: Kount.Enums.PaymentTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes)
        name: GetValueAsString
        nameWithType: EnumHelper.GetValueAsString
        qualifiedName: Kount.Enums.EnumHelper.GetValueAsString
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Kount.Enums.PaymentTypes
        name: PaymentTypes
        nameWithType: PaymentTypes
        qualifiedName: Kount.Enums.PaymentTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes)
  Kount.Enums.PaymentTypes.Kount.Enums.EnumHelper.GetValueAsString:
    name:
      CSharp:
      - id: Kount.Enums.EnumHelper.GetValueAsString
        name: GetValueAsString
        nameWithType: EnumHelper.GetValueAsString
        qualifiedName: Kount.Enums.EnumHelper.GetValueAsString
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Enums.EnumHelper.GetValueAsString
        name: GetValueAsString
        nameWithType: EnumHelper.GetValueAsString
        qualifiedName: Kount.Enums.EnumHelper.GetValueAsString
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes)
    parent: Kount.Enums.EnumHelper
    commentId: M:Kount.Enums.EnumHelper.GetValueAsString(Kount.Enums.PaymentTypes)
  Kount.Enums.UpdateTypes:
    name:
      CSharp:
      - id: Kount.Enums.UpdateTypes
        name: UpdateTypes
        nameWithType: UpdateTypes
        qualifiedName: Kount.Enums.UpdateTypes
      VB:
      - id: Kount.Enums.UpdateTypes
        name: UpdateTypes
        nameWithType: UpdateTypes
        qualifiedName: Kount.Enums.UpdateTypes
    isDefinition: true
    parent: Kount.Enums
    commentId: T:Kount.Enums.UpdateTypes
  Kount.Log.ExampleClient.Main*:
    name:
      CSharp:
      - id: Kount.Log.ExampleClient.Main*
        name: Main
        nameWithType: ExampleClient.Main
        qualifiedName: Kount.Log.ExampleClient.Main
      VB:
      - id: Kount.Log.ExampleClient.Main*
        name: Main
        nameWithType: ExampleClient.Main
        qualifiedName: Kount.Log.ExampleClient.Main
    isDefinition: true
    commentId: Overload:Kount.Log.ExampleClient.Main
  Kount.Log.ExampleClient:
    name:
      CSharp:
      - id: Kount.Log.ExampleClient
        name: ExampleClient
        nameWithType: ExampleClient
        qualifiedName: Kount.Log.ExampleClient
      VB:
      - id: Kount.Log.ExampleClient
        name: ExampleClient
        nameWithType: ExampleClient
        qualifiedName: Kount.Log.ExampleClient
    isDefinition: true
    commentId: T:Kount.Log.ExampleClient
  Kount.Log:
    name:
      CSharp:
      - name: Kount.Log
        nameWithType: Kount.Log
        qualifiedName: Kount.Log
      VB:
      - name: Kount.Log
        nameWithType: Kount.Log
        qualifiedName: Kount.Log
    isDefinition: true
    commentId: N:Kount.Log
  Kount.Log.Binding.ILogger.Debug*:
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Debug*
        name: Debug
        nameWithType: ILogger.Debug
        qualifiedName: Kount.Log.Binding.ILogger.Debug
      VB:
      - id: Kount.Log.Binding.ILogger.Debug*
        name: Debug
        nameWithType: ILogger.Debug
        qualifiedName: Kount.Log.Binding.ILogger.Debug
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.ILogger.Debug
  Exception:
    name:
      CSharp:
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      VB:
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
    isDefinition: true
  Kount.Log.Binding.ILogger.Info*:
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Info*
        name: Info
        nameWithType: ILogger.Info
        qualifiedName: Kount.Log.Binding.ILogger.Info
      VB:
      - id: Kount.Log.Binding.ILogger.Info*
        name: Info
        nameWithType: ILogger.Info
        qualifiedName: Kount.Log.Binding.ILogger.Info
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.ILogger.Info
  Kount.Log.Binding.ILogger.Warn*:
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Warn*
        name: Warn
        nameWithType: ILogger.Warn
        qualifiedName: Kount.Log.Binding.ILogger.Warn
      VB:
      - id: Kount.Log.Binding.ILogger.Warn*
        name: Warn
        nameWithType: ILogger.Warn
        qualifiedName: Kount.Log.Binding.ILogger.Warn
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.ILogger.Warn
  Kount.Log.Binding.ILogger.Error*:
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Error*
        name: Error
        nameWithType: ILogger.Error
        qualifiedName: Kount.Log.Binding.ILogger.Error
      VB:
      - id: Kount.Log.Binding.ILogger.Error*
        name: Error
        nameWithType: ILogger.Error
        qualifiedName: Kount.Log.Binding.ILogger.Error
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.ILogger.Error
  Kount.Log.Binding.ILogger.Fatal*:
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Fatal*
        name: Fatal
        nameWithType: ILogger.Fatal
        qualifiedName: Kount.Log.Binding.ILogger.Fatal
      VB:
      - id: Kount.Log.Binding.ILogger.Fatal*
        name: Fatal
        nameWithType: ILogger.Fatal
        qualifiedName: Kount.Log.Binding.ILogger.Fatal
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.ILogger.Fatal
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
  Kount.Log.Binding.ILogger.MeasureElapsed*:
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.MeasureElapsed*
        name: MeasureElapsed
        nameWithType: ILogger.MeasureElapsed
        qualifiedName: Kount.Log.Binding.ILogger.MeasureElapsed
      VB:
      - id: Kount.Log.Binding.ILogger.MeasureElapsed*
        name: MeasureElapsed
        nameWithType: ILogger.MeasureElapsed
        qualifiedName: Kount.Log.Binding.ILogger.MeasureElapsed
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.ILogger.MeasureElapsed
  Kount.Log.Binding.ILogger:
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Kount.Log.Binding.ILogger
      VB:
      - id: Kount.Log.Binding.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Kount.Log.Binding.ILogger
    isDefinition: true
    parent: Kount.Log.Binding
    commentId: T:Kount.Log.Binding.ILogger
  Kount.Log.Binding:
    name:
      CSharp:
      - name: Kount.Log.Binding
        nameWithType: Kount.Log.Binding
        qualifiedName: Kount.Log.Binding
      VB:
      - name: Kount.Log.Binding
        nameWithType: Kount.Log.Binding
        qualifiedName: Kount.Log.Binding
    isDefinition: true
    commentId: N:Kount.Log.Binding
  Kount.Log.Binding.NopLogger.MeasureElapsed*:
    name:
      CSharp:
      - id: Kount.Log.Binding.NopLogger.MeasureElapsed*
        name: MeasureElapsed
        nameWithType: NopLogger.MeasureElapsed
        qualifiedName: Kount.Log.Binding.NopLogger.MeasureElapsed
      VB:
      - id: Kount.Log.Binding.NopLogger.MeasureElapsed*
        name: MeasureElapsed
        nameWithType: NopLogger.MeasureElapsed
        qualifiedName: Kount.Log.Binding.NopLogger.MeasureElapsed
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.NopLogger.MeasureElapsed
  Kount.Log.Binding.ILogger.MeasureElapsed:
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.MeasureElapsed
        name: MeasureElapsed
        nameWithType: ILogger.MeasureElapsed
        qualifiedName: Kount.Log.Binding.ILogger.MeasureElapsed
      VB:
      - id: Kount.Log.Binding.ILogger.MeasureElapsed
        name: MeasureElapsed
        nameWithType: ILogger.MeasureElapsed
        qualifiedName: Kount.Log.Binding.ILogger.MeasureElapsed
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: P:Kount.Log.Binding.ILogger.MeasureElapsed
  Kount.Log.Binding.NopLogger.#ctor*:
    name:
      CSharp:
      - id: Kount.Log.Binding.NopLogger.#ctor*
        name: NopLogger
        nameWithType: NopLogger.NopLogger
        qualifiedName: Kount.Log.Binding.NopLogger.NopLogger
      VB:
      - id: Kount.Log.Binding.NopLogger.#ctor*
        name: NopLogger
        nameWithType: NopLogger.NopLogger
        qualifiedName: Kount.Log.Binding.NopLogger.NopLogger
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.NopLogger.#ctor
  Kount.Log.Binding.NopLogger.Debug*:
    name:
      CSharp:
      - id: Kount.Log.Binding.NopLogger.Debug*
        name: Debug
        nameWithType: NopLogger.Debug
        qualifiedName: Kount.Log.Binding.NopLogger.Debug
      VB:
      - id: Kount.Log.Binding.NopLogger.Debug*
        name: Debug
        nameWithType: NopLogger.Debug
        qualifiedName: Kount.Log.Binding.NopLogger.Debug
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.NopLogger.Debug
  Kount.Log.Binding.ILogger.Debug(System.String):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Debug(System.String)
        name: Debug
        nameWithType: ILogger.Debug
        qualifiedName: Kount.Log.Binding.ILogger.Debug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Debug(System.String)
        name: Debug
        nameWithType: ILogger.Debug
        qualifiedName: Kount.Log.Binding.ILogger.Debug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Debug(System.String)
  Kount.Log.Binding.ILogger.Debug(System.String,Exception):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Debug(System.String,Exception)
        name: Debug
        nameWithType: ILogger.Debug
        qualifiedName: Kount.Log.Binding.ILogger.Debug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Debug(System.String,Exception)
        name: Debug
        nameWithType: ILogger.Debug
        qualifiedName: Kount.Log.Binding.ILogger.Debug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Debug(System.String,Exception)
  Kount.Log.Binding.NopLogger.Info*:
    name:
      CSharp:
      - id: Kount.Log.Binding.NopLogger.Info*
        name: Info
        nameWithType: NopLogger.Info
        qualifiedName: Kount.Log.Binding.NopLogger.Info
      VB:
      - id: Kount.Log.Binding.NopLogger.Info*
        name: Info
        nameWithType: NopLogger.Info
        qualifiedName: Kount.Log.Binding.NopLogger.Info
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.NopLogger.Info
  Kount.Log.Binding.ILogger.Info(System.String):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Info(System.String)
        name: Info
        nameWithType: ILogger.Info
        qualifiedName: Kount.Log.Binding.ILogger.Info
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Info(System.String)
        name: Info
        nameWithType: ILogger.Info
        qualifiedName: Kount.Log.Binding.ILogger.Info
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Info(System.String)
  Kount.Log.Binding.ILogger.Info(System.String,Exception):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Info(System.String,Exception)
        name: Info
        nameWithType: ILogger.Info
        qualifiedName: Kount.Log.Binding.ILogger.Info
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Info(System.String,Exception)
        name: Info
        nameWithType: ILogger.Info
        qualifiedName: Kount.Log.Binding.ILogger.Info
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Info(System.String,Exception)
  Kount.Log.Binding.NopLogger.Warn*:
    name:
      CSharp:
      - id: Kount.Log.Binding.NopLogger.Warn*
        name: Warn
        nameWithType: NopLogger.Warn
        qualifiedName: Kount.Log.Binding.NopLogger.Warn
      VB:
      - id: Kount.Log.Binding.NopLogger.Warn*
        name: Warn
        nameWithType: NopLogger.Warn
        qualifiedName: Kount.Log.Binding.NopLogger.Warn
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.NopLogger.Warn
  Kount.Log.Binding.ILogger.Warn(System.String):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Warn(System.String)
        name: Warn
        nameWithType: ILogger.Warn
        qualifiedName: Kount.Log.Binding.ILogger.Warn
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Warn(System.String)
        name: Warn
        nameWithType: ILogger.Warn
        qualifiedName: Kount.Log.Binding.ILogger.Warn
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Warn(System.String)
  Kount.Log.Binding.ILogger.Warn(System.String,Exception):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Warn(System.String,Exception)
        name: Warn
        nameWithType: ILogger.Warn
        qualifiedName: Kount.Log.Binding.ILogger.Warn
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Warn(System.String,Exception)
        name: Warn
        nameWithType: ILogger.Warn
        qualifiedName: Kount.Log.Binding.ILogger.Warn
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Warn(System.String,Exception)
  Kount.Log.Binding.NopLogger.Error*:
    name:
      CSharp:
      - id: Kount.Log.Binding.NopLogger.Error*
        name: Error
        nameWithType: NopLogger.Error
        qualifiedName: Kount.Log.Binding.NopLogger.Error
      VB:
      - id: Kount.Log.Binding.NopLogger.Error*
        name: Error
        nameWithType: NopLogger.Error
        qualifiedName: Kount.Log.Binding.NopLogger.Error
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.NopLogger.Error
  Kount.Log.Binding.ILogger.Error(System.String):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Error(System.String)
        name: Error
        nameWithType: ILogger.Error
        qualifiedName: Kount.Log.Binding.ILogger.Error
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Error(System.String)
        name: Error
        nameWithType: ILogger.Error
        qualifiedName: Kount.Log.Binding.ILogger.Error
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Error(System.String)
  Kount.Log.Binding.ILogger.Error(System.String,Exception):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Error(System.String,Exception)
        name: Error
        nameWithType: ILogger.Error
        qualifiedName: Kount.Log.Binding.ILogger.Error
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Error(System.String,Exception)
        name: Error
        nameWithType: ILogger.Error
        qualifiedName: Kount.Log.Binding.ILogger.Error
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Error(System.String,Exception)
  Kount.Log.Binding.NopLogger.Fatal*:
    name:
      CSharp:
      - id: Kount.Log.Binding.NopLogger.Fatal*
        name: Fatal
        nameWithType: NopLogger.Fatal
        qualifiedName: Kount.Log.Binding.NopLogger.Fatal
      VB:
      - id: Kount.Log.Binding.NopLogger.Fatal*
        name: Fatal
        nameWithType: NopLogger.Fatal
        qualifiedName: Kount.Log.Binding.NopLogger.Fatal
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.NopLogger.Fatal
  Kount.Log.Binding.ILogger.Fatal(System.String):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Fatal(System.String)
        name: Fatal
        nameWithType: ILogger.Fatal
        qualifiedName: Kount.Log.Binding.ILogger.Fatal
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Fatal(System.String)
        name: Fatal
        nameWithType: ILogger.Fatal
        qualifiedName: Kount.Log.Binding.ILogger.Fatal
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Fatal(System.String)
  Kount.Log.Binding.ILogger.Fatal(System.String,Exception):
    name:
      CSharp:
      - id: Kount.Log.Binding.ILogger.Fatal(System.String,Exception)
        name: Fatal
        nameWithType: ILogger.Fatal
        qualifiedName: Kount.Log.Binding.ILogger.Fatal
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Binding.ILogger.Fatal(System.String,Exception)
        name: Fatal
        nameWithType: ILogger.Fatal
        qualifiedName: Kount.Log.Binding.ILogger.Fatal
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Binding.ILogger
    commentId: M:Kount.Log.Binding.ILogger.Fatal(System.String,Exception)
  Kount.Log.Binding.NopLogger:
    name:
      CSharp:
      - id: Kount.Log.Binding.NopLogger
        name: NopLogger
        nameWithType: NopLogger
        qualifiedName: Kount.Log.Binding.NopLogger
      VB:
      - id: Kount.Log.Binding.NopLogger
        name: NopLogger
        nameWithType: NopLogger
        qualifiedName: Kount.Log.Binding.NopLogger
    isDefinition: true
    commentId: T:Kount.Log.Binding.NopLogger
  Kount.Log.Binding.SimpleLogger.MeasureElapsed*:
    name:
      CSharp:
      - id: Kount.Log.Binding.SimpleLogger.MeasureElapsed*
        name: MeasureElapsed
        nameWithType: SimpleLogger.MeasureElapsed
        qualifiedName: Kount.Log.Binding.SimpleLogger.MeasureElapsed
      VB:
      - id: Kount.Log.Binding.SimpleLogger.MeasureElapsed*
        name: MeasureElapsed
        nameWithType: SimpleLogger.MeasureElapsed
        qualifiedName: Kount.Log.Binding.SimpleLogger.MeasureElapsed
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.SimpleLogger.MeasureElapsed
  Kount.Log.Binding.SimpleLogger.#ctor*:
    name:
      CSharp:
      - id: Kount.Log.Binding.SimpleLogger.#ctor*
        name: SimpleLogger
        nameWithType: SimpleLogger.SimpleLogger
        qualifiedName: Kount.Log.Binding.SimpleLogger.SimpleLogger
      VB:
      - id: Kount.Log.Binding.SimpleLogger.#ctor*
        name: SimpleLogger
        nameWithType: SimpleLogger.SimpleLogger
        qualifiedName: Kount.Log.Binding.SimpleLogger.SimpleLogger
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.SimpleLogger.#ctor
  Kount.Log.Binding.SimpleLogger.Debug*:
    name:
      CSharp:
      - id: Kount.Log.Binding.SimpleLogger.Debug*
        name: Debug
        nameWithType: SimpleLogger.Debug
        qualifiedName: Kount.Log.Binding.SimpleLogger.Debug
      VB:
      - id: Kount.Log.Binding.SimpleLogger.Debug*
        name: Debug
        nameWithType: SimpleLogger.Debug
        qualifiedName: Kount.Log.Binding.SimpleLogger.Debug
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.SimpleLogger.Debug
  Kount.Log.Binding.SimpleLogger.Info*:
    name:
      CSharp:
      - id: Kount.Log.Binding.SimpleLogger.Info*
        name: Info
        nameWithType: SimpleLogger.Info
        qualifiedName: Kount.Log.Binding.SimpleLogger.Info
      VB:
      - id: Kount.Log.Binding.SimpleLogger.Info*
        name: Info
        nameWithType: SimpleLogger.Info
        qualifiedName: Kount.Log.Binding.SimpleLogger.Info
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.SimpleLogger.Info
  Kount.Log.Binding.SimpleLogger.Warn*:
    name:
      CSharp:
      - id: Kount.Log.Binding.SimpleLogger.Warn*
        name: Warn
        nameWithType: SimpleLogger.Warn
        qualifiedName: Kount.Log.Binding.SimpleLogger.Warn
      VB:
      - id: Kount.Log.Binding.SimpleLogger.Warn*
        name: Warn
        nameWithType: SimpleLogger.Warn
        qualifiedName: Kount.Log.Binding.SimpleLogger.Warn
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.SimpleLogger.Warn
  Kount.Log.Binding.SimpleLogger.Error*:
    name:
      CSharp:
      - id: Kount.Log.Binding.SimpleLogger.Error*
        name: Error
        nameWithType: SimpleLogger.Error
        qualifiedName: Kount.Log.Binding.SimpleLogger.Error
      VB:
      - id: Kount.Log.Binding.SimpleLogger.Error*
        name: Error
        nameWithType: SimpleLogger.Error
        qualifiedName: Kount.Log.Binding.SimpleLogger.Error
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.SimpleLogger.Error
  Kount.Log.Binding.SimpleLogger.Fatal*:
    name:
      CSharp:
      - id: Kount.Log.Binding.SimpleLogger.Fatal*
        name: Fatal
        nameWithType: SimpleLogger.Fatal
        qualifiedName: Kount.Log.Binding.SimpleLogger.Fatal
      VB:
      - id: Kount.Log.Binding.SimpleLogger.Fatal*
        name: Fatal
        nameWithType: SimpleLogger.Fatal
        qualifiedName: Kount.Log.Binding.SimpleLogger.Fatal
    isDefinition: true
    commentId: Overload:Kount.Log.Binding.SimpleLogger.Fatal
  Kount.Log.Binding.SimpleLogger:
    name:
      CSharp:
      - id: Kount.Log.Binding.SimpleLogger
        name: SimpleLogger
        nameWithType: SimpleLogger
        qualifiedName: Kount.Log.Binding.SimpleLogger
      VB:
      - id: Kount.Log.Binding.SimpleLogger
        name: SimpleLogger
        nameWithType: SimpleLogger
        qualifiedName: Kount.Log.Binding.SimpleLogger
    isDefinition: true
    commentId: T:Kount.Log.Binding.SimpleLogger
  Kount.Log.Factory:
    name:
      CSharp:
      - name: Kount.Log.Factory
        nameWithType: Kount.Log.Factory
        qualifiedName: Kount.Log.Factory
      VB:
      - name: Kount.Log.Factory
        nameWithType: Kount.Log.Factory
        qualifiedName: Kount.Log.Factory
    isDefinition: true
    commentId: N:Kount.Log.Factory
  Kount.Log.Factory.ILoggerFactory:
    name:
      CSharp:
      - id: Kount.Log.Factory.ILoggerFactory
        name: ILoggerFactory
        nameWithType: ILoggerFactory
        qualifiedName: Kount.Log.Factory.ILoggerFactory
      VB:
      - id: Kount.Log.Factory.ILoggerFactory
        name: ILoggerFactory
        nameWithType: ILoggerFactory
        qualifiedName: Kount.Log.Factory.ILoggerFactory
    isDefinition: true
    parent: Kount.Log.Factory
    commentId: T:Kount.Log.Factory.ILoggerFactory
  Kount.Log.Factory.LogFactory.GetLoggerFactory*:
    name:
      CSharp:
      - id: Kount.Log.Factory.LogFactory.GetLoggerFactory*
        name: GetLoggerFactory
        nameWithType: LogFactory.GetLoggerFactory
        qualifiedName: Kount.Log.Factory.LogFactory.GetLoggerFactory
      VB:
      - id: Kount.Log.Factory.LogFactory.GetLoggerFactory*
        name: GetLoggerFactory
        nameWithType: LogFactory.GetLoggerFactory
        qualifiedName: Kount.Log.Factory.LogFactory.GetLoggerFactory
    isDefinition: true
    commentId: Overload:Kount.Log.Factory.LogFactory.GetLoggerFactory
  Kount.Log.Factory.LogFactory.SetLoggerFactory*:
    name:
      CSharp:
      - id: Kount.Log.Factory.LogFactory.SetLoggerFactory*
        name: SetLoggerFactory
        nameWithType: LogFactory.SetLoggerFactory
        qualifiedName: Kount.Log.Factory.LogFactory.SetLoggerFactory
      VB:
      - id: Kount.Log.Factory.LogFactory.SetLoggerFactory*
        name: SetLoggerFactory
        nameWithType: LogFactory.SetLoggerFactory
        qualifiedName: Kount.Log.Factory.LogFactory.SetLoggerFactory
    isDefinition: true
    commentId: Overload:Kount.Log.Factory.LogFactory.SetLoggerFactory
  Kount.Log.Factory.LogFactory:
    name:
      CSharp:
      - id: Kount.Log.Factory.LogFactory
        name: LogFactory
        nameWithType: LogFactory
        qualifiedName: Kount.Log.Factory.LogFactory
      VB:
      - id: Kount.Log.Factory.LogFactory
        name: LogFactory
        nameWithType: LogFactory
        qualifiedName: Kount.Log.Factory.LogFactory
    isDefinition: true
    commentId: T:Kount.Log.Factory.LogFactory
  Kount.Log.Factory.ILoggerFactory.GetLogger*:
    name:
      CSharp:
      - id: Kount.Log.Factory.ILoggerFactory.GetLogger*
        name: GetLogger
        nameWithType: ILoggerFactory.GetLogger
        qualifiedName: Kount.Log.Factory.ILoggerFactory.GetLogger
      VB:
      - id: Kount.Log.Factory.ILoggerFactory.GetLogger*
        name: GetLogger
        nameWithType: ILoggerFactory.GetLogger
        qualifiedName: Kount.Log.Factory.ILoggerFactory.GetLogger
    isDefinition: true
    commentId: Overload:Kount.Log.Factory.ILoggerFactory.GetLogger
  Kount.Log.Factory.NopLoggerFactory.GetLogger*:
    name:
      CSharp:
      - id: Kount.Log.Factory.NopLoggerFactory.GetLogger*
        name: GetLogger
        nameWithType: NopLoggerFactory.GetLogger
        qualifiedName: Kount.Log.Factory.NopLoggerFactory.GetLogger
      VB:
      - id: Kount.Log.Factory.NopLoggerFactory.GetLogger*
        name: GetLogger
        nameWithType: NopLoggerFactory.GetLogger
        qualifiedName: Kount.Log.Factory.NopLoggerFactory.GetLogger
    isDefinition: true
    commentId: Overload:Kount.Log.Factory.NopLoggerFactory.GetLogger
  Kount.Log.Factory.ILoggerFactory.GetLogger(System.String):
    name:
      CSharp:
      - id: Kount.Log.Factory.ILoggerFactory.GetLogger(System.String)
        name: GetLogger
        nameWithType: ILoggerFactory.GetLogger
        qualifiedName: Kount.Log.Factory.ILoggerFactory.GetLogger
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Log.Factory.ILoggerFactory.GetLogger(System.String)
        name: GetLogger
        nameWithType: ILoggerFactory.GetLogger
        qualifiedName: Kount.Log.Factory.ILoggerFactory.GetLogger
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Log.Factory.ILoggerFactory
    commentId: M:Kount.Log.Factory.ILoggerFactory.GetLogger(System.String)
  Kount.Log.Factory.NopLoggerFactory:
    name:
      CSharp:
      - id: Kount.Log.Factory.NopLoggerFactory
        name: NopLoggerFactory
        nameWithType: NopLoggerFactory
        qualifiedName: Kount.Log.Factory.NopLoggerFactory
      VB:
      - id: Kount.Log.Factory.NopLoggerFactory
        name: NopLoggerFactory
        nameWithType: NopLoggerFactory
        qualifiedName: Kount.Log.Factory.NopLoggerFactory
    isDefinition: true
    commentId: T:Kount.Log.Factory.NopLoggerFactory
  Kount.Log.Factory.SimpleLoggerFactory.GetLogger*:
    name:
      CSharp:
      - id: Kount.Log.Factory.SimpleLoggerFactory.GetLogger*
        name: GetLogger
        nameWithType: SimpleLoggerFactory.GetLogger
        qualifiedName: Kount.Log.Factory.SimpleLoggerFactory.GetLogger
      VB:
      - id: Kount.Log.Factory.SimpleLoggerFactory.GetLogger*
        name: GetLogger
        nameWithType: SimpleLoggerFactory.GetLogger
        qualifiedName: Kount.Log.Factory.SimpleLoggerFactory.GetLogger
    isDefinition: true
    commentId: Overload:Kount.Log.Factory.SimpleLoggerFactory.GetLogger
  Kount.Log.Factory.SimpleLoggerFactory:
    name:
      CSharp:
      - id: Kount.Log.Factory.SimpleLoggerFactory
        name: SimpleLoggerFactory
        nameWithType: SimpleLoggerFactory
        qualifiedName: Kount.Log.Factory.SimpleLoggerFactory
      VB:
      - id: Kount.Log.Factory.SimpleLoggerFactory
        name: SimpleLoggerFactory
        nameWithType: SimpleLoggerFactory
        qualifiedName: Kount.Log.Factory.SimpleLoggerFactory
    isDefinition: true
    commentId: T:Kount.Log.Factory.SimpleLoggerFactory
  System.Int64:
    name:
      CSharp:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      VB:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
    isDefinition: true
  Kount.Ris.CartItem.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.CartItem.#ctor*
        name: CartItem
        nameWithType: CartItem.CartItem
        qualifiedName: Kount.Ris.CartItem.CartItem
      VB:
      - id: Kount.Ris.CartItem.#ctor*
        name: CartItem
        nameWithType: CartItem.CartItem
        qualifiedName: Kount.Ris.CartItem.CartItem
    isDefinition: true
    commentId: Overload:Kount.Ris.CartItem.#ctor
  Kount.Ris.CartItem.ProductType*:
    name:
      CSharp:
      - id: Kount.Ris.CartItem.ProductType*
        name: ProductType
        nameWithType: CartItem.ProductType
        qualifiedName: Kount.Ris.CartItem.ProductType
      VB:
      - id: Kount.Ris.CartItem.ProductType*
        name: ProductType
        nameWithType: CartItem.ProductType
        qualifiedName: Kount.Ris.CartItem.ProductType
    isDefinition: true
    commentId: Overload:Kount.Ris.CartItem.ProductType
  Kount.Ris.CartItem.ProductItem*:
    name:
      CSharp:
      - id: Kount.Ris.CartItem.ProductItem*
        name: ProductItem
        nameWithType: CartItem.ProductItem
        qualifiedName: Kount.Ris.CartItem.ProductItem
      VB:
      - id: Kount.Ris.CartItem.ProductItem*
        name: ProductItem
        nameWithType: CartItem.ProductItem
        qualifiedName: Kount.Ris.CartItem.ProductItem
    isDefinition: true
    commentId: Overload:Kount.Ris.CartItem.ProductItem
  Kount.Ris.CartItem.ProductDescription*:
    name:
      CSharp:
      - id: Kount.Ris.CartItem.ProductDescription*
        name: ProductDescription
        nameWithType: CartItem.ProductDescription
        qualifiedName: Kount.Ris.CartItem.ProductDescription
      VB:
      - id: Kount.Ris.CartItem.ProductDescription*
        name: ProductDescription
        nameWithType: CartItem.ProductDescription
        qualifiedName: Kount.Ris.CartItem.ProductDescription
    isDefinition: true
    commentId: Overload:Kount.Ris.CartItem.ProductDescription
  Kount.Ris.CartItem.ProductQuantity*:
    name:
      CSharp:
      - id: Kount.Ris.CartItem.ProductQuantity*
        name: ProductQuantity
        nameWithType: CartItem.ProductQuantity
        qualifiedName: Kount.Ris.CartItem.ProductQuantity
      VB:
      - id: Kount.Ris.CartItem.ProductQuantity*
        name: ProductQuantity
        nameWithType: CartItem.ProductQuantity
        qualifiedName: Kount.Ris.CartItem.ProductQuantity
    isDefinition: true
    commentId: Overload:Kount.Ris.CartItem.ProductQuantity
  Kount.Ris.CartItem.ProductPrice*:
    name:
      CSharp:
      - id: Kount.Ris.CartItem.ProductPrice*
        name: ProductPrice
        nameWithType: CartItem.ProductPrice
        qualifiedName: Kount.Ris.CartItem.ProductPrice
      VB:
      - id: Kount.Ris.CartItem.ProductPrice*
        name: ProductPrice
        nameWithType: CartItem.ProductPrice
        qualifiedName: Kount.Ris.CartItem.ProductPrice
    isDefinition: true
    commentId: Overload:Kount.Ris.CartItem.ProductPrice
  Kount.Ris.CartItem:
    name:
      CSharp:
      - id: Kount.Ris.CartItem
        name: CartItem
        nameWithType: CartItem
        qualifiedName: Kount.Ris.CartItem
      VB:
      - id: Kount.Ris.CartItem
        name: CartItem
        nameWithType: CartItem
        qualifiedName: Kount.Ris.CartItem
    isDefinition: true
    commentId: T:Kount.Ris.CartItem
  Kount.Ris:
    name:
      CSharp:
      - name: Kount.Ris
        nameWithType: Kount.Ris
        qualifiedName: Kount.Ris
      VB:
      - name: Kount.Ris
        nameWithType: Kount.Ris
        qualifiedName: Kount.Ris
    isDefinition: true
    commentId: N:Kount.Ris
  Kount.Ris.Configuration:
    name:
      CSharp:
      - id: Kount.Ris.Configuration
        name: Configuration
        nameWithType: Configuration
        qualifiedName: Kount.Ris.Configuration
      VB:
      - id: Kount.Ris.Configuration
        name: Configuration
        nameWithType: Configuration
        qualifiedName: Kount.Ris.Configuration
    isDefinition: true
    parent: Kount.Ris
    commentId: T:Kount.Ris.Configuration
  Kount.Ris.Configuration.FromAppSettings*:
    name:
      CSharp:
      - id: Kount.Ris.Configuration.FromAppSettings*
        name: FromAppSettings
        nameWithType: Configuration.FromAppSettings
        qualifiedName: Kount.Ris.Configuration.FromAppSettings
      VB:
      - id: Kount.Ris.Configuration.FromAppSettings*
        name: FromAppSettings
        nameWithType: Configuration.FromAppSettings
        qualifiedName: Kount.Ris.Configuration.FromAppSettings
    isDefinition: true
    commentId: Overload:Kount.Ris.Configuration.FromAppSettings
  Kount.Ris.Configuration.MerchantId*:
    name:
      CSharp:
      - id: Kount.Ris.Configuration.MerchantId*
        name: MerchantId
        nameWithType: Configuration.MerchantId
        qualifiedName: Kount.Ris.Configuration.MerchantId
      VB:
      - id: Kount.Ris.Configuration.MerchantId*
        name: MerchantId
        nameWithType: Configuration.MerchantId
        qualifiedName: Kount.Ris.Configuration.MerchantId
    isDefinition: true
    commentId: Overload:Kount.Ris.Configuration.MerchantId
  Kount.Ris.Configuration.URL*:
    name:
      CSharp:
      - id: Kount.Ris.Configuration.URL*
        name: URL
        nameWithType: Configuration.URL
        qualifiedName: Kount.Ris.Configuration.URL
      VB:
      - id: Kount.Ris.Configuration.URL*
        name: URL
        nameWithType: Configuration.URL
        qualifiedName: Kount.Ris.Configuration.URL
    isDefinition: true
    commentId: Overload:Kount.Ris.Configuration.URL
  Kount.Ris.Configuration.ConfigKey*:
    name:
      CSharp:
      - id: Kount.Ris.Configuration.ConfigKey*
        name: ConfigKey
        nameWithType: Configuration.ConfigKey
        qualifiedName: Kount.Ris.Configuration.ConfigKey
      VB:
      - id: Kount.Ris.Configuration.ConfigKey*
        name: ConfigKey
        nameWithType: Configuration.ConfigKey
        qualifiedName: Kount.Ris.Configuration.ConfigKey
    isDefinition: true
    commentId: Overload:Kount.Ris.Configuration.ConfigKey
  Kount.Ris.Configuration.ConnectTimeout*:
    name:
      CSharp:
      - id: Kount.Ris.Configuration.ConnectTimeout*
        name: ConnectTimeout
        nameWithType: Configuration.ConnectTimeout
        qualifiedName: Kount.Ris.Configuration.ConnectTimeout
      VB:
      - id: Kount.Ris.Configuration.ConnectTimeout*
        name: ConnectTimeout
        nameWithType: Configuration.ConnectTimeout
        qualifiedName: Kount.Ris.Configuration.ConnectTimeout
    isDefinition: true
    commentId: Overload:Kount.Ris.Configuration.ConnectTimeout
  Kount.Ris.Configuration.Version*:
    name:
      CSharp:
      - id: Kount.Ris.Configuration.Version*
        name: Version
        nameWithType: Configuration.Version
        qualifiedName: Kount.Ris.Configuration.Version
      VB:
      - id: Kount.Ris.Configuration.Version*
        name: Version
        nameWithType: Configuration.Version
        qualifiedName: Kount.Ris.Configuration.Version
    isDefinition: true
    commentId: Overload:Kount.Ris.Configuration.Version
  Kount.Ris.Configuration.ApiKey*:
    name:
      CSharp:
      - id: Kount.Ris.Configuration.ApiKey*
        name: ApiKey
        nameWithType: Configuration.ApiKey
        qualifiedName: Kount.Ris.Configuration.ApiKey
      VB:
      - id: Kount.Ris.Configuration.ApiKey*
        name: ApiKey
        nameWithType: Configuration.ApiKey
        qualifiedName: Kount.Ris.Configuration.ApiKey
    isDefinition: true
    commentId: Overload:Kount.Ris.Configuration.ApiKey
  Kount.Ris.Configuration.CertificateFile*:
    name:
      CSharp:
      - id: Kount.Ris.Configuration.CertificateFile*
        name: CertificateFile
        nameWithType: Configuration.CertificateFile
        qualifiedName: Kount.Ris.Configuration.CertificateFile
      VB:
      - id: Kount.Ris.Configuration.CertificateFile*
        name: CertificateFile
        nameWithType: Configuration.CertificateFile
        qualifiedName: Kount.Ris.Configuration.CertificateFile
    isDefinition: true
    commentId: Overload:Kount.Ris.Configuration.CertificateFile
  Kount.Ris.Configuration.PrivateKeyPassword*:
    name:
      CSharp:
      - id: Kount.Ris.Configuration.PrivateKeyPassword*
        name: PrivateKeyPassword
        nameWithType: Configuration.PrivateKeyPassword
        qualifiedName: Kount.Ris.Configuration.PrivateKeyPassword
      VB:
      - id: Kount.Ris.Configuration.PrivateKeyPassword*
        name: PrivateKeyPassword
        nameWithType: Configuration.PrivateKeyPassword
        qualifiedName: Kount.Ris.Configuration.PrivateKeyPassword
    isDefinition: true
    commentId: Overload:Kount.Ris.Configuration.PrivateKeyPassword
  Kount.Ris.IllegalArgumentException.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.IllegalArgumentException.#ctor*
        name: IllegalArgumentException
        nameWithType: IllegalArgumentException.IllegalArgumentException
        qualifiedName: Kount.Ris.IllegalArgumentException.IllegalArgumentException
      VB:
      - id: Kount.Ris.IllegalArgumentException.#ctor*
        name: IllegalArgumentException
        nameWithType: IllegalArgumentException.IllegalArgumentException
        qualifiedName: Kount.Ris.IllegalArgumentException.IllegalArgumentException
    isDefinition: true
    commentId: Overload:Kount.Ris.IllegalArgumentException.#ctor
  Kount.Ris.IllegalArgumentException.ErrorMessage*:
    name:
      CSharp:
      - id: Kount.Ris.IllegalArgumentException.ErrorMessage*
        name: ErrorMessage
        nameWithType: IllegalArgumentException.ErrorMessage
        qualifiedName: Kount.Ris.IllegalArgumentException.ErrorMessage
      VB:
      - id: Kount.Ris.IllegalArgumentException.ErrorMessage*
        name: ErrorMessage
        nameWithType: IllegalArgumentException.ErrorMessage
        qualifiedName: Kount.Ris.IllegalArgumentException.ErrorMessage
    isDefinition: true
    commentId: Overload:Kount.Ris.IllegalArgumentException.ErrorMessage
  Kount.Ris.IllegalArgumentException:
    name:
      CSharp:
      - id: Kount.Ris.IllegalArgumentException
        name: IllegalArgumentException
        nameWithType: IllegalArgumentException
        qualifiedName: Kount.Ris.IllegalArgumentException
      VB:
      - id: Kount.Ris.IllegalArgumentException
        name: IllegalArgumentException
        nameWithType: IllegalArgumentException
        qualifiedName: Kount.Ris.IllegalArgumentException
    isDefinition: true
    commentId: T:Kount.Ris.IllegalArgumentException
  Kount.Ris.Request:
    name:
      CSharp:
      - id: Kount.Ris.Request
        name: Request
        nameWithType: Request
        qualifiedName: Kount.Ris.Request
      VB:
      - id: Kount.Ris.Request
        name: Request
        nameWithType: Request
        qualifiedName: Kount.Ris.Request
    isDefinition: true
    parent: Kount.Ris
    commentId: T:Kount.Ris.Request
  Kount.Ris.Request.Data:
    name:
      CSharp:
      - id: Kount.Ris.Request.Data
        name: Data
        nameWithType: Request.Data
        qualifiedName: Kount.Ris.Request.Data
      VB:
      - id: Kount.Ris.Request.Data
        name: Data
        nameWithType: Request.Data
        qualifiedName: Kount.Ris.Request.Data
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: P:Kount.Ris.Request.Data
  Kount.Ris.Request.GetResponse(System.Boolean):
    name:
      CSharp:
      - id: Kount.Ris.Request.GetResponse(System.Boolean)
        name: GetResponse
        nameWithType: Request.GetResponse
        qualifiedName: Kount.Ris.Request.GetResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.GetResponse(System.Boolean)
        name: GetResponse
        nameWithType: Request.GetResponse
        qualifiedName: Kount.Ris.Request.GetResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.GetResponse(System.Boolean)
  Kount.Ris.Request.SetParameter(System.String,System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetParameter(System.String,System.String)
        name: SetParameter
        nameWithType: Request.SetParameter
        qualifiedName: Kount.Ris.Request.SetParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetParameter(System.String,System.String)
        name: SetParameter
        nameWithType: Request.SetParameter
        qualifiedName: Kount.Ris.Request.SetParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetParameter(System.String,System.String)
  Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes)
        name: SetMode
        nameWithType: Request.SetMode
        qualifiedName: Kount.Ris.Request.SetMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Kount.Enums.InquiryTypes
        name: InquiryTypes
        nameWithType: InquiryTypes
        qualifiedName: Kount.Enums.InquiryTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes)
        name: SetMode
        nameWithType: Request.SetMode
        qualifiedName: Kount.Ris.Request.SetMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Kount.Enums.InquiryTypes
        name: InquiryTypes
        nameWithType: InquiryTypes
        qualifiedName: Kount.Enums.InquiryTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetMode(Kount.Enums.InquiryTypes)
  Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes)
        name: SetMode
        nameWithType: Request.SetMode
        qualifiedName: Kount.Ris.Request.SetMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Kount.Enums.UpdateTypes
        name: UpdateTypes
        nameWithType: UpdateTypes
        qualifiedName: Kount.Enums.UpdateTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes)
        name: SetMode
        nameWithType: Request.SetMode
        qualifiedName: Kount.Ris.Request.SetMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Kount.Enums.UpdateTypes
        name: UpdateTypes
        nameWithType: UpdateTypes
        qualifiedName: Kount.Enums.UpdateTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetMode(Kount.Enums.UpdateTypes)
  Kount.Ris.Request.SetMerchantId(System.Int32):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetMerchantId(System.Int32)
        name: SetMerchantId
        nameWithType: Request.SetMerchantId
        qualifiedName: Kount.Ris.Request.SetMerchantId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetMerchantId(System.Int32)
        name: SetMerchantId
        nameWithType: Request.SetMerchantId
        qualifiedName: Kount.Ris.Request.SetMerchantId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetMerchantId(System.Int32)
  Kount.Ris.Request.SetKountCentralCustomerId(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetKountCentralCustomerId(System.String)
        name: SetKountCentralCustomerId
        nameWithType: Request.SetKountCentralCustomerId
        qualifiedName: Kount.Ris.Request.SetKountCentralCustomerId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetKountCentralCustomerId(System.String)
        name: SetKountCentralCustomerId
        nameWithType: Request.SetKountCentralCustomerId
        qualifiedName: Kount.Ris.Request.SetKountCentralCustomerId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetKountCentralCustomerId(System.String)
  Kount.Ris.Request.SetSessionId(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetSessionId(System.String)
        name: SetSessionId
        nameWithType: Request.SetSessionId
        qualifiedName: Kount.Ris.Request.SetSessionId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetSessionId(System.String)
        name: SetSessionId
        nameWithType: Request.SetSessionId
        qualifiedName: Kount.Ris.Request.SetSessionId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetSessionId(System.String)
  Kount.Ris.Request.SetOrderNumber(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetOrderNumber(System.String)
        name: SetOrderNumber
        nameWithType: Request.SetOrderNumber
        qualifiedName: Kount.Ris.Request.SetOrderNumber
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetOrderNumber(System.String)
        name: SetOrderNumber
        nameWithType: Request.SetOrderNumber
        qualifiedName: Kount.Ris.Request.SetOrderNumber
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetOrderNumber(System.String)
  Kount.Ris.Request.SetMack(System.Char):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetMack(System.Char)
        name: SetMack
        nameWithType: Request.SetMack
        qualifiedName: Kount.Ris.Request.SetMack
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetMack(System.Char)
        name: SetMack
        nameWithType: Request.SetMack
        qualifiedName: Kount.Ris.Request.SetMack
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetMack(System.Char)
  Kount.Ris.Request.SetAuth(System.Char):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetAuth(System.Char)
        name: SetAuth
        nameWithType: Request.SetAuth
        qualifiedName: Kount.Ris.Request.SetAuth
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetAuth(System.Char)
        name: SetAuth
        nameWithType: Request.SetAuth
        qualifiedName: Kount.Ris.Request.SetAuth
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetAuth(System.Char)
  Kount.Ris.Request.SetAvsz(System.Char):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetAvsz(System.Char)
        name: SetAvsz
        nameWithType: Request.SetAvsz
        qualifiedName: Kount.Ris.Request.SetAvsz
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetAvsz(System.Char)
        name: SetAvsz
        nameWithType: Request.SetAvsz
        qualifiedName: Kount.Ris.Request.SetAvsz
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetAvsz(System.Char)
  Kount.Ris.Request.SetAvst(System.Char):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetAvst(System.Char)
        name: SetAvst
        nameWithType: Request.SetAvst
        qualifiedName: Kount.Ris.Request.SetAvst
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetAvst(System.Char)
        name: SetAvst
        nameWithType: Request.SetAvst
        qualifiedName: Kount.Ris.Request.SetAvst
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetAvst(System.Char)
  Kount.Ris.Request.SetCvvr(System.Char):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetCvvr(System.Char)
        name: SetCvvr
        nameWithType: Request.SetCvvr
        qualifiedName: Kount.Ris.Request.SetCvvr
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetCvvr(System.Char)
        name: SetCvvr
        nameWithType: Request.SetCvvr
        qualifiedName: Kount.Ris.Request.SetCvvr
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetCvvr(System.Char)
  Kount.Ris.Request.SetCardPaymentMasked(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetCardPaymentMasked(System.String)
        name: SetCardPaymentMasked
        nameWithType: Request.SetCardPaymentMasked
        qualifiedName: Kount.Ris.Request.SetCardPaymentMasked
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetCardPaymentMasked(System.String)
        name: SetCardPaymentMasked
        nameWithType: Request.SetCardPaymentMasked
        qualifiedName: Kount.Ris.Request.SetCardPaymentMasked
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetCardPaymentMasked(System.String)
  Kount.Ris.Request.SetNoPayment:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetNoPayment
        name: SetNoPayment
        nameWithType: Request.SetNoPayment
        qualifiedName: Kount.Ris.Request.SetNoPayment
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetNoPayment
        name: SetNoPayment
        nameWithType: Request.SetNoPayment
        qualifiedName: Kount.Ris.Request.SetNoPayment
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetNoPayment
  Kount.Ris.Request.SetPayment(System.String,System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetPayment(System.String,System.String)
        name: SetPayment
        nameWithType: Request.SetPayment
        qualifiedName: Kount.Ris.Request.SetPayment
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetPayment(System.String,System.String)
        name: SetPayment
        nameWithType: Request.SetPayment
        qualifiedName: Kount.Ris.Request.SetPayment
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetPayment(System.String,System.String)
  Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes,System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes,System.String)
        name: SetPayment
        nameWithType: Request.SetPayment
        qualifiedName: Kount.Ris.Request.SetPayment
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Kount.Enums.PaymentTypes
        name: PaymentTypes
        nameWithType: PaymentTypes
        qualifiedName: Kount.Enums.PaymentTypes
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes,System.String)
        name: SetPayment
        nameWithType: Request.SetPayment
        qualifiedName: Kount.Ris.Request.SetPayment
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Kount.Enums.PaymentTypes
        name: PaymentTypes
        nameWithType: PaymentTypes
        qualifiedName: Kount.Enums.PaymentTypes
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetPayment(Kount.Enums.PaymentTypes,System.String)
  Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String)
        name: SetGreenDotMoneyPakPayment
        nameWithType: Request.SetGreenDotMoneyPakPayment
        qualifiedName: Kount.Ris.Request.SetGreenDotMoneyPakPayment
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String)
        name: SetGreenDotMoneyPakPayment
        nameWithType: Request.SetGreenDotMoneyPakPayment
        qualifiedName: Kount.Ris.Request.SetGreenDotMoneyPakPayment
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetGreenDotMoneyPakPayment(System.String)
  Kount.Ris.Request.GetParam(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.GetParam(System.String)
        name: GetParam
        nameWithType: Request.GetParam
        qualifiedName: Kount.Ris.Request.GetParam
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.GetParam(System.String)
        name: GetParam
        nameWithType: Request.GetParam
        qualifiedName: Kount.Ris.Request.GetParam
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.GetParam(System.String)
  Kount.Ris.Request.GetUrl:
    name:
      CSharp:
      - id: Kount.Ris.Request.GetUrl
        name: GetUrl
        nameWithType: Request.GetUrl
        qualifiedName: Kount.Ris.Request.GetUrl
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.GetUrl
        name: GetUrl
        nameWithType: Request.GetUrl
        qualifiedName: Kount.Ris.Request.GetUrl
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.GetUrl
  Kount.Ris.Request.SetUrl(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetUrl(System.String)
        name: SetUrl
        nameWithType: Request.SetUrl
        qualifiedName: Kount.Ris.Request.SetUrl
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetUrl(System.String)
        name: SetUrl
        nameWithType: Request.SetUrl
        qualifiedName: Kount.Ris.Request.SetUrl
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetUrl(System.String)
  Kount.Ris.Request.SetCertificate(System.String,System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetCertificate(System.String,System.String)
        name: SetCertificate
        nameWithType: Request.SetCertificate
        qualifiedName: Kount.Ris.Request.SetCertificate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetCertificate(System.String,System.String)
        name: SetCertificate
        nameWithType: Request.SetCertificate
        qualifiedName: Kount.Ris.Request.SetCertificate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetCertificate(System.String,System.String)
  Kount.Ris.Request.SetApiKey(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetApiKey(System.String)
        name: SetApiKey
        nameWithType: Request.SetApiKey
        qualifiedName: Kount.Ris.Request.SetApiKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetApiKey(System.String)
        name: SetApiKey
        nameWithType: Request.SetApiKey
        qualifiedName: Kount.Ris.Request.SetApiKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetApiKey(System.String)
  Kount.Ris.Request.GetCertificateFile:
    name:
      CSharp:
      - id: Kount.Ris.Request.GetCertificateFile
        name: GetCertificateFile
        nameWithType: Request.GetCertificateFile
        qualifiedName: Kount.Ris.Request.GetCertificateFile
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.GetCertificateFile
        name: GetCertificateFile
        nameWithType: Request.GetCertificateFile
        qualifiedName: Kount.Ris.Request.GetCertificateFile
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.GetCertificateFile
  Kount.Ris.Request.GetPrivateKeyPassword:
    name:
      CSharp:
      - id: Kount.Ris.Request.GetPrivateKeyPassword
        name: GetPrivateKeyPassword
        nameWithType: Request.GetPrivateKeyPassword
        qualifiedName: Kount.Ris.Request.GetPrivateKeyPassword
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.GetPrivateKeyPassword
        name: GetPrivateKeyPassword
        nameWithType: Request.GetPrivateKeyPassword
        qualifiedName: Kount.Ris.Request.GetPrivateKeyPassword
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.GetPrivateKeyPassword
  Kount.Ris.Request.SetKhashPaymentEncoding:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetKhashPaymentEncoding
        name: SetKhashPaymentEncoding
        nameWithType: Request.SetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.SetKhashPaymentEncoding
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetKhashPaymentEncoding
        name: SetKhashPaymentEncoding
        nameWithType: Request.SetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.SetKhashPaymentEncoding
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetKhashPaymentEncoding
  Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean)
        name: SetKhashPaymentEncoding
        nameWithType: Request.SetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.SetKhashPaymentEncoding
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean)
        name: SetKhashPaymentEncoding
        nameWithType: Request.SetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.SetKhashPaymentEncoding
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetKhashPaymentEncoding(System.Boolean)
  Kount.Ris.Request.SetPaymentTokenLast4(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetPaymentTokenLast4(System.String)
        name: SetPaymentTokenLast4
        nameWithType: Request.SetPaymentTokenLast4
        qualifiedName: Kount.Ris.Request.SetPaymentTokenLast4
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetPaymentTokenLast4(System.String)
        name: SetPaymentTokenLast4
        nameWithType: Request.SetPaymentTokenLast4
        qualifiedName: Kount.Ris.Request.SetPaymentTokenLast4
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetPaymentTokenLast4(System.String)
  Kount.Ris.Request.SetVersion(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetVersion(System.String)
        name: SetVersion
        nameWithType: Request.SetVersion
        qualifiedName: Kount.Ris.Request.SetVersion
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetVersion(System.String)
        name: SetVersion
        nameWithType: Request.SetVersion
        qualifiedName: Kount.Ris.Request.SetVersion
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetVersion(System.String)
  Kount.Ris.Request.IsSetKhashPaymentEncoding:
    name:
      CSharp:
      - id: Kount.Ris.Request.IsSetKhashPaymentEncoding
        name: IsSetKhashPaymentEncoding
        nameWithType: Request.IsSetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.IsSetKhashPaymentEncoding
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.IsSetKhashPaymentEncoding
        name: IsSetKhashPaymentEncoding
        nameWithType: Request.IsSetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.IsSetKhashPaymentEncoding
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.IsSetKhashPaymentEncoding
  Kount.Ris.Request.SetPaymentToken(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetPaymentToken(System.String)
        name: SetPaymentToken
        nameWithType: Request.SetPaymentToken
        qualifiedName: Kount.Ris.Request.SetPaymentToken
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetPaymentToken(System.String)
        name: SetPaymentToken
        nameWithType: Request.SetPaymentToken
        qualifiedName: Kount.Ris.Request.SetPaymentToken
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetPaymentToken(System.String)
  Kount.Ris.Request.CheckConfigurationParameter(System.String,System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.CheckConfigurationParameter(System.String,System.String)
        name: CheckConfigurationParameter
        nameWithType: Request.CheckConfigurationParameter
        qualifiedName: Kount.Ris.Request.CheckConfigurationParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.CheckConfigurationParameter(System.String,System.String)
        name: CheckConfigurationParameter
        nameWithType: Request.CheckConfigurationParameter
        qualifiedName: Kount.Ris.Request.CheckConfigurationParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.CheckConfigurationParameter(System.String,System.String)
  Kount.Ris.Request.SafeGet(System.String):
    name:
      CSharp:
      - id: Kount.Ris.Request.SafeGet(System.String)
        name: SafeGet
        nameWithType: Request.SafeGet
        qualifiedName: Kount.Ris.Request.SafeGet
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SafeGet(System.String)
        name: SafeGet
        nameWithType: Request.SafeGet
        qualifiedName: Kount.Ris.Request.SafeGet
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SafeGet(System.String)
  Kount.Ris.Inquiry.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.#ctor*
        name: Inquiry
        nameWithType: Inquiry.Inquiry
        qualifiedName: Kount.Ris.Inquiry.Inquiry
      VB:
      - id: Kount.Ris.Inquiry.#ctor*
        name: Inquiry
        nameWithType: Inquiry.Inquiry
        qualifiedName: Kount.Ris.Inquiry.Inquiry
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.#ctor
  System.Char:
    name:
      CSharp:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      VB:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
    isDefinition: true
  Kount.Ris.Request.SetMode(System.Char):
    name:
      CSharp:
      - id: Kount.Ris.Request.SetMode(System.Char)
        name: SetMode
        nameWithType: Request.SetMode
        qualifiedName: Kount.Ris.Request.SetMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Kount.Ris.Request.SetMode(System.Char)
        name: SetMode
        nameWithType: Request.SetMode
        qualifiedName: Kount.Ris.Request.SetMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Kount.Ris.Request
    commentId: M:Kount.Ris.Request.SetMode(System.Char)
  Kount.Ris.Inquiry.SetMode*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetMode*
        name: SetMode
        nameWithType: Inquiry.SetMode
        qualifiedName: Kount.Ris.Inquiry.SetMode
      VB:
      - id: Kount.Ris.Inquiry.SetMode*
        name: SetMode
        nameWithType: Inquiry.SetMode
        qualifiedName: Kount.Ris.Inquiry.SetMode
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetMode
  Kount.Ris.Inquiry.SetDateOfBirth*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetDateOfBirth*
        name: SetDateOfBirth
        nameWithType: Inquiry.SetDateOfBirth
        qualifiedName: Kount.Ris.Inquiry.SetDateOfBirth
      VB:
      - id: Kount.Ris.Inquiry.SetDateOfBirth*
        name: SetDateOfBirth
        nameWithType: Inquiry.SetDateOfBirth
        qualifiedName: Kount.Ris.Inquiry.SetDateOfBirth
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetDateOfBirth
  Kount.Ris.Inquiry.SetGender*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetGender*
        name: SetGender
        nameWithType: Inquiry.SetGender
        qualifiedName: Kount.Ris.Inquiry.SetGender
      VB:
      - id: Kount.Ris.Inquiry.SetGender*
        name: SetGender
        nameWithType: Inquiry.SetGender
        qualifiedName: Kount.Ris.Inquiry.SetGender
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetGender
  Kount.Ris.Inquiry.SetUserDefinedField*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetUserDefinedField*
        name: SetUserDefinedField
        nameWithType: Inquiry.SetUserDefinedField
        qualifiedName: Kount.Ris.Inquiry.SetUserDefinedField
      VB:
      - id: Kount.Ris.Inquiry.SetUserDefinedField*
        name: SetUserDefinedField
        nameWithType: Inquiry.SetUserDefinedField
        qualifiedName: Kount.Ris.Inquiry.SetUserDefinedField
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetUserDefinedField
  Kount.Ris.Inquiry.SetCurrency*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetCurrency*
        name: SetCurrency
        nameWithType: Inquiry.SetCurrency
        qualifiedName: Kount.Ris.Inquiry.SetCurrency
      VB:
      - id: Kount.Ris.Inquiry.SetCurrency*
        name: SetCurrency
        nameWithType: Inquiry.SetCurrency
        qualifiedName: Kount.Ris.Inquiry.SetCurrency
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetCurrency
  Kount.Ris.Inquiry.SetSdkVersion*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetSdkVersion*
        name: SetSdkVersion
        nameWithType: Inquiry.SetSdkVersion
        qualifiedName: Kount.Ris.Inquiry.SetSdkVersion
      VB:
      - id: Kount.Ris.Inquiry.SetSdkVersion*
        name: SetSdkVersion
        nameWithType: Inquiry.SetSdkVersion
        qualifiedName: Kount.Ris.Inquiry.SetSdkVersion
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetSdkVersion
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
  Kount.Ris.Inquiry.SetTotal*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetTotal*
        name: SetTotal
        nameWithType: Inquiry.SetTotal
        qualifiedName: Kount.Ris.Inquiry.SetTotal
      VB:
      - id: Kount.Ris.Inquiry.SetTotal*
        name: SetTotal
        nameWithType: Inquiry.SetTotal
        qualifiedName: Kount.Ris.Inquiry.SetTotal
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetTotal
  Kount.Ris.Inquiry.SetIpAddress*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetIpAddress*
        name: SetIpAddress
        nameWithType: Inquiry.SetIpAddress
        qualifiedName: Kount.Ris.Inquiry.SetIpAddress
      VB:
      - id: Kount.Ris.Inquiry.SetIpAddress*
        name: SetIpAddress
        nameWithType: Inquiry.SetIpAddress
        qualifiedName: Kount.Ris.Inquiry.SetIpAddress
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetIpAddress
  Kount.Ris.Inquiry.SetUserAgent*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetUserAgent*
        name: SetUserAgent
        nameWithType: Inquiry.SetUserAgent
        qualifiedName: Kount.Ris.Inquiry.SetUserAgent
      VB:
      - id: Kount.Ris.Inquiry.SetUserAgent*
        name: SetUserAgent
        nameWithType: Inquiry.SetUserAgent
        qualifiedName: Kount.Ris.Inquiry.SetUserAgent
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetUserAgent
  Kount.Ris.Inquiry.SetEmail*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetEmail*
        name: SetEmail
        nameWithType: Inquiry.SetEmail
        qualifiedName: Kount.Ris.Inquiry.SetEmail
      VB:
      - id: Kount.Ris.Inquiry.SetEmail*
        name: SetEmail
        nameWithType: Inquiry.SetEmail
        qualifiedName: Kount.Ris.Inquiry.SetEmail
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetEmail
  Kount.Ris.Inquiry.SetName*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetName*
        name: SetName
        nameWithType: Inquiry.SetName
        qualifiedName: Kount.Ris.Inquiry.SetName
      VB:
      - id: Kount.Ris.Inquiry.SetName*
        name: SetName
        nameWithType: Inquiry.SetName
        qualifiedName: Kount.Ris.Inquiry.SetName
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetName
  Kount.Ris.Inquiry.SetUnique*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetUnique*
        name: SetUnique
        nameWithType: Inquiry.SetUnique
        qualifiedName: Kount.Ris.Inquiry.SetUnique
      VB:
      - id: Kount.Ris.Inquiry.SetUnique*
        name: SetUnique
        nameWithType: Inquiry.SetUnique
        qualifiedName: Kount.Ris.Inquiry.SetUnique
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetUnique
  Kount.Ris.Inquiry.SetEpoch*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetEpoch*
        name: SetEpoch
        nameWithType: Inquiry.SetEpoch
        qualifiedName: Kount.Ris.Inquiry.SetEpoch
      VB:
      - id: Kount.Ris.Inquiry.SetEpoch*
        name: SetEpoch
        nameWithType: Inquiry.SetEpoch
        qualifiedName: Kount.Ris.Inquiry.SetEpoch
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetEpoch
  Kount.Ris.Inquiry.SetCash*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetCash*
        name: SetCash
        nameWithType: Inquiry.SetCash
        qualifiedName: Kount.Ris.Inquiry.SetCash
      VB:
      - id: Kount.Ris.Inquiry.SetCash*
        name: SetCash
        nameWithType: Inquiry.SetCash
        qualifiedName: Kount.Ris.Inquiry.SetCash
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetCash
  Kount.Ris.Inquiry.SetShipType*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetShipType*
        name: SetShipType
        nameWithType: Inquiry.SetShipType
        qualifiedName: Kount.Ris.Inquiry.SetShipType
      VB:
      - id: Kount.Ris.Inquiry.SetShipType*
        name: SetShipType
        nameWithType: Inquiry.SetShipType
        qualifiedName: Kount.Ris.Inquiry.SetShipType
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetShipType
  Kount.Ris.Inquiry.SetBillingAddress*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetBillingAddress*
        name: SetBillingAddress
        nameWithType: Inquiry.SetBillingAddress
        qualifiedName: Kount.Ris.Inquiry.SetBillingAddress
      VB:
      - id: Kount.Ris.Inquiry.SetBillingAddress*
        name: SetBillingAddress
        nameWithType: Inquiry.SetBillingAddress
        qualifiedName: Kount.Ris.Inquiry.SetBillingAddress
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetBillingAddress
  Kount.Ris.Inquiry.SetBillingPhoneNumber*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetBillingPhoneNumber*
        name: SetBillingPhoneNumber
        nameWithType: Inquiry.SetBillingPhoneNumber
        qualifiedName: Kount.Ris.Inquiry.SetBillingPhoneNumber
      VB:
      - id: Kount.Ris.Inquiry.SetBillingPhoneNumber*
        name: SetBillingPhoneNumber
        nameWithType: Inquiry.SetBillingPhoneNumber
        qualifiedName: Kount.Ris.Inquiry.SetBillingPhoneNumber
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetBillingPhoneNumber
  Kount.Ris.Inquiry.SetShippingAddress*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetShippingAddress*
        name: SetShippingAddress
        nameWithType: Inquiry.SetShippingAddress
        qualifiedName: Kount.Ris.Inquiry.SetShippingAddress
      VB:
      - id: Kount.Ris.Inquiry.SetShippingAddress*
        name: SetShippingAddress
        nameWithType: Inquiry.SetShippingAddress
        qualifiedName: Kount.Ris.Inquiry.SetShippingAddress
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetShippingAddress
  Kount.Ris.Inquiry.SetShippingPhoneNumber*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetShippingPhoneNumber*
        name: SetShippingPhoneNumber
        nameWithType: Inquiry.SetShippingPhoneNumber
        qualifiedName: Kount.Ris.Inquiry.SetShippingPhoneNumber
      VB:
      - id: Kount.Ris.Inquiry.SetShippingPhoneNumber*
        name: SetShippingPhoneNumber
        nameWithType: Inquiry.SetShippingPhoneNumber
        qualifiedName: Kount.Ris.Inquiry.SetShippingPhoneNumber
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetShippingPhoneNumber
  Kount.Ris.Inquiry.SetShippingName*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetShippingName*
        name: SetShippingName
        nameWithType: Inquiry.SetShippingName
        qualifiedName: Kount.Ris.Inquiry.SetShippingName
      VB:
      - id: Kount.Ris.Inquiry.SetShippingName*
        name: SetShippingName
        nameWithType: Inquiry.SetShippingName
        qualifiedName: Kount.Ris.Inquiry.SetShippingName
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetShippingName
  Kount.Ris.Inquiry.SetShippingEmail*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetShippingEmail*
        name: SetShippingEmail
        nameWithType: Inquiry.SetShippingEmail
        qualifiedName: Kount.Ris.Inquiry.SetShippingEmail
      VB:
      - id: Kount.Ris.Inquiry.SetShippingEmail*
        name: SetShippingEmail
        nameWithType: Inquiry.SetShippingEmail
        qualifiedName: Kount.Ris.Inquiry.SetShippingEmail
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetShippingEmail
  Kount.Ris.Inquiry.SetAnid*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetAnid*
        name: SetAnid
        nameWithType: Inquiry.SetAnid
        qualifiedName: Kount.Ris.Inquiry.SetAnid
      VB:
      - id: Kount.Ris.Inquiry.SetAnid*
        name: SetAnid
        nameWithType: Inquiry.SetAnid
        qualifiedName: Kount.Ris.Inquiry.SetAnid
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetAnid
  Kount.Ris.Inquiry.SetWebsite*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetWebsite*
        name: SetWebsite
        nameWithType: Inquiry.SetWebsite
        qualifiedName: Kount.Ris.Inquiry.SetWebsite
      VB:
      - id: Kount.Ris.Inquiry.SetWebsite*
        name: SetWebsite
        nameWithType: Inquiry.SetWebsite
        qualifiedName: Kount.Ris.Inquiry.SetWebsite
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetWebsite
  System.Collections.ArrayList:
    name:
      CSharp:
      - id: System.Collections.ArrayList
        name: System.Collections.ArrayList
        nameWithType: System.Collections.ArrayList
        qualifiedName: System.Collections.ArrayList
        isExternal: true
      VB:
      - id: System.Collections.ArrayList
        name: System.Collections.ArrayList
        nameWithType: System.Collections.ArrayList
        qualifiedName: System.Collections.ArrayList
        isExternal: true
    isDefinition: true
    commentId: '!:System.Collections.ArrayList'
  Kount.Ris.Inquiry.SetCart*:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry.SetCart*
        name: SetCart
        nameWithType: Inquiry.SetCart
        qualifiedName: Kount.Ris.Inquiry.SetCart
      VB:
      - id: Kount.Ris.Inquiry.SetCart*
        name: SetCart
        nameWithType: Inquiry.SetCart
        qualifiedName: Kount.Ris.Inquiry.SetCart
    isDefinition: true
    commentId: Overload:Kount.Ris.Inquiry.SetCart
  Kount.Ris.Inquiry:
    name:
      CSharp:
      - id: Kount.Ris.Inquiry
        name: Inquiry
        nameWithType: Inquiry
        qualifiedName: Kount.Ris.Inquiry
      VB:
      - id: Kount.Ris.Inquiry
        name: Inquiry
        nameWithType: Inquiry
        qualifiedName: Kount.Ris.Inquiry
    isDefinition: true
    commentId: T:Kount.Ris.Inquiry
  Kount.Ris.KcEvent.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.KcEvent.#ctor*
        name: KcEvent
        nameWithType: KcEvent.KcEvent
        qualifiedName: Kount.Ris.KcEvent.KcEvent
      VB:
      - id: Kount.Ris.KcEvent.#ctor*
        name: KcEvent
        nameWithType: KcEvent.KcEvent
        qualifiedName: Kount.Ris.KcEvent.KcEvent
    isDefinition: true
    commentId: Overload:Kount.Ris.KcEvent.#ctor
  Kount.Ris.KcEvent.Code*:
    name:
      CSharp:
      - id: Kount.Ris.KcEvent.Code*
        name: Code
        nameWithType: KcEvent.Code
        qualifiedName: Kount.Ris.KcEvent.Code
      VB:
      - id: Kount.Ris.KcEvent.Code*
        name: Code
        nameWithType: KcEvent.Code
        qualifiedName: Kount.Ris.KcEvent.Code
    isDefinition: true
    commentId: Overload:Kount.Ris.KcEvent.Code
  Kount.Ris.KcEvent.Expression*:
    name:
      CSharp:
      - id: Kount.Ris.KcEvent.Expression*
        name: Expression
        nameWithType: KcEvent.Expression
        qualifiedName: Kount.Ris.KcEvent.Expression
      VB:
      - id: Kount.Ris.KcEvent.Expression*
        name: Expression
        nameWithType: KcEvent.Expression
        qualifiedName: Kount.Ris.KcEvent.Expression
    isDefinition: true
    commentId: Overload:Kount.Ris.KcEvent.Expression
  Kount.Ris.KcEvent.Decision*:
    name:
      CSharp:
      - id: Kount.Ris.KcEvent.Decision*
        name: Decision
        nameWithType: KcEvent.Decision
        qualifiedName: Kount.Ris.KcEvent.Decision
      VB:
      - id: Kount.Ris.KcEvent.Decision*
        name: Decision
        nameWithType: KcEvent.Decision
        qualifiedName: Kount.Ris.KcEvent.Decision
    isDefinition: true
    commentId: Overload:Kount.Ris.KcEvent.Decision
  Kount.Ris.KcEvent.ToString*:
    name:
      CSharp:
      - id: Kount.Ris.KcEvent.ToString*
        name: ToString
        nameWithType: KcEvent.ToString
        qualifiedName: Kount.Ris.KcEvent.ToString
      VB:
      - id: Kount.Ris.KcEvent.ToString*
        name: ToString
        nameWithType: KcEvent.ToString
        qualifiedName: Kount.Ris.KcEvent.ToString
    isDefinition: true
    commentId: Overload:Kount.Ris.KcEvent.ToString
  Kount.Ris.KcEvent:
    name:
      CSharp:
      - id: Kount.Ris.KcEvent
        name: KcEvent
        nameWithType: KcEvent
        qualifiedName: Kount.Ris.KcEvent
      VB:
      - id: Kount.Ris.KcEvent
        name: KcEvent
        nameWithType: KcEvent
        qualifiedName: Kount.Ris.KcEvent
    isDefinition: true
    commentId: T:Kount.Ris.KcEvent
  Kount.Ris.RequestException:
    name:
      CSharp:
      - id: Kount.Ris.RequestException
        name: RequestException
        nameWithType: RequestException
        qualifiedName: Kount.Ris.RequestException
      VB:
      - id: Kount.Ris.RequestException
        name: RequestException
        nameWithType: RequestException
        qualifiedName: Kount.Ris.RequestException
    isDefinition: true
    commentId: T:Kount.Ris.RequestException
  Kount.Ris.Request.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.Request.#ctor*
        name: Request
        nameWithType: Request.Request
        qualifiedName: Kount.Ris.Request.Request
      VB:
      - id: Kount.Ris.Request.#ctor*
        name: Request
        nameWithType: Request.Request
        qualifiedName: Kount.Ris.Request.Request
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.#ctor
  Hashtable:
    name:
      CSharp:
      - id: Hashtable
        name: Hashtable
        nameWithType: Hashtable
        qualifiedName: Hashtable
        isExternal: true
      VB:
      - id: Hashtable
        name: Hashtable
        nameWithType: Hashtable
        qualifiedName: Hashtable
        isExternal: true
    isDefinition: true
    commentId: '!:Hashtable'
  Kount.Ris.Request.Data*:
    name:
      CSharp:
      - id: Kount.Ris.Request.Data*
        name: Data
        nameWithType: Request.Data
        qualifiedName: Kount.Ris.Request.Data
      VB:
      - id: Kount.Ris.Request.Data*
        name: Data
        nameWithType: Request.Data
        qualifiedName: Kount.Ris.Request.Data
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.Data
  Kount.Ris.Response:
    name:
      CSharp:
      - id: Kount.Ris.Response
        name: Response
        nameWithType: Response
        qualifiedName: Kount.Ris.Response
      VB:
      - id: Kount.Ris.Response
        name: Response
        nameWithType: Response
        qualifiedName: Kount.Ris.Response
    isDefinition: true
    parent: Kount.Ris
    commentId: T:Kount.Ris.Response
  Kount.Ris.Request.GetResponse*:
    name:
      CSharp:
      - id: Kount.Ris.Request.GetResponse*
        name: GetResponse
        nameWithType: Request.GetResponse
        qualifiedName: Kount.Ris.Request.GetResponse
      VB:
      - id: Kount.Ris.Request.GetResponse*
        name: GetResponse
        nameWithType: Request.GetResponse
        qualifiedName: Kount.Ris.Request.GetResponse
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.GetResponse
  Kount.Ris.Request.SetParameter*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetParameter*
        name: SetParameter
        nameWithType: Request.SetParameter
        qualifiedName: Kount.Ris.Request.SetParameter
      VB:
      - id: Kount.Ris.Request.SetParameter*
        name: SetParameter
        nameWithType: Request.SetParameter
        qualifiedName: Kount.Ris.Request.SetParameter
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetParameter
  Kount.Ris.Request.SetMode*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetMode*
        name: SetMode
        nameWithType: Request.SetMode
        qualifiedName: Kount.Ris.Request.SetMode
      VB:
      - id: Kount.Ris.Request.SetMode*
        name: SetMode
        nameWithType: Request.SetMode
        qualifiedName: Kount.Ris.Request.SetMode
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetMode
  Kount.Ris.Request.SetMerchantId*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetMerchantId*
        name: SetMerchantId
        nameWithType: Request.SetMerchantId
        qualifiedName: Kount.Ris.Request.SetMerchantId
      VB:
      - id: Kount.Ris.Request.SetMerchantId*
        name: SetMerchantId
        nameWithType: Request.SetMerchantId
        qualifiedName: Kount.Ris.Request.SetMerchantId
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetMerchantId
  Kount.Ris.Request.SetKountCentralCustomerId*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetKountCentralCustomerId*
        name: SetKountCentralCustomerId
        nameWithType: Request.SetKountCentralCustomerId
        qualifiedName: Kount.Ris.Request.SetKountCentralCustomerId
      VB:
      - id: Kount.Ris.Request.SetKountCentralCustomerId*
        name: SetKountCentralCustomerId
        nameWithType: Request.SetKountCentralCustomerId
        qualifiedName: Kount.Ris.Request.SetKountCentralCustomerId
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetKountCentralCustomerId
  Kount.Ris.Request.SetSessionId*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetSessionId*
        name: SetSessionId
        nameWithType: Request.SetSessionId
        qualifiedName: Kount.Ris.Request.SetSessionId
      VB:
      - id: Kount.Ris.Request.SetSessionId*
        name: SetSessionId
        nameWithType: Request.SetSessionId
        qualifiedName: Kount.Ris.Request.SetSessionId
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetSessionId
  Kount.Ris.Request.SetOrderNumber*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetOrderNumber*
        name: SetOrderNumber
        nameWithType: Request.SetOrderNumber
        qualifiedName: Kount.Ris.Request.SetOrderNumber
      VB:
      - id: Kount.Ris.Request.SetOrderNumber*
        name: SetOrderNumber
        nameWithType: Request.SetOrderNumber
        qualifiedName: Kount.Ris.Request.SetOrderNumber
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetOrderNumber
  Kount.Ris.Request.SetMack*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetMack*
        name: SetMack
        nameWithType: Request.SetMack
        qualifiedName: Kount.Ris.Request.SetMack
      VB:
      - id: Kount.Ris.Request.SetMack*
        name: SetMack
        nameWithType: Request.SetMack
        qualifiedName: Kount.Ris.Request.SetMack
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetMack
  Kount.Ris.Request.SetAuth*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetAuth*
        name: SetAuth
        nameWithType: Request.SetAuth
        qualifiedName: Kount.Ris.Request.SetAuth
      VB:
      - id: Kount.Ris.Request.SetAuth*
        name: SetAuth
        nameWithType: Request.SetAuth
        qualifiedName: Kount.Ris.Request.SetAuth
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetAuth
  Kount.Ris.Request.SetAvsz*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetAvsz*
        name: SetAvsz
        nameWithType: Request.SetAvsz
        qualifiedName: Kount.Ris.Request.SetAvsz
      VB:
      - id: Kount.Ris.Request.SetAvsz*
        name: SetAvsz
        nameWithType: Request.SetAvsz
        qualifiedName: Kount.Ris.Request.SetAvsz
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetAvsz
  Kount.Ris.Request.SetAvst*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetAvst*
        name: SetAvst
        nameWithType: Request.SetAvst
        qualifiedName: Kount.Ris.Request.SetAvst
      VB:
      - id: Kount.Ris.Request.SetAvst*
        name: SetAvst
        nameWithType: Request.SetAvst
        qualifiedName: Kount.Ris.Request.SetAvst
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetAvst
  Kount.Ris.Request.SetCvvr*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetCvvr*
        name: SetCvvr
        nameWithType: Request.SetCvvr
        qualifiedName: Kount.Ris.Request.SetCvvr
      VB:
      - id: Kount.Ris.Request.SetCvvr*
        name: SetCvvr
        nameWithType: Request.SetCvvr
        qualifiedName: Kount.Ris.Request.SetCvvr
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetCvvr
  Kount.Ris.Request.SetCardPaymentMasked*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetCardPaymentMasked*
        name: SetCardPaymentMasked
        nameWithType: Request.SetCardPaymentMasked
        qualifiedName: Kount.Ris.Request.SetCardPaymentMasked
      VB:
      - id: Kount.Ris.Request.SetCardPaymentMasked*
        name: SetCardPaymentMasked
        nameWithType: Request.SetCardPaymentMasked
        qualifiedName: Kount.Ris.Request.SetCardPaymentMasked
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetCardPaymentMasked
  Kount.Ris.Request.SetNoPayment*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetNoPayment*
        name: SetNoPayment
        nameWithType: Request.SetNoPayment
        qualifiedName: Kount.Ris.Request.SetNoPayment
      VB:
      - id: Kount.Ris.Request.SetNoPayment*
        name: SetNoPayment
        nameWithType: Request.SetNoPayment
        qualifiedName: Kount.Ris.Request.SetNoPayment
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetNoPayment
  Kount.Ris.Request.SetPayment*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetPayment*
        name: SetPayment
        nameWithType: Request.SetPayment
        qualifiedName: Kount.Ris.Request.SetPayment
      VB:
      - id: Kount.Ris.Request.SetPayment*
        name: SetPayment
        nameWithType: Request.SetPayment
        qualifiedName: Kount.Ris.Request.SetPayment
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetPayment
  Kount.Ris.Request.SetGreenDotMoneyPakPayment*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetGreenDotMoneyPakPayment*
        name: SetGreenDotMoneyPakPayment
        nameWithType: Request.SetGreenDotMoneyPakPayment
        qualifiedName: Kount.Ris.Request.SetGreenDotMoneyPakPayment
      VB:
      - id: Kount.Ris.Request.SetGreenDotMoneyPakPayment*
        name: SetGreenDotMoneyPakPayment
        nameWithType: Request.SetGreenDotMoneyPakPayment
        qualifiedName: Kount.Ris.Request.SetGreenDotMoneyPakPayment
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetGreenDotMoneyPakPayment
  Kount.Ris.Request.GetParam*:
    name:
      CSharp:
      - id: Kount.Ris.Request.GetParam*
        name: GetParam
        nameWithType: Request.GetParam
        qualifiedName: Kount.Ris.Request.GetParam
      VB:
      - id: Kount.Ris.Request.GetParam*
        name: GetParam
        nameWithType: Request.GetParam
        qualifiedName: Kount.Ris.Request.GetParam
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.GetParam
  Kount.Ris.Request.GetUrl*:
    name:
      CSharp:
      - id: Kount.Ris.Request.GetUrl*
        name: GetUrl
        nameWithType: Request.GetUrl
        qualifiedName: Kount.Ris.Request.GetUrl
      VB:
      - id: Kount.Ris.Request.GetUrl*
        name: GetUrl
        nameWithType: Request.GetUrl
        qualifiedName: Kount.Ris.Request.GetUrl
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.GetUrl
  Kount.Ris.Request.SetUrl*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetUrl*
        name: SetUrl
        nameWithType: Request.SetUrl
        qualifiedName: Kount.Ris.Request.SetUrl
      VB:
      - id: Kount.Ris.Request.SetUrl*
        name: SetUrl
        nameWithType: Request.SetUrl
        qualifiedName: Kount.Ris.Request.SetUrl
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetUrl
  Kount.Ris.Request.SetCertificate*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetCertificate*
        name: SetCertificate
        nameWithType: Request.SetCertificate
        qualifiedName: Kount.Ris.Request.SetCertificate
      VB:
      - id: Kount.Ris.Request.SetCertificate*
        name: SetCertificate
        nameWithType: Request.SetCertificate
        qualifiedName: Kount.Ris.Request.SetCertificate
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetCertificate
  Kount.Ris.Request.SetApiKey*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetApiKey*
        name: SetApiKey
        nameWithType: Request.SetApiKey
        qualifiedName: Kount.Ris.Request.SetApiKey
      VB:
      - id: Kount.Ris.Request.SetApiKey*
        name: SetApiKey
        nameWithType: Request.SetApiKey
        qualifiedName: Kount.Ris.Request.SetApiKey
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetApiKey
  Kount.Ris.Request.GetCertificateFile*:
    name:
      CSharp:
      - id: Kount.Ris.Request.GetCertificateFile*
        name: GetCertificateFile
        nameWithType: Request.GetCertificateFile
        qualifiedName: Kount.Ris.Request.GetCertificateFile
      VB:
      - id: Kount.Ris.Request.GetCertificateFile*
        name: GetCertificateFile
        nameWithType: Request.GetCertificateFile
        qualifiedName: Kount.Ris.Request.GetCertificateFile
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.GetCertificateFile
  Kount.Ris.Request.GetPrivateKeyPassword*:
    name:
      CSharp:
      - id: Kount.Ris.Request.GetPrivateKeyPassword*
        name: GetPrivateKeyPassword
        nameWithType: Request.GetPrivateKeyPassword
        qualifiedName: Kount.Ris.Request.GetPrivateKeyPassword
      VB:
      - id: Kount.Ris.Request.GetPrivateKeyPassword*
        name: GetPrivateKeyPassword
        nameWithType: Request.GetPrivateKeyPassword
        qualifiedName: Kount.Ris.Request.GetPrivateKeyPassword
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.GetPrivateKeyPassword
  Kount.Ris.Request.SetKhashPaymentEncoding*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetKhashPaymentEncoding*
        name: SetKhashPaymentEncoding
        nameWithType: Request.SetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.SetKhashPaymentEncoding
      VB:
      - id: Kount.Ris.Request.SetKhashPaymentEncoding*
        name: SetKhashPaymentEncoding
        nameWithType: Request.SetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.SetKhashPaymentEncoding
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetKhashPaymentEncoding
  Kount.Ris.Request.SetPaymentTokenLast4*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetPaymentTokenLast4*
        name: SetPaymentTokenLast4
        nameWithType: Request.SetPaymentTokenLast4
        qualifiedName: Kount.Ris.Request.SetPaymentTokenLast4
      VB:
      - id: Kount.Ris.Request.SetPaymentTokenLast4*
        name: SetPaymentTokenLast4
        nameWithType: Request.SetPaymentTokenLast4
        qualifiedName: Kount.Ris.Request.SetPaymentTokenLast4
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetPaymentTokenLast4
  Kount.Ris.Request.SetVersion*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetVersion*
        name: SetVersion
        nameWithType: Request.SetVersion
        qualifiedName: Kount.Ris.Request.SetVersion
      VB:
      - id: Kount.Ris.Request.SetVersion*
        name: SetVersion
        nameWithType: Request.SetVersion
        qualifiedName: Kount.Ris.Request.SetVersion
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetVersion
  Kount.Ris.Request.IsSetKhashPaymentEncoding*:
    name:
      CSharp:
      - id: Kount.Ris.Request.IsSetKhashPaymentEncoding*
        name: IsSetKhashPaymentEncoding
        nameWithType: Request.IsSetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.IsSetKhashPaymentEncoding
      VB:
      - id: Kount.Ris.Request.IsSetKhashPaymentEncoding*
        name: IsSetKhashPaymentEncoding
        nameWithType: Request.IsSetKhashPaymentEncoding
        qualifiedName: Kount.Ris.Request.IsSetKhashPaymentEncoding
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.IsSetKhashPaymentEncoding
  Kount.Ris.Request.SetPaymentToken*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SetPaymentToken*
        name: SetPaymentToken
        nameWithType: Request.SetPaymentToken
        qualifiedName: Kount.Ris.Request.SetPaymentToken
      VB:
      - id: Kount.Ris.Request.SetPaymentToken*
        name: SetPaymentToken
        nameWithType: Request.SetPaymentToken
        qualifiedName: Kount.Ris.Request.SetPaymentToken
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SetPaymentToken
  Kount.Ris.Request.CheckConfigurationParameter*:
    name:
      CSharp:
      - id: Kount.Ris.Request.CheckConfigurationParameter*
        name: CheckConfigurationParameter
        nameWithType: Request.CheckConfigurationParameter
        qualifiedName: Kount.Ris.Request.CheckConfigurationParameter
      VB:
      - id: Kount.Ris.Request.CheckConfigurationParameter*
        name: CheckConfigurationParameter
        nameWithType: Request.CheckConfigurationParameter
        qualifiedName: Kount.Ris.Request.CheckConfigurationParameter
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.CheckConfigurationParameter
  Kount.Ris.Request.SafeGet*:
    name:
      CSharp:
      - id: Kount.Ris.Request.SafeGet*
        name: SafeGet
        nameWithType: Request.SafeGet
        qualifiedName: Kount.Ris.Request.SafeGet
      VB:
      - id: Kount.Ris.Request.SafeGet*
        name: SafeGet
        nameWithType: Request.SafeGet
        qualifiedName: Kount.Ris.Request.SafeGet
    isDefinition: true
    commentId: Overload:Kount.Ris.Request.SafeGet
  Kount.Ris.RequestException.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.RequestException.#ctor*
        name: RequestException
        nameWithType: RequestException.RequestException
        qualifiedName: Kount.Ris.RequestException.RequestException
      VB:
      - id: Kount.Ris.RequestException.#ctor*
        name: RequestException
        nameWithType: RequestException.RequestException
        qualifiedName: Kount.Ris.RequestException.RequestException
    isDefinition: true
    commentId: Overload:Kount.Ris.RequestException.#ctor
  Kount.Ris.RequestException.ErrorMessage*:
    name:
      CSharp:
      - id: Kount.Ris.RequestException.ErrorMessage*
        name: ErrorMessage
        nameWithType: RequestException.ErrorMessage
        qualifiedName: Kount.Ris.RequestException.ErrorMessage
      VB:
      - id: Kount.Ris.RequestException.ErrorMessage*
        name: ErrorMessage
        nameWithType: RequestException.ErrorMessage
        qualifiedName: Kount.Ris.RequestException.ErrorMessage
    isDefinition: true
    commentId: Overload:Kount.Ris.RequestException.ErrorMessage
  Kount.Ris.Response.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.Response.#ctor*
        name: Response
        nameWithType: Response.Response
        qualifiedName: Kount.Ris.Response.Response
      VB:
      - id: Kount.Ris.Response.#ctor*
        name: Response
        nameWithType: Response.Response
        qualifiedName: Kount.Ris.Response.Response
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.#ctor
  Kount.Ris.Response.GetErrorCode*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetErrorCode*
        name: GetErrorCode
        nameWithType: Response.GetErrorCode
        qualifiedName: Kount.Ris.Response.GetErrorCode
      VB:
      - id: Kount.Ris.Response.GetErrorCode*
        name: GetErrorCode
        nameWithType: Response.GetErrorCode
        qualifiedName: Kount.Ris.Response.GetErrorCode
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetErrorCode
  Kount.Ris.Response.GetVersion*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetVersion*
        name: GetVersion
        nameWithType: Response.GetVersion
        qualifiedName: Kount.Ris.Response.GetVersion
      VB:
      - id: Kount.Ris.Response.GetVersion*
        name: GetVersion
        nameWithType: Response.GetVersion
        qualifiedName: Kount.Ris.Response.GetVersion
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetVersion
  Kount.Ris.Response.GetMode*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetMode*
        name: GetMode
        nameWithType: Response.GetMode
        qualifiedName: Kount.Ris.Response.GetMode
      VB:
      - id: Kount.Ris.Response.GetMode*
        name: GetMode
        nameWithType: Response.GetMode
        qualifiedName: Kount.Ris.Response.GetMode
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetMode
  Kount.Ris.Response.GetTransactionId*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetTransactionId*
        name: GetTransactionId
        nameWithType: Response.GetTransactionId
        qualifiedName: Kount.Ris.Response.GetTransactionId
      VB:
      - id: Kount.Ris.Response.GetTransactionId*
        name: GetTransactionId
        nameWithType: Response.GetTransactionId
        qualifiedName: Kount.Ris.Response.GetTransactionId
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetTransactionId
  Kount.Ris.Response.GetMerchantId*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetMerchantId*
        name: GetMerchantId
        nameWithType: Response.GetMerchantId
        qualifiedName: Kount.Ris.Response.GetMerchantId
      VB:
      - id: Kount.Ris.Response.GetMerchantId*
        name: GetMerchantId
        nameWithType: Response.GetMerchantId
        qualifiedName: Kount.Ris.Response.GetMerchantId
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetMerchantId
  Kount.Ris.Response.GetSessionId*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetSessionId*
        name: GetSessionId
        nameWithType: Response.GetSessionId
        qualifiedName: Kount.Ris.Response.GetSessionId
      VB:
      - id: Kount.Ris.Response.GetSessionId*
        name: GetSessionId
        nameWithType: Response.GetSessionId
        qualifiedName: Kount.Ris.Response.GetSessionId
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetSessionId
  Kount.Ris.Response.GetOrderNumber*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetOrderNumber*
        name: GetOrderNumber
        nameWithType: Response.GetOrderNumber
        qualifiedName: Kount.Ris.Response.GetOrderNumber
      VB:
      - id: Kount.Ris.Response.GetOrderNumber*
        name: GetOrderNumber
        nameWithType: Response.GetOrderNumber
        qualifiedName: Kount.Ris.Response.GetOrderNumber
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetOrderNumber
  Kount.Ris.Response.GetAuto*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetAuto*
        name: GetAuto
        nameWithType: Response.GetAuto
        qualifiedName: Kount.Ris.Response.GetAuto
      VB:
      - id: Kount.Ris.Response.GetAuto*
        name: GetAuto
        nameWithType: Response.GetAuto
        qualifiedName: Kount.Ris.Response.GetAuto
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetAuto
  Kount.Ris.Response.GetReason*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetReason*
        name: GetReason
        nameWithType: Response.GetReason
        qualifiedName: Kount.Ris.Response.GetReason
      VB:
      - id: Kount.Ris.Response.GetReason*
        name: GetReason
        nameWithType: Response.GetReason
        qualifiedName: Kount.Ris.Response.GetReason
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetReason
  Kount.Ris.Response.GetReasonCode*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetReasonCode*
        name: GetReasonCode
        nameWithType: Response.GetReasonCode
        qualifiedName: Kount.Ris.Response.GetReasonCode
      VB:
      - id: Kount.Ris.Response.GetReasonCode*
        name: GetReasonCode
        nameWithType: Response.GetReasonCode
        qualifiedName: Kount.Ris.Response.GetReasonCode
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetReasonCode
  Kount.Ris.Response.GetScore*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetScore*
        name: GetScore
        nameWithType: Response.GetScore
        qualifiedName: Kount.Ris.Response.GetScore
      VB:
      - id: Kount.Ris.Response.GetScore*
        name: GetScore
        nameWithType: Response.GetScore
        qualifiedName: Kount.Ris.Response.GetScore
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetScore
  Kount.Ris.Response.GetGeox*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetGeox*
        name: GetGeox
        nameWithType: Response.GetGeox
        qualifiedName: Kount.Ris.Response.GetGeox
      VB:
      - id: Kount.Ris.Response.GetGeox*
        name: GetGeox
        nameWithType: Response.GetGeox
        qualifiedName: Kount.Ris.Response.GetGeox
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetGeox
  Kount.Ris.Response.GetBrand*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetBrand*
        name: GetBrand
        nameWithType: Response.GetBrand
        qualifiedName: Kount.Ris.Response.GetBrand
      VB:
      - id: Kount.Ris.Response.GetBrand*
        name: GetBrand
        nameWithType: Response.GetBrand
        qualifiedName: Kount.Ris.Response.GetBrand
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetBrand
  Kount.Ris.Response.GetVelo*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetVelo*
        name: GetVelo
        nameWithType: Response.GetVelo
        qualifiedName: Kount.Ris.Response.GetVelo
      VB:
      - id: Kount.Ris.Response.GetVelo*
        name: GetVelo
        nameWithType: Response.GetVelo
        qualifiedName: Kount.Ris.Response.GetVelo
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetVelo
  Kount.Ris.Response.GetVmax*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetVmax*
        name: GetVmax
        nameWithType: Response.GetVmax
        qualifiedName: Kount.Ris.Response.GetVmax
      VB:
      - id: Kount.Ris.Response.GetVmax*
        name: GetVmax
        nameWithType: Response.GetVmax
        qualifiedName: Kount.Ris.Response.GetVmax
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetVmax
  Kount.Ris.Response.GetNetwork*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetNetwork*
        name: GetNetwork
        nameWithType: Response.GetNetwork
        qualifiedName: Kount.Ris.Response.GetNetwork
      VB:
      - id: Kount.Ris.Response.GetNetwork*
        name: GetNetwork
        nameWithType: Response.GetNetwork
        qualifiedName: Kount.Ris.Response.GetNetwork
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetNetwork
  Kount.Ris.Response.GetKnowYourCustomer*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKnowYourCustomer*
        name: GetKnowYourCustomer
        nameWithType: Response.GetKnowYourCustomer
        qualifiedName: Kount.Ris.Response.GetKnowYourCustomer
      VB:
      - id: Kount.Ris.Response.GetKnowYourCustomer*
        name: GetKnowYourCustomer
        nameWithType: Response.GetKnowYourCustomer
        qualifiedName: Kount.Ris.Response.GetKnowYourCustomer
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKnowYourCustomer
  Kount.Ris.Response.GetRegion*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetRegion*
        name: GetRegion
        nameWithType: Response.GetRegion
        qualifiedName: Kount.Ris.Response.GetRegion
      VB:
      - id: Kount.Ris.Response.GetRegion*
        name: GetRegion
        nameWithType: Response.GetRegion
        qualifiedName: Kount.Ris.Response.GetRegion
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetRegion
  Kount.Ris.Response.GetKaptcha*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKaptcha*
        name: GetKaptcha
        nameWithType: Response.GetKaptcha
        qualifiedName: Kount.Ris.Response.GetKaptcha
      VB:
      - id: Kount.Ris.Response.GetKaptcha*
        name: GetKaptcha
        nameWithType: Response.GetKaptcha
        qualifiedName: Kount.Ris.Response.GetKaptcha
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKaptcha
  Kount.Ris.Response.GetProxy*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetProxy*
        name: GetProxy
        nameWithType: Response.GetProxy
        qualifiedName: Kount.Ris.Response.GetProxy
      VB:
      - id: Kount.Ris.Response.GetProxy*
        name: GetProxy
        nameWithType: Response.GetProxy
        qualifiedName: Kount.Ris.Response.GetProxy
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetProxy
  Kount.Ris.Response.GetEmails*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetEmails*
        name: GetEmails
        nameWithType: Response.GetEmails
        qualifiedName: Kount.Ris.Response.GetEmails
      VB:
      - id: Kount.Ris.Response.GetEmails*
        name: GetEmails
        nameWithType: Response.GetEmails
        qualifiedName: Kount.Ris.Response.GetEmails
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetEmails
  Kount.Ris.Response.GetHttpCountry*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetHttpCountry*
        name: GetHttpCountry
        nameWithType: Response.GetHttpCountry
        qualifiedName: Kount.Ris.Response.GetHttpCountry
      VB:
      - id: Kount.Ris.Response.GetHttpCountry*
        name: GetHttpCountry
        nameWithType: Response.GetHttpCountry
        qualifiedName: Kount.Ris.Response.GetHttpCountry
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetHttpCountry
  Kount.Ris.Response.GetTimeZone*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetTimeZone*
        name: GetTimeZone
        nameWithType: Response.GetTimeZone
        qualifiedName: Kount.Ris.Response.GetTimeZone
      VB:
      - id: Kount.Ris.Response.GetTimeZone*
        name: GetTimeZone
        nameWithType: Response.GetTimeZone
        qualifiedName: Kount.Ris.Response.GetTimeZone
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetTimeZone
  Kount.Ris.Response.GetCards*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetCards*
        name: GetCards
        nameWithType: Response.GetCards
        qualifiedName: Kount.Ris.Response.GetCards
      VB:
      - id: Kount.Ris.Response.GetCards*
        name: GetCards
        nameWithType: Response.GetCards
        qualifiedName: Kount.Ris.Response.GetCards
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetCards
  Kount.Ris.Response.GetPcRemote*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetPcRemote*
        name: GetPcRemote
        nameWithType: Response.GetPcRemote
        qualifiedName: Kount.Ris.Response.GetPcRemote
      VB:
      - id: Kount.Ris.Response.GetPcRemote*
        name: GetPcRemote
        nameWithType: Response.GetPcRemote
        qualifiedName: Kount.Ris.Response.GetPcRemote
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetPcRemote
  Kount.Ris.Response.GetDevices*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetDevices*
        name: GetDevices
        nameWithType: Response.GetDevices
        qualifiedName: Kount.Ris.Response.GetDevices
      VB:
      - id: Kount.Ris.Response.GetDevices*
        name: GetDevices
        nameWithType: Response.GetDevices
        qualifiedName: Kount.Ris.Response.GetDevices
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetDevices
  Kount.Ris.Response.GetDeviceLayers*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetDeviceLayers*
        name: GetDeviceLayers
        nameWithType: Response.GetDeviceLayers
        qualifiedName: Kount.Ris.Response.GetDeviceLayers
      VB:
      - id: Kount.Ris.Response.GetDeviceLayers*
        name: GetDeviceLayers
        nameWithType: Response.GetDeviceLayers
        qualifiedName: Kount.Ris.Response.GetDeviceLayers
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetDeviceLayers
  Kount.Ris.Response.GetMobileForwarder*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetMobileForwarder*
        name: GetMobileForwarder
        nameWithType: Response.GetMobileForwarder
        qualifiedName: Kount.Ris.Response.GetMobileForwarder
      VB:
      - id: Kount.Ris.Response.GetMobileForwarder*
        name: GetMobileForwarder
        nameWithType: Response.GetMobileForwarder
        qualifiedName: Kount.Ris.Response.GetMobileForwarder
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetMobileForwarder
  Kount.Ris.Response.GetVoiceDevice*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetVoiceDevice*
        name: GetVoiceDevice
        nameWithType: Response.GetVoiceDevice
        qualifiedName: Kount.Ris.Response.GetVoiceDevice
      VB:
      - id: Kount.Ris.Response.GetVoiceDevice*
        name: GetVoiceDevice
        nameWithType: Response.GetVoiceDevice
        qualifiedName: Kount.Ris.Response.GetVoiceDevice
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetVoiceDevice
  Kount.Ris.Response.GetLocalTime*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetLocalTime*
        name: GetLocalTime
        nameWithType: Response.GetLocalTime
        qualifiedName: Kount.Ris.Response.GetLocalTime
      VB:
      - id: Kount.Ris.Response.GetLocalTime*
        name: GetLocalTime
        nameWithType: Response.GetLocalTime
        qualifiedName: Kount.Ris.Response.GetLocalTime
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetLocalTime
  Kount.Ris.Response.GetMobileType*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetMobileType*
        name: GetMobileType
        nameWithType: Response.GetMobileType
        qualifiedName: Kount.Ris.Response.GetMobileType
      VB:
      - id: Kount.Ris.Response.GetMobileType*
        name: GetMobileType
        nameWithType: Response.GetMobileType
        qualifiedName: Kount.Ris.Response.GetMobileType
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetMobileType
  Kount.Ris.Response.GetFingerPrint*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetFingerPrint*
        name: GetFingerPrint
        nameWithType: Response.GetFingerPrint
        qualifiedName: Kount.Ris.Response.GetFingerPrint
      VB:
      - id: Kount.Ris.Response.GetFingerPrint*
        name: GetFingerPrint
        nameWithType: Response.GetFingerPrint
        qualifiedName: Kount.Ris.Response.GetFingerPrint
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetFingerPrint
  Kount.Ris.Response.GetFlash*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetFlash*
        name: GetFlash
        nameWithType: Response.GetFlash
        qualifiedName: Kount.Ris.Response.GetFlash
      VB:
      - id: Kount.Ris.Response.GetFlash*
        name: GetFlash
        nameWithType: Response.GetFlash
        qualifiedName: Kount.Ris.Response.GetFlash
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetFlash
  Kount.Ris.Response.GetLanguage*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetLanguage*
        name: GetLanguage
        nameWithType: Response.GetLanguage
        qualifiedName: Kount.Ris.Response.GetLanguage
      VB:
      - id: Kount.Ris.Response.GetLanguage*
        name: GetLanguage
        nameWithType: Response.GetLanguage
        qualifiedName: Kount.Ris.Response.GetLanguage
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetLanguage
  Kount.Ris.Response.GetCountry*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetCountry*
        name: GetCountry
        nameWithType: Response.GetCountry
        qualifiedName: Kount.Ris.Response.GetCountry
      VB:
      - id: Kount.Ris.Response.GetCountry*
        name: GetCountry
        nameWithType: Response.GetCountry
        qualifiedName: Kount.Ris.Response.GetCountry
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetCountry
  Kount.Ris.Response.GetJavaScript*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetJavaScript*
        name: GetJavaScript
        nameWithType: Response.GetJavaScript
        qualifiedName: Kount.Ris.Response.GetJavaScript
      VB:
      - id: Kount.Ris.Response.GetJavaScript*
        name: GetJavaScript
        nameWithType: Response.GetJavaScript
        qualifiedName: Kount.Ris.Response.GetJavaScript
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetJavaScript
  Kount.Ris.Response.GetCookies*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetCookies*
        name: GetCookies
        nameWithType: Response.GetCookies
        qualifiedName: Kount.Ris.Response.GetCookies
      VB:
      - id: Kount.Ris.Response.GetCookies*
        name: GetCookies
        nameWithType: Response.GetCookies
        qualifiedName: Kount.Ris.Response.GetCookies
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetCookies
  Kount.Ris.Response.GetMobileDevice*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetMobileDevice*
        name: GetMobileDevice
        nameWithType: Response.GetMobileDevice
        qualifiedName: Kount.Ris.Response.GetMobileDevice
      VB:
      - id: Kount.Ris.Response.GetMobileDevice*
        name: GetMobileDevice
        nameWithType: Response.GetMobileDevice
        qualifiedName: Kount.Ris.Response.GetMobileDevice
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetMobileDevice
  Kount.Ris.Response.GetSite*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetSite*
        name: GetSite
        nameWithType: Response.GetSite
        qualifiedName: Kount.Ris.Response.GetSite
      VB:
      - id: Kount.Ris.Response.GetSite*
        name: GetSite
        nameWithType: Response.GetSite
        qualifiedName: Kount.Ris.Response.GetSite
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetSite
  Kount.Ris.Response.GetMasterCardFraudScore*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetMasterCardFraudScore*
        name: GetMasterCardFraudScore
        nameWithType: Response.GetMasterCardFraudScore
        qualifiedName: Kount.Ris.Response.GetMasterCardFraudScore
      VB:
      - id: Kount.Ris.Response.GetMasterCardFraudScore*
        name: GetMasterCardFraudScore
        nameWithType: Response.GetMasterCardFraudScore
        qualifiedName: Kount.Ris.Response.GetMasterCardFraudScore
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetMasterCardFraudScore
  Kount.Ris.Response.GetPiercedIPAddress*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetPiercedIPAddress*
        name: GetPiercedIPAddress
        nameWithType: Response.GetPiercedIPAddress
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddress
      VB:
      - id: Kount.Ris.Response.GetPiercedIPAddress*
        name: GetPiercedIPAddress
        nameWithType: Response.GetPiercedIPAddress
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddress
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetPiercedIPAddress
  Kount.Ris.Response.GetPiercedIPAddressLatitude*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetPiercedIPAddressLatitude*
        name: GetPiercedIPAddressLatitude
        nameWithType: Response.GetPiercedIPAddressLatitude
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressLatitude
      VB:
      - id: Kount.Ris.Response.GetPiercedIPAddressLatitude*
        name: GetPiercedIPAddressLatitude
        nameWithType: Response.GetPiercedIPAddressLatitude
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressLatitude
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetPiercedIPAddressLatitude
  Kount.Ris.Response.GetPiercedIPAddressLongitude*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetPiercedIPAddressLongitude*
        name: GetPiercedIPAddressLongitude
        nameWithType: Response.GetPiercedIPAddressLongitude
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressLongitude
      VB:
      - id: Kount.Ris.Response.GetPiercedIPAddressLongitude*
        name: GetPiercedIPAddressLongitude
        nameWithType: Response.GetPiercedIPAddressLongitude
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressLongitude
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetPiercedIPAddressLongitude
  Kount.Ris.Response.GetPiercedIPAddressCountry*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetPiercedIPAddressCountry*
        name: GetPiercedIPAddressCountry
        nameWithType: Response.GetPiercedIPAddressCountry
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressCountry
      VB:
      - id: Kount.Ris.Response.GetPiercedIPAddressCountry*
        name: GetPiercedIPAddressCountry
        nameWithType: Response.GetPiercedIPAddressCountry
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressCountry
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetPiercedIPAddressCountry
  Kount.Ris.Response.GetPiercedIPAddressRegion*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetPiercedIPAddressRegion*
        name: GetPiercedIPAddressRegion
        nameWithType: Response.GetPiercedIPAddressRegion
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressRegion
      VB:
      - id: Kount.Ris.Response.GetPiercedIPAddressRegion*
        name: GetPiercedIPAddressRegion
        nameWithType: Response.GetPiercedIPAddressRegion
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressRegion
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetPiercedIPAddressRegion
  Kount.Ris.Response.GetPiercedIPAddressCity*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetPiercedIPAddressCity*
        name: GetPiercedIPAddressCity
        nameWithType: Response.GetPiercedIPAddressCity
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressCity
      VB:
      - id: Kount.Ris.Response.GetPiercedIPAddressCity*
        name: GetPiercedIPAddressCity
        nameWithType: Response.GetPiercedIPAddressCity
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressCity
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetPiercedIPAddressCity
  Kount.Ris.Response.GetPiercedIPAddressOrganization*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetPiercedIPAddressOrganization*
        name: GetPiercedIPAddressOrganization
        nameWithType: Response.GetPiercedIPAddressOrganization
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressOrganization
      VB:
      - id: Kount.Ris.Response.GetPiercedIPAddressOrganization*
        name: GetPiercedIPAddressOrganization
        nameWithType: Response.GetPiercedIPAddressOrganization
        qualifiedName: Kount.Ris.Response.GetPiercedIPAddressOrganization
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetPiercedIPAddressOrganization
  Kount.Ris.Response.GetIPAddress*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetIPAddress*
        name: GetIPAddress
        nameWithType: Response.GetIPAddress
        qualifiedName: Kount.Ris.Response.GetIPAddress
      VB:
      - id: Kount.Ris.Response.GetIPAddress*
        name: GetIPAddress
        nameWithType: Response.GetIPAddress
        qualifiedName: Kount.Ris.Response.GetIPAddress
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetIPAddress
  Kount.Ris.Response.GetIPAddressLatitude*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetIPAddressLatitude*
        name: GetIPAddressLatitude
        nameWithType: Response.GetIPAddressLatitude
        qualifiedName: Kount.Ris.Response.GetIPAddressLatitude
      VB:
      - id: Kount.Ris.Response.GetIPAddressLatitude*
        name: GetIPAddressLatitude
        nameWithType: Response.GetIPAddressLatitude
        qualifiedName: Kount.Ris.Response.GetIPAddressLatitude
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetIPAddressLatitude
  Kount.Ris.Response.GetIPAddressLongitude*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetIPAddressLongitude*
        name: GetIPAddressLongitude
        nameWithType: Response.GetIPAddressLongitude
        qualifiedName: Kount.Ris.Response.GetIPAddressLongitude
      VB:
      - id: Kount.Ris.Response.GetIPAddressLongitude*
        name: GetIPAddressLongitude
        nameWithType: Response.GetIPAddressLongitude
        qualifiedName: Kount.Ris.Response.GetIPAddressLongitude
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetIPAddressLongitude
  Kount.Ris.Response.GetIPAddressCountry*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetIPAddressCountry*
        name: GetIPAddressCountry
        nameWithType: Response.GetIPAddressCountry
        qualifiedName: Kount.Ris.Response.GetIPAddressCountry
      VB:
      - id: Kount.Ris.Response.GetIPAddressCountry*
        name: GetIPAddressCountry
        nameWithType: Response.GetIPAddressCountry
        qualifiedName: Kount.Ris.Response.GetIPAddressCountry
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetIPAddressCountry
  Kount.Ris.Response.GetIPAddressRegion*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetIPAddressRegion*
        name: GetIPAddressRegion
        nameWithType: Response.GetIPAddressRegion
        qualifiedName: Kount.Ris.Response.GetIPAddressRegion
      VB:
      - id: Kount.Ris.Response.GetIPAddressRegion*
        name: GetIPAddressRegion
        nameWithType: Response.GetIPAddressRegion
        qualifiedName: Kount.Ris.Response.GetIPAddressRegion
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetIPAddressRegion
  Kount.Ris.Response.GetIPAddressCity*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetIPAddressCity*
        name: GetIPAddressCity
        nameWithType: Response.GetIPAddressCity
        qualifiedName: Kount.Ris.Response.GetIPAddressCity
      VB:
      - id: Kount.Ris.Response.GetIPAddressCity*
        name: GetIPAddressCity
        nameWithType: Response.GetIPAddressCity
        qualifiedName: Kount.Ris.Response.GetIPAddressCity
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetIPAddressCity
  Kount.Ris.Response.GetIPAddressOrganization*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetIPAddressOrganization*
        name: GetIPAddressOrganization
        nameWithType: Response.GetIPAddressOrganization
        qualifiedName: Kount.Ris.Response.GetIPAddressOrganization
      VB:
      - id: Kount.Ris.Response.GetIPAddressOrganization*
        name: GetIPAddressOrganization
        nameWithType: Response.GetIPAddressOrganization
        qualifiedName: Kount.Ris.Response.GetIPAddressOrganization
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetIPAddressOrganization
  Kount.Ris.Response.GetDateDeviceFirstSeen*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetDateDeviceFirstSeen*
        name: GetDateDeviceFirstSeen
        nameWithType: Response.GetDateDeviceFirstSeen
        qualifiedName: Kount.Ris.Response.GetDateDeviceFirstSeen
      VB:
      - id: Kount.Ris.Response.GetDateDeviceFirstSeen*
        name: GetDateDeviceFirstSeen
        nameWithType: Response.GetDateDeviceFirstSeen
        qualifiedName: Kount.Ris.Response.GetDateDeviceFirstSeen
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetDateDeviceFirstSeen
  Kount.Ris.Response.GetUserAgentString*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetUserAgentString*
        name: GetUserAgentString
        nameWithType: Response.GetUserAgentString
        qualifiedName: Kount.Ris.Response.GetUserAgentString
      VB:
      - id: Kount.Ris.Response.GetUserAgentString*
        name: GetUserAgentString
        nameWithType: Response.GetUserAgentString
        qualifiedName: Kount.Ris.Response.GetUserAgentString
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetUserAgentString
  Kount.Ris.Response.GetDeviceScreenResolution*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetDeviceScreenResolution*
        name: GetDeviceScreenResolution
        nameWithType: Response.GetDeviceScreenResolution
        qualifiedName: Kount.Ris.Response.GetDeviceScreenResolution
      VB:
      - id: Kount.Ris.Response.GetDeviceScreenResolution*
        name: GetDeviceScreenResolution
        nameWithType: Response.GetDeviceScreenResolution
        qualifiedName: Kount.Ris.Response.GetDeviceScreenResolution
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetDeviceScreenResolution
  Kount.Ris.Response.GetOS*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetOS*
        name: GetOS
        nameWithType: Response.GetOS
        qualifiedName: Kount.Ris.Response.GetOS
      VB:
      - id: Kount.Ris.Response.GetOS*
        name: GetOS
        nameWithType: Response.GetOS
        qualifiedName: Kount.Ris.Response.GetOS
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetOS
  Kount.Ris.Response.GetBrowser*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetBrowser*
        name: GetBrowser
        nameWithType: Response.GetBrowser
        qualifiedName: Kount.Ris.Response.GetBrowser
      VB:
      - id: Kount.Ris.Response.GetBrowser*
        name: GetBrowser
        nameWithType: Response.GetBrowser
        qualifiedName: Kount.Ris.Response.GetBrowser
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetBrowser
  Kount.Ris.Response.ToString*:
    name:
      CSharp:
      - id: Kount.Ris.Response.ToString*
        name: ToString
        nameWithType: Response.ToString
        qualifiedName: Kount.Ris.Response.ToString
      VB:
      - id: Kount.Ris.Response.ToString*
        name: ToString
        nameWithType: Response.ToString
        qualifiedName: Kount.Ris.Response.ToString
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.ToString
  IDictionary:
    name:
      CSharp:
      - id: IDictionary
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      VB:
      - id: IDictionary
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
    isDefinition: true
  Kount.Ris.Response.GetRulesTriggered*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetRulesTriggered*
        name: GetRulesTriggered
        nameWithType: Response.GetRulesTriggered
        qualifiedName: Kount.Ris.Response.GetRulesTriggered
      VB:
      - id: Kount.Ris.Response.GetRulesTriggered*
        name: GetRulesTriggered
        nameWithType: Response.GetRulesTriggered
        qualifiedName: Kount.Ris.Response.GetRulesTriggered
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetRulesTriggered
  Kount.Ris.Response.GetNumberRulesTriggered*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetNumberRulesTriggered*
        name: GetNumberRulesTriggered
        nameWithType: Response.GetNumberRulesTriggered
        qualifiedName: Kount.Ris.Response.GetNumberRulesTriggered
      VB:
      - id: Kount.Ris.Response.GetNumberRulesTriggered*
        name: GetNumberRulesTriggered
        nameWithType: Response.GetNumberRulesTriggered
        qualifiedName: Kount.Ris.Response.GetNumberRulesTriggered
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetNumberRulesTriggered
  List`1:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  List{System.String}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{System.String}'
  Kount.Ris.Response.GetWarnings*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetWarnings*
        name: GetWarnings
        nameWithType: Response.GetWarnings
        qualifiedName: Kount.Ris.Response.GetWarnings
      VB:
      - id: Kount.Ris.Response.GetWarnings*
        name: GetWarnings
        nameWithType: Response.GetWarnings
        qualifiedName: Kount.Ris.Response.GetWarnings
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetWarnings
  Kount.Ris.Response.GetWarningCount*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetWarningCount*
        name: GetWarningCount
        nameWithType: Response.GetWarningCount
        qualifiedName: Kount.Ris.Response.GetWarningCount
      VB:
      - id: Kount.Ris.Response.GetWarningCount*
        name: GetWarningCount
        nameWithType: Response.GetWarningCount
        qualifiedName: Kount.Ris.Response.GetWarningCount
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetWarningCount
  Kount.Ris.Response.GetErrors*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetErrors*
        name: GetErrors
        nameWithType: Response.GetErrors
        qualifiedName: Kount.Ris.Response.GetErrors
      VB:
      - id: Kount.Ris.Response.GetErrors*
        name: GetErrors
        nameWithType: Response.GetErrors
        qualifiedName: Kount.Ris.Response.GetErrors
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetErrors
  Kount.Ris.Response.GetErrorCount*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetErrorCount*
        name: GetErrorCount
        nameWithType: Response.GetErrorCount
        qualifiedName: Kount.Ris.Response.GetErrorCount
      VB:
      - id: Kount.Ris.Response.GetErrorCount*
        name: GetErrorCount
        nameWithType: Response.GetErrorCount
        qualifiedName: Kount.Ris.Response.GetErrorCount
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetErrorCount
  Kount.Ris.Response.HasErrors*:
    name:
      CSharp:
      - id: Kount.Ris.Response.HasErrors*
        name: HasErrors
        nameWithType: Response.HasErrors
        qualifiedName: Kount.Ris.Response.HasErrors
      VB:
      - id: Kount.Ris.Response.HasErrors*
        name: HasErrors
        nameWithType: Response.HasErrors
        qualifiedName: Kount.Ris.Response.HasErrors
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.HasErrors
  Kount.Ris.Response.GetLexisNexisCbdAttributes*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetLexisNexisCbdAttributes*
        name: GetLexisNexisCbdAttributes
        nameWithType: Response.GetLexisNexisCbdAttributes
        qualifiedName: Kount.Ris.Response.GetLexisNexisCbdAttributes
      VB:
      - id: Kount.Ris.Response.GetLexisNexisCbdAttributes*
        name: GetLexisNexisCbdAttributes
        nameWithType: Response.GetLexisNexisCbdAttributes
        qualifiedName: Kount.Ris.Response.GetLexisNexisCbdAttributes
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetLexisNexisCbdAttributes
  Kount.Ris.Response.GetLexisNexisInstantIdAttributes*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetLexisNexisInstantIdAttributes*
        name: GetLexisNexisInstantIdAttributes
        nameWithType: Response.GetLexisNexisInstantIdAttributes
        qualifiedName: Kount.Ris.Response.GetLexisNexisInstantIdAttributes
      VB:
      - id: Kount.Ris.Response.GetLexisNexisInstantIdAttributes*
        name: GetLexisNexisInstantIdAttributes
        nameWithType: Response.GetLexisNexisInstantIdAttributes
        qualifiedName: Kount.Ris.Response.GetLexisNexisInstantIdAttributes
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetLexisNexisInstantIdAttributes
  Kount.Ris.Response.GetCountersTriggered*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetCountersTriggered*
        name: GetCountersTriggered
        nameWithType: Response.GetCountersTriggered
        qualifiedName: Kount.Ris.Response.GetCountersTriggered
      VB:
      - id: Kount.Ris.Response.GetCountersTriggered*
        name: GetCountersTriggered
        nameWithType: Response.GetCountersTriggered
        qualifiedName: Kount.Ris.Response.GetCountersTriggered
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetCountersTriggered
  Kount.Ris.Response.GetNumberCountersTriggered*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetNumberCountersTriggered*
        name: GetNumberCountersTriggered
        nameWithType: Response.GetNumberCountersTriggered
        qualifiedName: Kount.Ris.Response.GetNumberCountersTriggered
      VB:
      - id: Kount.Ris.Response.GetNumberCountersTriggered*
        name: GetNumberCountersTriggered
        nameWithType: Response.GetNumberCountersTriggered
        qualifiedName: Kount.Ris.Response.GetNumberCountersTriggered
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetNumberCountersTriggered
  Kount.Ris.Response.GetKountCentralCustomerId*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKountCentralCustomerId*
        name: GetKountCentralCustomerId
        nameWithType: Response.GetKountCentralCustomerId
        qualifiedName: Kount.Ris.Response.GetKountCentralCustomerId
      VB:
      - id: Kount.Ris.Response.GetKountCentralCustomerId*
        name: GetKountCentralCustomerId
        nameWithType: Response.GetKountCentralCustomerId
        qualifiedName: Kount.Ris.Response.GetKountCentralCustomerId
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKountCentralCustomerId
  Kount.Ris.Response.GetKountCentralWarnings*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKountCentralWarnings*
        name: GetKountCentralWarnings
        nameWithType: Response.GetKountCentralWarnings
        qualifiedName: Kount.Ris.Response.GetKountCentralWarnings
      VB:
      - id: Kount.Ris.Response.GetKountCentralWarnings*
        name: GetKountCentralWarnings
        nameWithType: Response.GetKountCentralWarnings
        qualifiedName: Kount.Ris.Response.GetKountCentralWarnings
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKountCentralWarnings
  Kount.Ris.Response.GetKountCentralWarningCount*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKountCentralWarningCount*
        name: GetKountCentralWarningCount
        nameWithType: Response.GetKountCentralWarningCount
        qualifiedName: Kount.Ris.Response.GetKountCentralWarningCount
      VB:
      - id: Kount.Ris.Response.GetKountCentralWarningCount*
        name: GetKountCentralWarningCount
        nameWithType: Response.GetKountCentralWarningCount
        qualifiedName: Kount.Ris.Response.GetKountCentralWarningCount
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKountCentralWarningCount
  Kount.Ris.Response.GetKountCentralErrors*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKountCentralErrors*
        name: GetKountCentralErrors
        nameWithType: Response.GetKountCentralErrors
        qualifiedName: Kount.Ris.Response.GetKountCentralErrors
      VB:
      - id: Kount.Ris.Response.GetKountCentralErrors*
        name: GetKountCentralErrors
        nameWithType: Response.GetKountCentralErrors
        qualifiedName: Kount.Ris.Response.GetKountCentralErrors
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKountCentralErrors
  Kount.Ris.Response.GetKountCentralErrorCount*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKountCentralErrorCount*
        name: GetKountCentralErrorCount
        nameWithType: Response.GetKountCentralErrorCount
        qualifiedName: Kount.Ris.Response.GetKountCentralErrorCount
      VB:
      - id: Kount.Ris.Response.GetKountCentralErrorCount*
        name: GetKountCentralErrorCount
        nameWithType: Response.GetKountCentralErrorCount
        qualifiedName: Kount.Ris.Response.GetKountCentralErrorCount
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKountCentralErrorCount
  Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered*
        name: GetKountCentralNumberThresholdsTriggered
        nameWithType: Response.GetKountCentralNumberThresholdsTriggered
        qualifiedName: Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered
      VB:
      - id: Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered*
        name: GetKountCentralNumberThresholdsTriggered
        nameWithType: Response.GetKountCentralNumberThresholdsTriggered
        qualifiedName: Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKountCentralNumberThresholdsTriggered
  Kount.Ris.Response.GetKountCentralDecision*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKountCentralDecision*
        name: GetKountCentralDecision
        nameWithType: Response.GetKountCentralDecision
        qualifiedName: Kount.Ris.Response.GetKountCentralDecision
      VB:
      - id: Kount.Ris.Response.GetKountCentralDecision*
        name: GetKountCentralDecision
        nameWithType: Response.GetKountCentralDecision
        qualifiedName: Kount.Ris.Response.GetKountCentralDecision
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKountCentralDecision
  List{Kount.Ris.KcEvent}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Kount.Ris.KcEvent
        name: KcEvent
        nameWithType: KcEvent
        qualifiedName: Kount.Ris.KcEvent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Kount.Ris.KcEvent
        name: KcEvent
        nameWithType: KcEvent
        qualifiedName: Kount.Ris.KcEvent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Kount.Ris.KcEvent}'
  Kount.Ris.Response.GetKountCentralThresholdEvents*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetKountCentralThresholdEvents*
        name: GetKountCentralThresholdEvents
        nameWithType: Response.GetKountCentralThresholdEvents
        qualifiedName: Kount.Ris.Response.GetKountCentralThresholdEvents
      VB:
      - id: Kount.Ris.Response.GetKountCentralThresholdEvents*
        name: GetKountCentralThresholdEvents
        nameWithType: Response.GetKountCentralThresholdEvents
        qualifiedName: Kount.Ris.Response.GetKountCentralThresholdEvents
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetKountCentralThresholdEvents
  Kount.Ris.Response.GetPrefixedResponseDataDictionary*:
    name:
      CSharp:
      - id: Kount.Ris.Response.GetPrefixedResponseDataDictionary*
        name: GetPrefixedResponseDataDictionary
        nameWithType: Response.GetPrefixedResponseDataDictionary
        qualifiedName: Kount.Ris.Response.GetPrefixedResponseDataDictionary
      VB:
      - id: Kount.Ris.Response.GetPrefixedResponseDataDictionary*
        name: GetPrefixedResponseDataDictionary
        nameWithType: Response.GetPrefixedResponseDataDictionary
        qualifiedName: Kount.Ris.Response.GetPrefixedResponseDataDictionary
    isDefinition: true
    commentId: Overload:Kount.Ris.Response.GetPrefixedResponseDataDictionary
  Kount.Ris.RSA.Encrypt*:
    name:
      CSharp:
      - id: Kount.Ris.RSA.Encrypt*
        name: Encrypt
        nameWithType: RSA.Encrypt
        qualifiedName: Kount.Ris.RSA.Encrypt
      VB:
      - id: Kount.Ris.RSA.Encrypt*
        name: Encrypt
        nameWithType: RSA.Encrypt
        qualifiedName: Kount.Ris.RSA.Encrypt
    isDefinition: true
    commentId: Overload:Kount.Ris.RSA.Encrypt
  Kount.Ris.RSA:
    name:
      CSharp:
      - id: Kount.Ris.RSA
        name: RSA
        nameWithType: RSA
        qualifiedName: Kount.Ris.RSA
      VB:
      - id: Kount.Ris.RSA
        name: RSA
        nameWithType: RSA
        qualifiedName: Kount.Ris.RSA
    isDefinition: true
    commentId: T:Kount.Ris.RSA
  Kount.Ris.Update.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.Update.#ctor*
        name: Update
        nameWithType: Update.Update
        qualifiedName: Kount.Ris.Update.Update
      VB:
      - id: Kount.Ris.Update.#ctor*
        name: Update
        nameWithType: Update.Update
        qualifiedName: Kount.Ris.Update.Update
    isDefinition: true
    commentId: Overload:Kount.Ris.Update.#ctor
  Kount.Ris.Update.SetMode*:
    name:
      CSharp:
      - id: Kount.Ris.Update.SetMode*
        name: SetMode
        nameWithType: Update.SetMode
        qualifiedName: Kount.Ris.Update.SetMode
      VB:
      - id: Kount.Ris.Update.SetMode*
        name: SetMode
        nameWithType: Update.SetMode
        qualifiedName: Kount.Ris.Update.SetMode
    isDefinition: true
    commentId: Overload:Kount.Ris.Update.SetMode
  Kount.Ris.Update.SetTransactionId*:
    name:
      CSharp:
      - id: Kount.Ris.Update.SetTransactionId*
        name: SetTransactionId
        nameWithType: Update.SetTransactionId
        qualifiedName: Kount.Ris.Update.SetTransactionId
      VB:
      - id: Kount.Ris.Update.SetTransactionId*
        name: SetTransactionId
        nameWithType: Update.SetTransactionId
        qualifiedName: Kount.Ris.Update.SetTransactionId
    isDefinition: true
    commentId: Overload:Kount.Ris.Update.SetTransactionId
  Kount.Ris.Update.SetRefundChargeback*:
    name:
      CSharp:
      - id: Kount.Ris.Update.SetRefundChargeback*
        name: SetRefundChargeback
        nameWithType: Update.SetRefundChargeback
        qualifiedName: Kount.Ris.Update.SetRefundChargeback
      VB:
      - id: Kount.Ris.Update.SetRefundChargeback*
        name: SetRefundChargeback
        nameWithType: Update.SetRefundChargeback
        qualifiedName: Kount.Ris.Update.SetRefundChargeback
    isDefinition: true
    commentId: Overload:Kount.Ris.Update.SetRefundChargeback
  Kount.Ris.Update.SetPayPalId*:
    name:
      CSharp:
      - id: Kount.Ris.Update.SetPayPalId*
        name: SetPayPalId
        nameWithType: Update.SetPayPalId
        qualifiedName: Kount.Ris.Update.SetPayPalId
      VB:
      - id: Kount.Ris.Update.SetPayPalId*
        name: SetPayPalId
        nameWithType: Update.SetPayPalId
        qualifiedName: Kount.Ris.Update.SetPayPalId
    isDefinition: true
    commentId: Overload:Kount.Ris.Update.SetPayPalId
  Kount.Ris.Update:
    name:
      CSharp:
      - id: Kount.Ris.Update
        name: Update
        nameWithType: Update
        qualifiedName: Kount.Ris.Update
      VB:
      - id: Kount.Ris.Update
        name: Update
        nameWithType: Update
        qualifiedName: Kount.Ris.Update
    isDefinition: true
    commentId: T:Kount.Ris.Update
  Kount.Ris.ValidationError.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.ValidationError.#ctor*
        name: ValidationError
        nameWithType: ValidationError.ValidationError
        qualifiedName: Kount.Ris.ValidationError.ValidationError
      VB:
      - id: Kount.Ris.ValidationError.#ctor*
        name: ValidationError
        nameWithType: ValidationError.ValidationError
        qualifiedName: Kount.Ris.ValidationError.ValidationError
    isDefinition: true
    commentId: Overload:Kount.Ris.ValidationError.#ctor
  Kount.Ris.ValidationError.ToString*:
    name:
      CSharp:
      - id: Kount.Ris.ValidationError.ToString*
        name: ToString
        nameWithType: ValidationError.ToString
        qualifiedName: Kount.Ris.ValidationError.ToString
      VB:
      - id: Kount.Ris.ValidationError.ToString*
        name: ToString
        nameWithType: ValidationError.ToString
        qualifiedName: Kount.Ris.ValidationError.ToString
    isDefinition: true
    commentId: Overload:Kount.Ris.ValidationError.ToString
  Kount.Ris.ValidationError:
    name:
      CSharp:
      - id: Kount.Ris.ValidationError
        name: ValidationError
        nameWithType: ValidationError
        qualifiedName: Kount.Ris.ValidationError
      VB:
      - id: Kount.Ris.ValidationError
        name: ValidationError
        nameWithType: ValidationError
        qualifiedName: Kount.Ris.ValidationError
    isDefinition: true
    commentId: T:Kount.Ris.ValidationError
  Kount.Ris.ValidationException.#ctor*:
    name:
      CSharp:
      - id: Kount.Ris.ValidationException.#ctor*
        name: ValidationException
        nameWithType: ValidationException.ValidationException
        qualifiedName: Kount.Ris.ValidationException.ValidationException
      VB:
      - id: Kount.Ris.ValidationException.#ctor*
        name: ValidationException
        nameWithType: ValidationException.ValidationException
        qualifiedName: Kount.Ris.ValidationException.ValidationException
    isDefinition: true
    commentId: Overload:Kount.Ris.ValidationException.#ctor
  Kount.Ris.ValidationException.ErrorMessage*:
    name:
      CSharp:
      - id: Kount.Ris.ValidationException.ErrorMessage*
        name: ErrorMessage
        nameWithType: ValidationException.ErrorMessage
        qualifiedName: Kount.Ris.ValidationException.ErrorMessage
      VB:
      - id: Kount.Ris.ValidationException.ErrorMessage*
        name: ErrorMessage
        nameWithType: ValidationException.ErrorMessage
        qualifiedName: Kount.Ris.ValidationException.ErrorMessage
    isDefinition: true
    commentId: Overload:Kount.Ris.ValidationException.ErrorMessage
  Kount.Ris.ValidationException:
    name:
      CSharp:
      - id: Kount.Ris.ValidationException
        name: ValidationException
        nameWithType: ValidationException
        qualifiedName: Kount.Ris.ValidationException
      VB:
      - id: Kount.Ris.ValidationException
        name: ValidationException
        nameWithType: ValidationException
        qualifiedName: Kount.Ris.ValidationException
    isDefinition: true
    commentId: T:Kount.Ris.ValidationException
  Kount.SimpleLogger.File.SdkElapsed*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.SdkElapsed*
        name: SdkElapsed
        nameWithType: File.SdkElapsed
        qualifiedName: Kount.SimpleLogger.File.SdkElapsed
      VB:
      - id: Kount.SimpleLogger.File.SdkElapsed*
        name: SdkElapsed
        nameWithType: File.SdkElapsed
        qualifiedName: Kount.SimpleLogger.File.SdkElapsed
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.SdkElapsed
  Kount.SimpleLogger.File.#ctor*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.#ctor*
        name: File
        nameWithType: File.File
        qualifiedName: Kount.SimpleLogger.File.File
      VB:
      - id: Kount.SimpleLogger.File.#ctor*
        name: File
        nameWithType: File.File
        qualifiedName: Kount.SimpleLogger.File.File
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.#ctor
  Kount.SimpleLogger.File.Debug*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.Debug*
        name: Debug
        nameWithType: File.Debug
        qualifiedName: Kount.SimpleLogger.File.Debug
      VB:
      - id: Kount.SimpleLogger.File.Debug*
        name: Debug
        nameWithType: File.Debug
        qualifiedName: Kount.SimpleLogger.File.Debug
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.Debug
  Kount.SimpleLogger.File.Info*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.Info*
        name: Info
        nameWithType: File.Info
        qualifiedName: Kount.SimpleLogger.File.Info
      VB:
      - id: Kount.SimpleLogger.File.Info*
        name: Info
        nameWithType: File.Info
        qualifiedName: Kount.SimpleLogger.File.Info
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.Info
  Kount.SimpleLogger.File.Warn*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.Warn*
        name: Warn
        nameWithType: File.Warn
        qualifiedName: Kount.SimpleLogger.File.Warn
      VB:
      - id: Kount.SimpleLogger.File.Warn*
        name: Warn
        nameWithType: File.Warn
        qualifiedName: Kount.SimpleLogger.File.Warn
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.Warn
  Kount.SimpleLogger.File.Error*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.Error*
        name: Error
        nameWithType: File.Error
        qualifiedName: Kount.SimpleLogger.File.Error
      VB:
      - id: Kount.SimpleLogger.File.Error*
        name: Error
        nameWithType: File.Error
        qualifiedName: Kount.SimpleLogger.File.Error
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.Error
  Kount.SimpleLogger.File.Fatal*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.Fatal*
        name: Fatal
        nameWithType: File.Fatal
        qualifiedName: Kount.SimpleLogger.File.Fatal
      VB:
      - id: Kount.SimpleLogger.File.Fatal*
        name: Fatal
        nameWithType: File.Fatal
        qualifiedName: Kount.SimpleLogger.File.Fatal
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.Fatal
  Kount.SimpleLogger.File.ProcessMessage*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.ProcessMessage*
        name: ProcessMessage
        nameWithType: File.ProcessMessage
        qualifiedName: Kount.SimpleLogger.File.ProcessMessage
      VB:
      - id: Kount.SimpleLogger.File.ProcessMessage*
        name: ProcessMessage
        nameWithType: File.ProcessMessage
        qualifiedName: Kount.SimpleLogger.File.ProcessMessage
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.ProcessMessage
  Kount.SimpleLogger.File.FormatMessage*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.FormatMessage*
        name: FormatMessage
        nameWithType: File.FormatMessage
        qualifiedName: Kount.SimpleLogger.File.FormatMessage
      VB:
      - id: Kount.SimpleLogger.File.FormatMessage*
        name: FormatMessage
        nameWithType: File.FormatMessage
        qualifiedName: Kount.SimpleLogger.File.FormatMessage
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.FormatMessage
  Kount.SimpleLogger.File.Log*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.Log*
        name: Log
        nameWithType: File.Log
        qualifiedName: Kount.SimpleLogger.File.Log
      VB:
      - id: Kount.SimpleLogger.File.Log*
        name: Log
        nameWithType: File.Log
        qualifiedName: Kount.SimpleLogger.File.Log
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.Log
  Kount.SimpleLogger.File.IsLoggable*:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File.IsLoggable*
        name: IsLoggable
        nameWithType: File.IsLoggable
        qualifiedName: Kount.SimpleLogger.File.IsLoggable
      VB:
      - id: Kount.SimpleLogger.File.IsLoggable*
        name: IsLoggable
        nameWithType: File.IsLoggable
        qualifiedName: Kount.SimpleLogger.File.IsLoggable
    isDefinition: true
    commentId: Overload:Kount.SimpleLogger.File.IsLoggable
  Kount.SimpleLogger.File:
    name:
      CSharp:
      - id: Kount.SimpleLogger.File
        name: File
        nameWithType: File
        qualifiedName: Kount.SimpleLogger.File
      VB:
      - id: Kount.SimpleLogger.File
        name: File
        nameWithType: File
        qualifiedName: Kount.SimpleLogger.File
    isDefinition: true
    commentId: T:Kount.SimpleLogger.File
  Kount.SimpleLogger:
    name:
      CSharp:
      - name: Kount.SimpleLogger
        nameWithType: Kount.SimpleLogger
        qualifiedName: Kount.SimpleLogger
      VB:
      - name: Kount.SimpleLogger
        nameWithType: Kount.SimpleLogger
        qualifiedName: Kount.SimpleLogger
    isDefinition: true
    commentId: N:Kount.SimpleLogger
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Kount.Util.Base85.Decode*:
    name:
      CSharp:
      - id: Kount.Util.Base85.Decode*
        name: Decode
        nameWithType: Base85.Decode
        qualifiedName: Kount.Util.Base85.Decode
      VB:
      - id: Kount.Util.Base85.Decode*
        name: Decode
        nameWithType: Base85.Decode
        qualifiedName: Kount.Util.Base85.Decode
    isDefinition: true
    commentId: Overload:Kount.Util.Base85.Decode
  Kount.Util.Base85.Encode*:
    name:
      CSharp:
      - id: Kount.Util.Base85.Encode*
        name: Encode
        nameWithType: Base85.Encode
        qualifiedName: Kount.Util.Base85.Encode
      VB:
      - id: Kount.Util.Base85.Encode*
        name: Encode
        nameWithType: Base85.Encode
        qualifiedName: Kount.Util.Base85.Encode
    isDefinition: true
    commentId: Overload:Kount.Util.Base85.Encode
  Kount.Util.Base85:
    name:
      CSharp:
      - id: Kount.Util.Base85
        name: Base85
        nameWithType: Base85
        qualifiedName: Kount.Util.Base85
      VB:
      - id: Kount.Util.Base85
        name: Base85
        nameWithType: Base85
        qualifiedName: Kount.Util.Base85
    isDefinition: true
    commentId: T:Kount.Util.Base85
  Kount.Util.Khash.ConfigKey*:
    name:
      CSharp:
      - id: Kount.Util.Khash.ConfigKey*
        name: ConfigKey
        nameWithType: Khash.ConfigKey
        qualifiedName: Kount.Util.Khash.ConfigKey
      VB:
      - id: Kount.Util.Khash.ConfigKey*
        name: ConfigKey
        nameWithType: Khash.ConfigKey
        qualifiedName: Kount.Util.Khash.ConfigKey
    isDefinition: true
    commentId: Overload:Kount.Util.Khash.ConfigKey
  Kount.Util.Khash.HashPaymentToken*:
    name:
      CSharp:
      - id: Kount.Util.Khash.HashPaymentToken*
        name: HashPaymentToken
        nameWithType: Khash.HashPaymentToken
        qualifiedName: Kount.Util.Khash.HashPaymentToken
      VB:
      - id: Kount.Util.Khash.HashPaymentToken*
        name: HashPaymentToken
        nameWithType: Khash.HashPaymentToken
        qualifiedName: Kount.Util.Khash.HashPaymentToken
    isDefinition: true
    commentId: Overload:Kount.Util.Khash.HashPaymentToken
  Kount.Util.Khash.HashGiftCard*:
    name:
      CSharp:
      - id: Kount.Util.Khash.HashGiftCard*
        name: HashGiftCard
        nameWithType: Khash.HashGiftCard
        qualifiedName: Kount.Util.Khash.HashGiftCard
      VB:
      - id: Kount.Util.Khash.HashGiftCard*
        name: HashGiftCard
        nameWithType: Khash.HashGiftCard
        qualifiedName: Kount.Util.Khash.HashGiftCard
    isDefinition: true
    commentId: Overload:Kount.Util.Khash.HashGiftCard
  Kount.Util.Khash.Hash*:
    name:
      CSharp:
      - id: Kount.Util.Khash.Hash*
        name: Hash
        nameWithType: Khash.Hash
        qualifiedName: Kount.Util.Khash.Hash
      VB:
      - id: Kount.Util.Khash.Hash*
        name: Hash
        nameWithType: Khash.Hash
        qualifiedName: Kount.Util.Khash.Hash
    isDefinition: true
    commentId: Overload:Kount.Util.Khash.Hash
  Kount.Util.Khash.GetBase85ConfigKey*:
    name:
      CSharp:
      - id: Kount.Util.Khash.GetBase85ConfigKey*
        name: GetBase85ConfigKey
        nameWithType: Khash.GetBase85ConfigKey
        qualifiedName: Kount.Util.Khash.GetBase85ConfigKey
      VB:
      - id: Kount.Util.Khash.GetBase85ConfigKey*
        name: GetBase85ConfigKey
        nameWithType: Khash.GetBase85ConfigKey
        qualifiedName: Kount.Util.Khash.GetBase85ConfigKey
    isDefinition: true
    commentId: Overload:Kount.Util.Khash.GetBase85ConfigKey
  Kount.Util.Khash:
    name:
      CSharp:
      - id: Kount.Util.Khash
        name: Khash
        nameWithType: Khash
        qualifiedName: Kount.Util.Khash
      VB:
      - id: Kount.Util.Khash
        name: Khash
        nameWithType: Khash
        qualifiedName: Kount.Util.Khash
    isDefinition: true
    commentId: T:Kount.Util.Khash
  Kount.Util:
    name:
      CSharp:
      - name: Kount.Util
        nameWithType: Kount.Util
        qualifiedName: Kount.Util
      VB:
      - name: Kount.Util
        nameWithType: Kount.Util
        qualifiedName: Kount.Util
    isDefinition: true
    commentId: N:Kount.Util
